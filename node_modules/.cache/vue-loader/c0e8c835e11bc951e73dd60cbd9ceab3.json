{"remainingRequest":"C:\\Users\\Brezgo-1098\\Desktop\\brezz\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\Brezgo-1098\\Desktop\\brezz\\src\\components\\app-video.vue?vue&type=script&lang=js&","dependencies":[{"path":"C:\\Users\\Brezgo-1098\\Desktop\\brezz\\src\\components\\app-video.vue","mtime":1587032502000},{"path":"C:\\Users\\Brezgo-1098\\Desktop\\brezz\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\Brezgo-1098\\Desktop\\brezz\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"C:\\Users\\Brezgo-1098\\Desktop\\brezz\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\Brezgo-1098\\Desktop\\brezz\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ly8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KCmNvbnN0IGxvZyA9IHJlcXVpcmUoJ2RlYnVnJykoJ2FwcDphcHAtcGVlcicpCgphc3luYyBmdW5jdGlvbiBjb25uZWN0U3RyZWFtVG9WaWRlb0VsZW1lbnQoc3RyZWFtLCB2aWRlbykgewogIGxvZygnY29ubmVjdFN0cmVhbVRvVmlkZW9FbGVtZW50Jywgc3RyZWFtLCB2aWRlbykKICBpZiAoc3RyZWFtKSB7CiAgICBpZiAoJ3NyY09iamVjdCcgaW4gdmlkZW8pIHsKICAgICAgdmlkZW8uc3JjT2JqZWN0ID0gc3RyZWFtCiAgICB9IGVsc2UgewogICAgICB2aWRlby5zcmMgPSB3aW5kb3cuVVJMLmNyZWF0ZU9iamVjdFVSTChzdHJlYW0pIC8vIGZvciBvbGRlciBicm93c2VycwogICAgfQogICAgdmlkZW8ub25sb2FkZWRtZXRhZGF0YSA9IGZ1bmN0aW9uIChlKSB7CiAgICAgIHZpZGVvLnBsYXkoKQogICAgfQogICAgLy8gc2V0SW50ZXJ2YWwoYXN5bmMgKCkgPT4gewogICAgLy8gICB0cnkgewogICAgLy8gICAgIGxldCByZXN1bHQgPSBhd2FpdCB2aWRlby5wbGF5KCkKICAgIC8vICAgICBsb2coJ3BsYXkgb2snLCByZXN1bHQpCiAgICAvLyAgIH0gY2F0Y2ggKGVycikgewogICAgLy8gICAgIGxvZygncGxheSBlcnJvcicsIGVycikKICAgIC8vICAgfQogICAgLy8gfSwgMTAwMCkKICB9Cn0KCmV4cG9ydCBkZWZhdWx0IHsKICBuYW1lOiAnYXBwLXZpZGVvJywKCiAgcHJvcHM6IHsKICAgIHN0cmVhbTogewogICAgICB0eXBlOiBNZWRpYVN0cmVhbSB8IE9iamVjdCwKICAgICAgZGVmYXVsdDogbnVsbCwKICAgIH0sCiAgICBhY3RpdmU6IHsKICAgICAgdHlwZTogQm9vbGVhbiwKICAgICAgZGVmYXVsdDogZmFsc2UsCiAgICB9LAogICAgbXV0ZWQ6IHsKICAgICAgdHlwZTogQm9vbGVhbiwKICAgICAgZGVmYXVsdDogZmFsc2UsCiAgICB9LAogICAgdGl0bGU6IHsKICAgICAgdHlwZTogU3RyaW5nLAogICAgfSwKICAgIG1pcnJvcmVkOiB7CiAgICAgIHR5cGU6IEJvb2xlYW4sCiAgICAgIGRlZmF1bHQ6IGZhbHNlLAogICAgfSwKICB9LAogIGRhdGEoKSB7CiAgICByZXR1cm4ge30KICB9LAogIG1ldGhvZHM6IHsKICAgIGFzeW5jIGRvQ29ubmVjdFN0cmVhbShzdHJlYW0pIHsKICAgICAgbG9nKCdkb0Nvbm5lY3RTdHJlYW0nLCB0aGlzLnRpdGxlLCBzdHJlYW0pCiAgICAgIGlmIChzdHJlYW0pIHsKICAgICAgICBhd2FpdCB0aGlzLiRuZXh0VGljaygpCiAgICAgICAgYXdhaXQgY29ubmVjdFN0cmVhbVRvVmlkZW9FbGVtZW50KHN0cmVhbSwgdGhpcy4kcmVmcy52aWRlbykKICAgICAgICAvLyBzdHJlYW0ub25hZGR0cmFjayA9IGFzeW5jICgpID0+IGF3YWl0IGNvbm5lY3RTdHJlYW1Ub1ZpZGVvRWxlbWVudChzdHJlYW0sIHRoaXMuJHJlZnMudmlkZW8pCiAgICAgICAgLy8gc3RyZWFtLm9ucmVtb3ZldHJhY2sgPSBhc3luYyAoKSA9PiBhd2FpdCBjb25uZWN0U3RyZWFtVG9WaWRlb0VsZW1lbnQoc3RyZWFtLCB0aGlzLiRyZWZzLnZpZGVvKQogICAgICB9CiAgICB9LAogIH0sCiAgYXN5bmMgbW91bnRlZCgpIHsKICAgIC8vIHdlYnJ0Yy5vbignc3RyZWFtJywgYXN5bmMgKCkgPT4gewogICAgLy8gICBhd2FpdCB0aGlzLiRuZXh0VGljaygpCiAgICAvLyAgIGF3YWl0IHRoaXMuZG9Db25uZWN0U3RyZWFtKHRoaXMuc3RyZWFtKQogICAgLy8gfSkKICAgIGF3YWl0IHRoaXMuZG9Db25uZWN0U3RyZWFtKHRoaXMuc3RyZWFtKQogIH0sCiAgd2F0Y2g6IHsKICAgIHN0cmVhbSh2YWx1ZSkgewogICAgICB0aGlzLmRvQ29ubmVjdFN0cmVhbSh2YWx1ZSkKICAgIH0sCiAgfSwKfQo="},{"version":3,"sources":["app-video.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;AAkBA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"app-video.vue","sourceRoot":"src/components","sourcesContent":["<template>\n  <div class=\"peer item\">\n    <video\n      class=\"video\"\n      ref=\"video\"\n      autoplay\n      playsinline\n      :muted=\"muted\"\n      v-if=\"stream\"\n      :class=\"{'-mirrored': mirrored}\"\n    />\n    <div v-else class=\"video video-placeholder -content-placeholder\">\n      <i data-f7-icon=\"rectangle_stack_person_crop\"></i>\n    </div>\n  </div>\n</template>\n\n<script>\nconst log = require('debug')('app:app-peer')\n\nasync function connectStreamToVideoElement(stream, video) {\n  log('connectStreamToVideoElement', stream, video)\n  if (stream) {\n    if ('srcObject' in video) {\n      video.srcObject = stream\n    } else {\n      video.src = window.URL.createObjectURL(stream) // for older browsers\n    }\n    video.onloadedmetadata = function (e) {\n      video.play()\n    }\n    // setInterval(async () => {\n    //   try {\n    //     let result = await video.play()\n    //     log('play ok', result)\n    //   } catch (err) {\n    //     log('play error', err)\n    //   }\n    // }, 1000)\n  }\n}\n\nexport default {\n  name: 'app-video',\n\n  props: {\n    stream: {\n      type: MediaStream | Object,\n      default: null,\n    },\n    active: {\n      type: Boolean,\n      default: false,\n    },\n    muted: {\n      type: Boolean,\n      default: false,\n    },\n    title: {\n      type: String,\n    },\n    mirrored: {\n      type: Boolean,\n      default: false,\n    },\n  },\n  data() {\n    return {}\n  },\n  methods: {\n    async doConnectStream(stream) {\n      log('doConnectStream', this.title, stream)\n      if (stream) {\n        await this.$nextTick()\n        await connectStreamToVideoElement(stream, this.$refs.video)\n        // stream.onaddtrack = async () => await connectStreamToVideoElement(stream, this.$refs.video)\n        // stream.onremovetrack = async () => await connectStreamToVideoElement(stream, this.$refs.video)\n      }\n    },\n  },\n  async mounted() {\n    // webrtc.on('stream', async () => {\n    //   await this.$nextTick()\n    //   await this.doConnectStream(this.stream)\n    // })\n    await this.doConnectStream(this.stream)\n  },\n  watch: {\n    stream(value) {\n      this.doConnectStream(value)\n    },\n  },\n}\n</script>\n\n"]}]}