{"remainingRequest":"C:\\Users\\Brezgo-1098\\Desktop\\brezz\\node_modules\\babel-loader\\lib\\index.js!C:\\Users\\Brezgo-1098\\Desktop\\brezz\\src\\ui\\lib\\directives\\trapFocus.js","dependencies":[{"path":"C:\\Users\\Brezgo-1098\\Desktop\\brezz\\src\\ui\\lib\\directives\\trapFocus.js","mtime":1587032502000},{"path":"C:\\Users\\Brezgo-1098\\Desktop\\brezz\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\Brezgo-1098\\Desktop\\brezz\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuYXJyYXkuZmluZC1pbmRleCI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL2VzLmFycmF5LmZyb20iOwppbXBvcnQgImNvcmUtanMvbW9kdWxlcy9lcy5zdHJpbmcuaXRlcmF0b3IiOwppbXBvcnQgImNvcmUtanMvbW9kdWxlcy9lcy5zdHJpbmcudHJpbSI7CgovLyBDb3B5cmlnaHQgKGMpIDIwMjAgRGlyayBIb2x0d2ljay4gQWxsIHJpZ2h0cyByZXNlcnZlZC4gaHR0cHM6Ly9ob2x0d2ljay5kZS9jb3B5cmlnaHQKdmFyIGxvZyA9IHJlcXVpcmUoJ2RlYnVnJykoJ2FwcDp0cmFwRm9jdXMnKTsKCnZhciBmaW5kRm9jdXNhYmxlID0gZnVuY3Rpb24gZmluZEZvY3VzYWJsZShlbGVtZW50KSB7CiAgaWYgKCFlbGVtZW50KSB7CiAgICByZXR1cm4gbnVsbDsKICB9CgogIHJldHVybiBlbGVtZW50LnF1ZXJ5U2VsZWN0b3JBbGwoIlxuICAgIGFbaHJlZl0sXG4gICAgYXJlYVtocmVmXSxcbiAgICBpbnB1dDpub3QoW2Rpc2FibGVkXSksXG4gICAgc2VsZWN0Om5vdChbZGlzYWJsZWRdKSxcbiAgICB0ZXh0YXJlYTpub3QoW2Rpc2FibGVkXSksXG4gICAgYnV0dG9uOm5vdChbZGlzYWJsZWRdKSxcbiAgICBpZnJhbWUsXG4gICAgb2JqZWN0LFxuICAgIGVtYmVkLFxuICAgICpbdGFiaW5kZXhdLFxuICAgICpbY29udGVudGVkaXRhYmxlXVxuICAgICIudHJpbSgpKTsgLy8gICAgIC5zZWEtYnV0dG9uLAogIC8vICAgICAuc2VhLWxpbmssCn07Cgp2YXIgb25LZXlEb3duOwoKdmFyIGJpbmQgPSBmdW5jdGlvbiBiaW5kKGVsLCBfcmVmKSB7CiAgdmFyIF9yZWYkdmFsdWUgPSBfcmVmLnZhbHVlLAogICAgICB2YWx1ZSA9IF9yZWYkdmFsdWUgPT09IHZvaWQgMCA/IHRydWUgOiBfcmVmJHZhbHVlOwoKICBpZiAodmFsdWUgJiYgZWwpIHsKICAgIG9uS2V5RG93biA9IGZ1bmN0aW9uIG9uS2V5RG93bihldmVudCkgewogICAgICBsb2coJ3RyYXBwZWQnKTsKICAgICAgdmFyIGZvY3VzYWJsZSA9IEFycmF5LmZyb20oZmluZEZvY3VzYWJsZShlbCkpOwogICAgICB2YXIgY3VycmVudEZvY3VzID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcignOmZvY3VzJyk7CiAgICAgIHZhciBpbmRleCA9IGZvY3VzYWJsZS5maW5kSW5kZXgoZnVuY3Rpb24gKGYpIHsKICAgICAgICByZXR1cm4gZi5pc1NhbWVOb2RlKGN1cnJlbnRGb2N1cyk7CiAgICAgIH0pOwogICAgICB2YXIgbGVuZ3RoID0gZm9jdXNhYmxlLmxlbmd0aDsKICAgICAgbG9nKCdkaWMnLCBmb2N1c2FibGUsIGN1cnJlbnRGb2N1cywgaW5kZXgpOwoKICAgICAgaWYgKGV2ZW50LmtleSA9PT0gJ1RhYicpIHsKICAgICAgICBldmVudC5wcmV2ZW50RGVmYXVsdCgpOwoKICAgICAgICBpZiAoIWV2ZW50LnNoaWZ0S2V5KSB7CiAgICAgICAgICArK2luZGV4OwogICAgICAgICAgaWYgKGluZGV4ID49IGxlbmd0aCkgaW5kZXggPSAwOwogICAgICAgIH0gZWxzZSB7CiAgICAgICAgICAtLWluZGV4OwogICAgICAgICAgaWYgKGluZGV4IDw9IDApIGluZGV4ID0gbGVuZ3RoIC0gMTsKICAgICAgICB9CgogICAgICAgIGxvZygnaW5kZXgnLCBpbmRleCwgbGVuZ3RoKTsKICAgICAgICBmb2N1c2FibGVbaW5kZXhdLmZvY3VzKCk7CiAgICAgIH0KICAgIH07CgogICAgZWwuYWRkRXZlbnRMaXN0ZW5lcigna2V5ZG93bicsIG9uS2V5RG93bik7CiAgfQp9OwoKdmFyIHVuYmluZCA9IGZ1bmN0aW9uIHVuYmluZChlbCkgewogIGVsID09PSBudWxsIHx8IGVsID09PSB2b2lkIDAgPyB2b2lkIDAgOiBlbC5yZW1vdmVFdmVudExpc3RlbmVyKCdrZXlkb3duJywgb25LZXlEb3duKTsKfTsKCnZhciBkaXJlY3RpdmUgPSB7CiAgYmluZDogYmluZCwKICB1bmJpbmQ6IHVuYmluZAp9OwpleHBvcnQgZGVmYXVsdCBkaXJlY3RpdmU7"},{"version":3,"sources":["C:/Users/Brezgo-1098/Desktop/brezz/src/ui/lib/directives/trapFocus.js"],"names":["log","require","findFocusable","element","querySelectorAll","trim","onKeyDown","bind","el","value","event","focusable","Array","from","currentFocus","document","querySelector","index","findIndex","f","isSameNode","length","key","preventDefault","shiftKey","focus","addEventListener","unbind","removeEventListener","directive"],"mappings":";;;;;AAAA;AAEA,IAAMA,GAAG,GAAGC,OAAO,CAAC,OAAD,CAAP,CAAiB,eAAjB,CAAZ;;AAEA,IAAMC,aAAa,GAAG,SAAhBA,aAAgB,CAACC,OAAD,EAAa;AACjC,MAAI,CAACA,OAAL,EAAc;AACZ,WAAO,IAAP;AACD;;AACD,SAAOA,OAAO,CAACC,gBAAR,CAAyB,6OAY5BC,IAZ4B,EAAzB,CAAP,CAJiC,CAiBjC;AACA;AACD,CAnBD;;AAqBA,IAAIC,SAAJ;;AAEA,IAAMC,IAAI,GAAG,SAAPA,IAAO,CAACC,EAAD,QAA0B;AAAA,wBAAnBC,KAAmB;AAAA,MAAnBA,KAAmB,2BAAX,IAAW;;AACrC,MAAIA,KAAK,IAAID,EAAb,EAAiB;AACfF,IAAAA,SAAS,GAAG,mBAACI,KAAD,EAAW;AACrBV,MAAAA,GAAG,CAAC,SAAD,CAAH;AACA,UAAMW,SAAS,GAAGC,KAAK,CAACC,IAAN,CAAWX,aAAa,CAACM,EAAD,CAAxB,CAAlB;AACA,UAAIM,YAAY,GAAGC,QAAQ,CAACC,aAAT,CAAuB,QAAvB,CAAnB;AACA,UAAIC,KAAK,GAAGN,SAAS,CAACO,SAAV,CAAoB,UAAAC,CAAC;AAAA,eAAIA,CAAC,CAACC,UAAF,CAAaN,YAAb,CAAJ;AAAA,OAArB,CAAZ;AACA,UAAIO,MAAM,GAAGV,SAAS,CAACU,MAAvB;AACArB,MAAAA,GAAG,CAAC,KAAD,EAAQW,SAAR,EAAmBG,YAAnB,EAAiCG,KAAjC,CAAH;;AAEA,UAAIP,KAAK,CAACY,GAAN,KAAc,KAAlB,EAAyB;AACvBZ,QAAAA,KAAK,CAACa,cAAN;;AACA,YAAI,CAACb,KAAK,CAACc,QAAX,EAAqB;AACnB,YAAEP,KAAF;AACA,cAAIA,KAAK,IAAII,MAAb,EAAqBJ,KAAK,GAAG,CAAR;AACtB,SAHD,MAGO;AACL,YAAEA,KAAF;AACA,cAAIA,KAAK,IAAI,CAAb,EAAgBA,KAAK,GAAGI,MAAM,GAAG,CAAjB;AACjB;;AACDrB,QAAAA,GAAG,CAAC,OAAD,EAAUiB,KAAV,EAAiBI,MAAjB,CAAH;AACAV,QAAAA,SAAS,CAACM,KAAD,CAAT,CAAiBQ,KAAjB;AACD;AACF,KApBD;;AAqBAjB,IAAAA,EAAE,CAACkB,gBAAH,CAAoB,SAApB,EAA+BpB,SAA/B;AACD;AACF,CAzBD;;AA2BA,IAAMqB,MAAM,GAAG,SAATA,MAAS,CAACnB,EAAD,EAAQ;AACrBA,EAAAA,EAAE,SAAF,IAAAA,EAAE,WAAF,YAAAA,EAAE,CAAEoB,mBAAJ,CAAwB,SAAxB,EAAmCtB,SAAnC;AACD,CAFD;;AAIA,IAAMuB,SAAS,GAAG;AAChBtB,EAAAA,IAAI,EAAJA,IADgB;AAEhBoB,EAAAA,MAAM,EAANA;AAFgB,CAAlB;AAKA,eAAeE,SAAf","sourcesContent":["// Copyright (c) 2020 Dirk Holtwick. All rights reserved. https://holtwick.de/copyright\n\nconst log = require('debug')('app:trapFocus')\n\nconst findFocusable = (element) => {\n  if (!element) {\n    return null\n  }\n  return element.querySelectorAll(`\n    a[href],\n    area[href],\n    input:not([disabled]),\n    select:not([disabled]),\n    textarea:not([disabled]),\n    button:not([disabled]),\n    iframe,\n    object,\n    embed,\n    *[tabindex],\n    *[contenteditable]\n    `.trim())\n  //     .sea-button,\n  //     .sea-link,\n}\n\nlet onKeyDown\n\nconst bind = (el, { value = true }) => {\n  if (value && el) {\n    onKeyDown = (event) => {\n      log('trapped')\n      const focusable = Array.from(findFocusable(el))\n      let currentFocus = document.querySelector(':focus')\n      let index = focusable.findIndex(f => f.isSameNode(currentFocus))\n      let length = focusable.length\n      log('dic', focusable, currentFocus, index)\n\n      if (event.key === 'Tab') {\n        event.preventDefault()\n        if (!event.shiftKey) {\n          ++index\n          if (index >= length) index = 0\n        } else {\n          --index\n          if (index <= 0) index = length - 1\n        }\n        log('index', index, length)\n        focusable[index].focus()\n      }\n    }\n    el.addEventListener('keydown', onKeyDown)\n  }\n}\n\nconst unbind = (el) => {\n  el?.removeEventListener('keydown', onKeyDown)\n}\n\nconst directive = {\n  bind,\n  unbind,\n}\n\nexport default directive\n"]}]}