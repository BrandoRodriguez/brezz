{"remainingRequest":"C:\\Users\\Brezgo-1098\\Desktop\\brezz\\node_modules\\babel-loader\\lib\\index.js!C:\\Users\\Brezgo-1098\\Desktop\\brezz\\src\\lib\\base.js","dependencies":[{"path":"C:\\Users\\Brezgo-1098\\Desktop\\brezz\\src\\lib\\base.js","mtime":1587032502000},{"path":"C:\\Users\\Brezgo-1098\\Desktop\\brezz\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\Brezgo-1098\\Desktop\\brezz\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuYXJyYXkuY29uY2F0IjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuYXJyYXkuZm9yLWVhY2giOwppbXBvcnQgImNvcmUtanMvbW9kdWxlcy9lcy5hcnJheS5pcy1hcnJheSI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL2VzLm9iamVjdC5rZXlzIjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvd2ViLmRvbS1jb2xsZWN0aW9ucy5mb3ItZWFjaCI7CmltcG9ydCBfdHlwZW9mIGZyb20gIkM6XFxVc2Vyc1xcQnJlemdvLTEwOThcXERlc2t0b3BcXGJyZXp6XFxub2RlX21vZHVsZXNcXEBiYWJlbFxccnVudGltZS9oZWxwZXJzL2VzbS90eXBlb2YiOwpleHBvcnQgZnVuY3Rpb24gY2xvbmVPYmplY3Qob2JqKSB7CiAgdHJ5IHsKICAgIGlmIChfdHlwZW9mKG9iaikgPT09ICdvYmplY3QnKSB7CiAgICAgIHJldHVybiBKU09OLnBhcnNlKEpTT04uc3RyaW5naWZ5KG9iaikpOwogICAgfQoKICAgIHJldHVybiBvYmo7CiAgfSBjYXRjaCAoZXJyKSB7CiAgICBsb2coJ2Nsb25lT2JqZWN0IGVycm9yOicsIGVycik7CiAgfQoKICByZXR1cm4gbnVsbDsKfQpleHBvcnQgZnVuY3Rpb24gbWVyZ2VEZWVwKHRhcmdldCwgc291cmNlKSB7CiAgdmFyIGlzT2JqZWN0ID0gZnVuY3Rpb24gaXNPYmplY3Qob2JqKSB7CiAgICByZXR1cm4gb2JqICYmIF90eXBlb2Yob2JqKSA9PT0gJ29iamVjdCc7CiAgfTsKCiAgaWYgKCFpc09iamVjdCh0YXJnZXQpIHx8ICFpc09iamVjdChzb3VyY2UpKSB7CiAgICByZXR1cm4gc291cmNlOwogIH0KCiAgT2JqZWN0LmtleXMoc291cmNlKS5mb3JFYWNoKGZ1bmN0aW9uIChrZXkpIHsKICAgIHZhciB0YXJnZXRWYWx1ZSA9IHRhcmdldFtrZXldOwogICAgdmFyIHNvdXJjZVZhbHVlID0gc291cmNlW2tleV07CgogICAgaWYgKEFycmF5LmlzQXJyYXkodGFyZ2V0VmFsdWUpICYmIEFycmF5LmlzQXJyYXkoc291cmNlVmFsdWUpKSB7CiAgICAgIHRhcmdldFtrZXldID0gdGFyZ2V0VmFsdWUuY29uY2F0KHNvdXJjZVZhbHVlKTsKICAgIH0gZWxzZSBpZiAoaXNPYmplY3QodGFyZ2V0VmFsdWUpICYmIGlzT2JqZWN0KHNvdXJjZVZhbHVlKSkgewogICAgICB0YXJnZXRba2V5XSA9IG1lcmdlRGVlcChPYmplY3QuYXNzaWduKHt9LCB0YXJnZXRWYWx1ZSksIHNvdXJjZVZhbHVlKTsKICAgIH0gZWxzZSB7CiAgICAgIHRhcmdldFtrZXldID0gc291cmNlVmFsdWU7CiAgICB9CiAgfSk7CiAgcmV0dXJuIHRhcmdldDsKfQ=="},{"version":3,"sources":["C:/Users/Brezgo-1098/Desktop/brezz/src/lib/base.js"],"names":["cloneObject","obj","JSON","parse","stringify","err","log","mergeDeep","target","source","isObject","Object","keys","forEach","key","targetValue","sourceValue","Array","isArray","concat","assign"],"mappings":";;;;;;AAAA,OAAO,SAASA,WAAT,CAAqBC,GAArB,EAA0B;AAC/B,MAAI;AACF,QAAI,QAAOA,GAAP,MAAe,QAAnB,EAA6B;AAC3B,aAAOC,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,SAAL,CAAeH,GAAf,CAAX,CAAP;AACD;;AACD,WAAOA,GAAP;AACD,GALD,CAKE,OAAOI,GAAP,EAAY;AACZC,IAAAA,GAAG,CAAC,oBAAD,EAAuBD,GAAvB,CAAH;AACD;;AACD,SAAO,IAAP;AACD;AAED,OAAO,SAASE,SAAT,CAAmBC,MAAnB,EAA2BC,MAA3B,EAAmC;AACxC,MAAMC,QAAQ,GAAG,SAAXA,QAAW,CAACT,GAAD;AAAA,WAASA,GAAG,IAAI,QAAOA,GAAP,MAAe,QAA/B;AAAA,GAAjB;;AAEA,MAAI,CAACS,QAAQ,CAACF,MAAD,CAAT,IAAqB,CAACE,QAAQ,CAACD,MAAD,CAAlC,EAA4C;AAC1C,WAAOA,MAAP;AACD;;AAEDE,EAAAA,MAAM,CAACC,IAAP,CAAYH,MAAZ,EAAoBI,OAApB,CAA4B,UAAAC,GAAG,EAAI;AACjC,QAAMC,WAAW,GAAGP,MAAM,CAACM,GAAD,CAA1B;AACA,QAAME,WAAW,GAAGP,MAAM,CAACK,GAAD,CAA1B;;AAEA,QAAIG,KAAK,CAACC,OAAN,CAAcH,WAAd,KAA8BE,KAAK,CAACC,OAAN,CAAcF,WAAd,CAAlC,EAA8D;AAC5DR,MAAAA,MAAM,CAACM,GAAD,CAAN,GAAcC,WAAW,CAACI,MAAZ,CAAmBH,WAAnB,CAAd;AACD,KAFD,MAEO,IAAIN,QAAQ,CAACK,WAAD,CAAR,IAAyBL,QAAQ,CAACM,WAAD,CAArC,EAAoD;AACzDR,MAAAA,MAAM,CAACM,GAAD,CAAN,GAAcP,SAAS,CAACI,MAAM,CAACS,MAAP,CAAc,EAAd,EAAkBL,WAAlB,CAAD,EAAiCC,WAAjC,CAAvB;AACD,KAFM,MAEA;AACLR,MAAAA,MAAM,CAACM,GAAD,CAAN,GAAcE,WAAd;AACD;AACF,GAXD;AAaA,SAAOR,MAAP;AACD","sourcesContent":["export function cloneObject(obj) {\n  try {\n    if (typeof obj === 'object') {\n      return JSON.parse(JSON.stringify(obj))\n    }\n    return obj\n  } catch (err) {\n    log('cloneObject error:', err)\n  }\n  return null\n}\n\nexport function mergeDeep(target, source) {\n  const isObject = (obj) => obj && typeof obj === 'object'\n\n  if (!isObject(target) || !isObject(source)) {\n    return source\n  }\n\n  Object.keys(source).forEach(key => {\n    const targetValue = target[key]\n    const sourceValue = source[key]\n\n    if (Array.isArray(targetValue) && Array.isArray(sourceValue)) {\n      target[key] = targetValue.concat(sourceValue)\n    } else if (isObject(targetValue) && isObject(sourceValue)) {\n      target[key] = mergeDeep(Object.assign({}, targetValue), sourceValue)\n    } else {\n      target[key] = sourceValue\n    }\n  })\n\n  return target\n}\n"]}]}