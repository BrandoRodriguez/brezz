{"remainingRequest":"C:\\Users\\Brezgo-1098\\Desktop\\brezz\\node_modules\\babel-loader\\lib\\index.js!C:\\Users\\Brezgo-1098\\Desktop\\brezz\\src\\lib\\qrcode.js","dependencies":[{"path":"C:\\Users\\Brezgo-1098\\Desktop\\brezz\\src\\lib\\qrcode.js","mtime":1587032502000},{"path":"C:\\Users\\Brezgo-1098\\Desktop\\brezz\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\Brezgo-1098\\Desktop\\brezz\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuYXJyYXkuaW5kZXgtb2YiOwppbXBvcnQgImNvcmUtanMvbW9kdWxlcy9lcy5hcnJheS5qb2luIjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMub2JqZWN0LnRvLXN0cmluZyI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL2VzLnJlZ2V4cC5leGVjIjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuc3RyaW5nLm1hdGNoIjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuc3RyaW5nLnRyaW0iOwppbXBvcnQgX3R5cGVvZiBmcm9tICJDOlxcVXNlcnNcXEJyZXpnby0xMDk4XFxEZXNrdG9wXFxicmV6elxcbm9kZV9tb2R1bGVzXFxAYmFiZWxcXHJ1bnRpbWUvaGVscGVycy9lc20vdHlwZW9mIjsKCi8vLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tCi8vCi8vIFFSIENvZGUgR2VuZXJhdG9yIGZvciBKYXZhU2NyaXB0Ci8vCi8vIENvcHlyaWdodCAoYykgMjAwOSBLYXp1aGlrbyBBcmFzZQovLwovLyBVUkw6IGh0dHA6Ly93d3cuZC1wcm9qZWN0LmNvbS8KLy8KLy8gTGljZW5zZWQgdW5kZXIgdGhlIE1JVCBsaWNlbnNlOgovLyAgaHR0cDovL3d3dy5vcGVuc291cmNlLm9yZy9saWNlbnNlcy9taXQtbGljZW5zZS5waHAKLy8KLy8gVGhlIHdvcmQgJ1FSIENvZGUnIGlzIHJlZ2lzdGVyZWQgdHJhZGVtYXJrIG9mCi8vIERFTlNPIFdBVkUgSU5DT1JQT1JBVEVECi8vICBodHRwOi8vd3d3LmRlbnNvLXdhdmUuY29tL3FyY29kZS9mYXFwYXRlbnQtZS5odG1sCi8vCi8vLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tCnZhciBxcmNvZGUgPSBmdW5jdGlvbiAoKSB7CiAgLy8tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0KICAvLyBxcmNvZGUKICAvLy0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLQoKICAvKioKICAgKiBxcmNvZGUKICAgKiBAcGFyYW0gdHlwZU51bWJlciAxIHRvIDQwCiAgICogQHBhcmFtIGVycm9yQ29ycmVjdGlvbkxldmVsICdMJywnTScsJ1EnLCdIJwogICAqLwogIHZhciBxcmNvZGUgPSBmdW5jdGlvbiBxcmNvZGUodHlwZU51bWJlciwgZXJyb3JDb3JyZWN0aW9uTGV2ZWwpIHsKICAgIHZhciBQQUQwID0gMHhFQzsKICAgIHZhciBQQUQxID0gMHgxMTsKICAgIHZhciBfdHlwZU51bWJlciA9IHR5cGVOdW1iZXI7CiAgICB2YXIgX2Vycm9yQ29ycmVjdGlvbkxldmVsID0gUVJFcnJvckNvcnJlY3Rpb25MZXZlbFtlcnJvckNvcnJlY3Rpb25MZXZlbF07CiAgICB2YXIgX21vZHVsZXMgPSBudWxsOwogICAgdmFyIF9tb2R1bGVDb3VudCA9IDA7CiAgICB2YXIgX2RhdGFDYWNoZSA9IG51bGw7CiAgICB2YXIgX2RhdGFMaXN0ID0gW107CiAgICB2YXIgX3RoaXMgPSB7fTsKCiAgICB2YXIgbWFrZUltcGwgPSBmdW5jdGlvbiBtYWtlSW1wbCh0ZXN0LCBtYXNrUGF0dGVybikgewogICAgICBfbW9kdWxlQ291bnQgPSBfdHlwZU51bWJlciAqIDQgKyAxNzsKCiAgICAgIF9tb2R1bGVzID0gZnVuY3Rpb24gKG1vZHVsZUNvdW50KSB7CiAgICAgICAgdmFyIG1vZHVsZXMgPSBuZXcgQXJyYXkobW9kdWxlQ291bnQpOwoKICAgICAgICBmb3IgKHZhciByb3cgPSAwOyByb3cgPCBtb2R1bGVDb3VudDsgcm93ICs9IDEpIHsKICAgICAgICAgIG1vZHVsZXNbcm93XSA9IG5ldyBBcnJheShtb2R1bGVDb3VudCk7CgogICAgICAgICAgZm9yICh2YXIgY29sID0gMDsgY29sIDwgbW9kdWxlQ291bnQ7IGNvbCArPSAxKSB7CiAgICAgICAgICAgIG1vZHVsZXNbcm93XVtjb2xdID0gbnVsbDsKICAgICAgICAgIH0KICAgICAgICB9CgogICAgICAgIHJldHVybiBtb2R1bGVzOwogICAgICB9KF9tb2R1bGVDb3VudCk7CgogICAgICBzZXR1cFBvc2l0aW9uUHJvYmVQYXR0ZXJuKDAsIDApOwogICAgICBzZXR1cFBvc2l0aW9uUHJvYmVQYXR0ZXJuKF9tb2R1bGVDb3VudCAtIDcsIDApOwogICAgICBzZXR1cFBvc2l0aW9uUHJvYmVQYXR0ZXJuKDAsIF9tb2R1bGVDb3VudCAtIDcpOwogICAgICBzZXR1cFBvc2l0aW9uQWRqdXN0UGF0dGVybigpOwogICAgICBzZXR1cFRpbWluZ1BhdHRlcm4oKTsKICAgICAgc2V0dXBUeXBlSW5mbyh0ZXN0LCBtYXNrUGF0dGVybik7CgogICAgICBpZiAoX3R5cGVOdW1iZXIgPj0gNykgewogICAgICAgIHNldHVwVHlwZU51bWJlcih0ZXN0KTsKICAgICAgfQoKICAgICAgaWYgKF9kYXRhQ2FjaGUgPT0gbnVsbCkgewogICAgICAgIF9kYXRhQ2FjaGUgPSBjcmVhdGVEYXRhKF90eXBlTnVtYmVyLCBfZXJyb3JDb3JyZWN0aW9uTGV2ZWwsIF9kYXRhTGlzdCk7CiAgICAgIH0KCiAgICAgIG1hcERhdGEoX2RhdGFDYWNoZSwgbWFza1BhdHRlcm4pOwogICAgfTsKCiAgICB2YXIgc2V0dXBQb3NpdGlvblByb2JlUGF0dGVybiA9IGZ1bmN0aW9uIHNldHVwUG9zaXRpb25Qcm9iZVBhdHRlcm4ocm93LCBjb2wpIHsKICAgICAgZm9yICh2YXIgciA9IC0xOyByIDw9IDc7IHIgKz0gMSkgewogICAgICAgIGlmIChyb3cgKyByIDw9IC0xIHx8IF9tb2R1bGVDb3VudCA8PSByb3cgKyByKSBjb250aW51ZTsKCiAgICAgICAgZm9yICh2YXIgYyA9IC0xOyBjIDw9IDc7IGMgKz0gMSkgewogICAgICAgICAgaWYgKGNvbCArIGMgPD0gLTEgfHwgX21vZHVsZUNvdW50IDw9IGNvbCArIGMpIGNvbnRpbnVlOwoKICAgICAgICAgIGlmICgwIDw9IHIgJiYgciA8PSA2ICYmIChjID09IDAgfHwgYyA9PSA2KSB8fCAwIDw9IGMgJiYgYyA8PSA2ICYmIChyID09IDAgfHwgciA9PSA2KSB8fCAyIDw9IHIgJiYgciA8PSA0ICYmIDIgPD0gYyAmJiBjIDw9IDQpIHsKICAgICAgICAgICAgX21vZHVsZXNbcm93ICsgcl1bY29sICsgY10gPSB0cnVlOwogICAgICAgICAgfSBlbHNlIHsKICAgICAgICAgICAgX21vZHVsZXNbcm93ICsgcl1bY29sICsgY10gPSBmYWxzZTsKICAgICAgICAgIH0KICAgICAgICB9CiAgICAgIH0KICAgIH07CgogICAgdmFyIGdldEJlc3RNYXNrUGF0dGVybiA9IGZ1bmN0aW9uIGdldEJlc3RNYXNrUGF0dGVybigpIHsKICAgICAgdmFyIG1pbkxvc3RQb2ludCA9IDA7CiAgICAgIHZhciBwYXR0ZXJuID0gMDsKCiAgICAgIGZvciAodmFyIGkgPSAwOyBpIDwgODsgaSArPSAxKSB7CiAgICAgICAgbWFrZUltcGwodHJ1ZSwgaSk7CiAgICAgICAgdmFyIGxvc3RQb2ludCA9IFFSVXRpbC5nZXRMb3N0UG9pbnQoX3RoaXMpOwoKICAgICAgICBpZiAoaSA9PSAwIHx8IG1pbkxvc3RQb2ludCA+IGxvc3RQb2ludCkgewogICAgICAgICAgbWluTG9zdFBvaW50ID0gbG9zdFBvaW50OwogICAgICAgICAgcGF0dGVybiA9IGk7CiAgICAgICAgfQogICAgICB9CgogICAgICByZXR1cm4gcGF0dGVybjsKICAgIH07CgogICAgdmFyIHNldHVwVGltaW5nUGF0dGVybiA9IGZ1bmN0aW9uIHNldHVwVGltaW5nUGF0dGVybigpIHsKICAgICAgZm9yICh2YXIgciA9IDg7IHIgPCBfbW9kdWxlQ291bnQgLSA4OyByICs9IDEpIHsKICAgICAgICBpZiAoX21vZHVsZXNbcl1bNl0gIT0gbnVsbCkgewogICAgICAgICAgY29udGludWU7CiAgICAgICAgfQoKICAgICAgICBfbW9kdWxlc1tyXVs2XSA9IHIgJSAyID09IDA7CiAgICAgIH0KCiAgICAgIGZvciAodmFyIGMgPSA4OyBjIDwgX21vZHVsZUNvdW50IC0gODsgYyArPSAxKSB7CiAgICAgICAgaWYgKF9tb2R1bGVzWzZdW2NdICE9IG51bGwpIHsKICAgICAgICAgIGNvbnRpbnVlOwogICAgICAgIH0KCiAgICAgICAgX21vZHVsZXNbNl1bY10gPSBjICUgMiA9PSAwOwogICAgICB9CiAgICB9OwoKICAgIHZhciBzZXR1cFBvc2l0aW9uQWRqdXN0UGF0dGVybiA9IGZ1bmN0aW9uIHNldHVwUG9zaXRpb25BZGp1c3RQYXR0ZXJuKCkgewogICAgICB2YXIgcG9zID0gUVJVdGlsLmdldFBhdHRlcm5Qb3NpdGlvbihfdHlwZU51bWJlcik7CgogICAgICBmb3IgKHZhciBpID0gMDsgaSA8IHBvcy5sZW5ndGg7IGkgKz0gMSkgewogICAgICAgIGZvciAodmFyIGogPSAwOyBqIDwgcG9zLmxlbmd0aDsgaiArPSAxKSB7CiAgICAgICAgICB2YXIgcm93ID0gcG9zW2ldOwogICAgICAgICAgdmFyIGNvbCA9IHBvc1tqXTsKCiAgICAgICAgICBpZiAoX21vZHVsZXNbcm93XVtjb2xdICE9IG51bGwpIHsKICAgICAgICAgICAgY29udGludWU7CiAgICAgICAgICB9CgogICAgICAgICAgZm9yICh2YXIgciA9IC0yOyByIDw9IDI7IHIgKz0gMSkgewogICAgICAgICAgICBmb3IgKHZhciBjID0gLTI7IGMgPD0gMjsgYyArPSAxKSB7CiAgICAgICAgICAgICAgaWYgKHIgPT0gLTIgfHwgciA9PSAyIHx8IGMgPT0gLTIgfHwgYyA9PSAyIHx8IHIgPT0gMCAmJiBjID09IDApIHsKICAgICAgICAgICAgICAgIF9tb2R1bGVzW3JvdyArIHJdW2NvbCArIGNdID0gdHJ1ZTsKICAgICAgICAgICAgICB9IGVsc2UgewogICAgICAgICAgICAgICAgX21vZHVsZXNbcm93ICsgcl1bY29sICsgY10gPSBmYWxzZTsKICAgICAgICAgICAgICB9CiAgICAgICAgICAgIH0KICAgICAgICAgIH0KICAgICAgICB9CiAgICAgIH0KICAgIH07CgogICAgdmFyIHNldHVwVHlwZU51bWJlciA9IGZ1bmN0aW9uIHNldHVwVHlwZU51bWJlcih0ZXN0KSB7CiAgICAgIHZhciBiaXRzID0gUVJVdGlsLmdldEJDSFR5cGVOdW1iZXIoX3R5cGVOdW1iZXIpOwoKICAgICAgZm9yICh2YXIgaSA9IDA7IGkgPCAxODsgaSArPSAxKSB7CiAgICAgICAgdmFyIG1vZCA9ICF0ZXN0ICYmIChiaXRzID4+IGkgJiAxKSA9PSAxOwogICAgICAgIF9tb2R1bGVzW01hdGguZmxvb3IoaSAvIDMpXVtpICUgMyArIF9tb2R1bGVDb3VudCAtIDggLSAzXSA9IG1vZDsKICAgICAgfQoKICAgICAgZm9yICh2YXIgaSA9IDA7IGkgPCAxODsgaSArPSAxKSB7CiAgICAgICAgdmFyIG1vZCA9ICF0ZXN0ICYmIChiaXRzID4+IGkgJiAxKSA9PSAxOwogICAgICAgIF9tb2R1bGVzW2kgJSAzICsgX21vZHVsZUNvdW50IC0gOCAtIDNdW01hdGguZmxvb3IoaSAvIDMpXSA9IG1vZDsKICAgICAgfQogICAgfTsKCiAgICB2YXIgc2V0dXBUeXBlSW5mbyA9IGZ1bmN0aW9uIHNldHVwVHlwZUluZm8odGVzdCwgbWFza1BhdHRlcm4pIHsKICAgICAgdmFyIGRhdGEgPSBfZXJyb3JDb3JyZWN0aW9uTGV2ZWwgPDwgMyB8IG1hc2tQYXR0ZXJuOwogICAgICB2YXIgYml0cyA9IFFSVXRpbC5nZXRCQ0hUeXBlSW5mbyhkYXRhKTsgLy8gdmVydGljYWwKCiAgICAgIGZvciAodmFyIGkgPSAwOyBpIDwgMTU7IGkgKz0gMSkgewogICAgICAgIHZhciBtb2QgPSAhdGVzdCAmJiAoYml0cyA+PiBpICYgMSkgPT0gMTsKCiAgICAgICAgaWYgKGkgPCA2KSB7CiAgICAgICAgICBfbW9kdWxlc1tpXVs4XSA9IG1vZDsKICAgICAgICB9IGVsc2UgaWYgKGkgPCA4KSB7CiAgICAgICAgICBfbW9kdWxlc1tpICsgMV1bOF0gPSBtb2Q7CiAgICAgICAgfSBlbHNlIHsKICAgICAgICAgIF9tb2R1bGVzW19tb2R1bGVDb3VudCAtIDE1ICsgaV1bOF0gPSBtb2Q7CiAgICAgICAgfQogICAgICB9IC8vIGhvcml6b250YWwKCgogICAgICBmb3IgKHZhciBpID0gMDsgaSA8IDE1OyBpICs9IDEpIHsKICAgICAgICB2YXIgbW9kID0gIXRlc3QgJiYgKGJpdHMgPj4gaSAmIDEpID09IDE7CgogICAgICAgIGlmIChpIDwgOCkgewogICAgICAgICAgX21vZHVsZXNbOF1bX21vZHVsZUNvdW50IC0gaSAtIDFdID0gbW9kOwogICAgICAgIH0gZWxzZSBpZiAoaSA8IDkpIHsKICAgICAgICAgIF9tb2R1bGVzWzhdWzE1IC0gaSAtIDEgKyAxXSA9IG1vZDsKICAgICAgICB9IGVsc2UgewogICAgICAgICAgX21vZHVsZXNbOF1bMTUgLSBpIC0gMV0gPSBtb2Q7CiAgICAgICAgfQogICAgICB9IC8vIGZpeGVkIG1vZHVsZQoKCiAgICAgIF9tb2R1bGVzW19tb2R1bGVDb3VudCAtIDhdWzhdID0gIXRlc3Q7CiAgICB9OwoKICAgIHZhciBtYXBEYXRhID0gZnVuY3Rpb24gbWFwRGF0YShkYXRhLCBtYXNrUGF0dGVybikgewogICAgICB2YXIgaW5jID0gLTE7CiAgICAgIHZhciByb3cgPSBfbW9kdWxlQ291bnQgLSAxOwogICAgICB2YXIgYml0SW5kZXggPSA3OwogICAgICB2YXIgYnl0ZUluZGV4ID0gMDsKICAgICAgdmFyIG1hc2tGdW5jID0gUVJVdGlsLmdldE1hc2tGdW5jdGlvbihtYXNrUGF0dGVybik7CgogICAgICBmb3IgKHZhciBjb2wgPSBfbW9kdWxlQ291bnQgLSAxOyBjb2wgPiAwOyBjb2wgLT0gMikgewogICAgICAgIGlmIChjb2wgPT0gNikgY29sIC09IDE7CgogICAgICAgIHdoaWxlICh0cnVlKSB7CiAgICAgICAgICBmb3IgKHZhciBjID0gMDsgYyA8IDI7IGMgKz0gMSkgewogICAgICAgICAgICBpZiAoX21vZHVsZXNbcm93XVtjb2wgLSBjXSA9PSBudWxsKSB7CiAgICAgICAgICAgICAgdmFyIGRhcmsgPSBmYWxzZTsKCiAgICAgICAgICAgICAgaWYgKGJ5dGVJbmRleCA8IGRhdGEubGVuZ3RoKSB7CiAgICAgICAgICAgICAgICBkYXJrID0gKGRhdGFbYnl0ZUluZGV4XSA+Pj4gYml0SW5kZXggJiAxKSA9PSAxOwogICAgICAgICAgICAgIH0KCiAgICAgICAgICAgICAgdmFyIG1hc2sgPSBtYXNrRnVuYyhyb3csIGNvbCAtIGMpOwoKICAgICAgICAgICAgICBpZiAobWFzaykgewogICAgICAgICAgICAgICAgZGFyayA9ICFkYXJrOwogICAgICAgICAgICAgIH0KCiAgICAgICAgICAgICAgX21vZHVsZXNbcm93XVtjb2wgLSBjXSA9IGRhcms7CiAgICAgICAgICAgICAgYml0SW5kZXggLT0gMTsKCiAgICAgICAgICAgICAgaWYgKGJpdEluZGV4ID09IC0xKSB7CiAgICAgICAgICAgICAgICBieXRlSW5kZXggKz0gMTsKICAgICAgICAgICAgICAgIGJpdEluZGV4ID0gNzsKICAgICAgICAgICAgICB9CiAgICAgICAgICAgIH0KICAgICAgICAgIH0KCiAgICAgICAgICByb3cgKz0gaW5jOwoKICAgICAgICAgIGlmIChyb3cgPCAwIHx8IF9tb2R1bGVDb3VudCA8PSByb3cpIHsKICAgICAgICAgICAgcm93IC09IGluYzsKICAgICAgICAgICAgaW5jID0gLWluYzsKICAgICAgICAgICAgYnJlYWs7CiAgICAgICAgICB9CiAgICAgICAgfQogICAgICB9CiAgICB9OwoKICAgIHZhciBjcmVhdGVCeXRlcyA9IGZ1bmN0aW9uIGNyZWF0ZUJ5dGVzKGJ1ZmZlciwgcnNCbG9ja3MpIHsKICAgICAgdmFyIG9mZnNldCA9IDA7CiAgICAgIHZhciBtYXhEY0NvdW50ID0gMDsKICAgICAgdmFyIG1heEVjQ291bnQgPSAwOwogICAgICB2YXIgZGNkYXRhID0gbmV3IEFycmF5KHJzQmxvY2tzLmxlbmd0aCk7CiAgICAgIHZhciBlY2RhdGEgPSBuZXcgQXJyYXkocnNCbG9ja3MubGVuZ3RoKTsKCiAgICAgIGZvciAodmFyIHIgPSAwOyByIDwgcnNCbG9ja3MubGVuZ3RoOyByICs9IDEpIHsKICAgICAgICB2YXIgZGNDb3VudCA9IHJzQmxvY2tzW3JdLmRhdGFDb3VudDsKICAgICAgICB2YXIgZWNDb3VudCA9IHJzQmxvY2tzW3JdLnRvdGFsQ291bnQgLSBkY0NvdW50OwogICAgICAgIG1heERjQ291bnQgPSBNYXRoLm1heChtYXhEY0NvdW50LCBkY0NvdW50KTsKICAgICAgICBtYXhFY0NvdW50ID0gTWF0aC5tYXgobWF4RWNDb3VudCwgZWNDb3VudCk7CiAgICAgICAgZGNkYXRhW3JdID0gbmV3IEFycmF5KGRjQ291bnQpOwoKICAgICAgICBmb3IgKHZhciBpID0gMDsgaSA8IGRjZGF0YVtyXS5sZW5ndGg7IGkgKz0gMSkgewogICAgICAgICAgZGNkYXRhW3JdW2ldID0gMHhmZiAmIGJ1ZmZlci5nZXRCdWZmZXIoKVtpICsgb2Zmc2V0XTsKICAgICAgICB9CgogICAgICAgIG9mZnNldCArPSBkY0NvdW50OwogICAgICAgIHZhciByc1BvbHkgPSBRUlV0aWwuZ2V0RXJyb3JDb3JyZWN0UG9seW5vbWlhbChlY0NvdW50KTsKICAgICAgICB2YXIgcmF3UG9seSA9IHFyUG9seW5vbWlhbChkY2RhdGFbcl0sIHJzUG9seS5nZXRMZW5ndGgoKSAtIDEpOwogICAgICAgIHZhciBtb2RQb2x5ID0gcmF3UG9seS5tb2QocnNQb2x5KTsKICAgICAgICBlY2RhdGFbcl0gPSBuZXcgQXJyYXkocnNQb2x5LmdldExlbmd0aCgpIC0gMSk7CgogICAgICAgIGZvciAodmFyIGkgPSAwOyBpIDwgZWNkYXRhW3JdLmxlbmd0aDsgaSArPSAxKSB7CiAgICAgICAgICB2YXIgbW9kSW5kZXggPSBpICsgbW9kUG9seS5nZXRMZW5ndGgoKSAtIGVjZGF0YVtyXS5sZW5ndGg7CiAgICAgICAgICBlY2RhdGFbcl1baV0gPSBtb2RJbmRleCA+PSAwID8gbW9kUG9seS5nZXRBdChtb2RJbmRleCkgOiAwOwogICAgICAgIH0KICAgICAgfQoKICAgICAgdmFyIHRvdGFsQ29kZUNvdW50ID0gMDsKCiAgICAgIGZvciAodmFyIGkgPSAwOyBpIDwgcnNCbG9ja3MubGVuZ3RoOyBpICs9IDEpIHsKICAgICAgICB0b3RhbENvZGVDb3VudCArPSByc0Jsb2Nrc1tpXS50b3RhbENvdW50OwogICAgICB9CgogICAgICB2YXIgZGF0YSA9IG5ldyBBcnJheSh0b3RhbENvZGVDb3VudCk7CiAgICAgIHZhciBpbmRleCA9IDA7CgogICAgICBmb3IgKHZhciBpID0gMDsgaSA8IG1heERjQ291bnQ7IGkgKz0gMSkgewogICAgICAgIGZvciAodmFyIHIgPSAwOyByIDwgcnNCbG9ja3MubGVuZ3RoOyByICs9IDEpIHsKICAgICAgICAgIGlmIChpIDwgZGNkYXRhW3JdLmxlbmd0aCkgewogICAgICAgICAgICBkYXRhW2luZGV4XSA9IGRjZGF0YVtyXVtpXTsKICAgICAgICAgICAgaW5kZXggKz0gMTsKICAgICAgICAgIH0KICAgICAgICB9CiAgICAgIH0KCiAgICAgIGZvciAodmFyIGkgPSAwOyBpIDwgbWF4RWNDb3VudDsgaSArPSAxKSB7CiAgICAgICAgZm9yICh2YXIgciA9IDA7IHIgPCByc0Jsb2Nrcy5sZW5ndGg7IHIgKz0gMSkgewogICAgICAgICAgaWYgKGkgPCBlY2RhdGFbcl0ubGVuZ3RoKSB7CiAgICAgICAgICAgIGRhdGFbaW5kZXhdID0gZWNkYXRhW3JdW2ldOwogICAgICAgICAgICBpbmRleCArPSAxOwogICAgICAgICAgfQogICAgICAgIH0KICAgICAgfQoKICAgICAgcmV0dXJuIGRhdGE7CiAgICB9OwoKICAgIHZhciBjcmVhdGVEYXRhID0gZnVuY3Rpb24gY3JlYXRlRGF0YSh0eXBlTnVtYmVyLCBlcnJvckNvcnJlY3Rpb25MZXZlbCwgZGF0YUxpc3QpIHsKICAgICAgdmFyIHJzQmxvY2tzID0gUVJSU0Jsb2NrLmdldFJTQmxvY2tzKHR5cGVOdW1iZXIsIGVycm9yQ29ycmVjdGlvbkxldmVsKTsKICAgICAgdmFyIGJ1ZmZlciA9IHFyQml0QnVmZmVyKCk7CgogICAgICBmb3IgKHZhciBpID0gMDsgaSA8IGRhdGFMaXN0Lmxlbmd0aDsgaSArPSAxKSB7CiAgICAgICAgdmFyIGRhdGEgPSBkYXRhTGlzdFtpXTsKICAgICAgICBidWZmZXIucHV0KGRhdGEuZ2V0TW9kZSgpLCA0KTsKICAgICAgICBidWZmZXIucHV0KGRhdGEuZ2V0TGVuZ3RoKCksIFFSVXRpbC5nZXRMZW5ndGhJbkJpdHMoZGF0YS5nZXRNb2RlKCksIHR5cGVOdW1iZXIpKTsKICAgICAgICBkYXRhLndyaXRlKGJ1ZmZlcik7CiAgICAgIH0gLy8gY2FsYyBudW0gbWF4IGRhdGEuCgoKICAgICAgdmFyIHRvdGFsRGF0YUNvdW50ID0gMDsKCiAgICAgIGZvciAodmFyIGkgPSAwOyBpIDwgcnNCbG9ja3MubGVuZ3RoOyBpICs9IDEpIHsKICAgICAgICB0b3RhbERhdGFDb3VudCArPSByc0Jsb2Nrc1tpXS5kYXRhQ291bnQ7CiAgICAgIH0KCiAgICAgIGlmIChidWZmZXIuZ2V0TGVuZ3RoSW5CaXRzKCkgPiB0b3RhbERhdGFDb3VudCAqIDgpIHsKICAgICAgICB0aHJvdyAnY29kZSBsZW5ndGggb3ZlcmZsb3cuICgnICsgYnVmZmVyLmdldExlbmd0aEluQml0cygpICsgJz4nICsgdG90YWxEYXRhQ291bnQgKiA4ICsgJyknOwogICAgICB9IC8vIGVuZCBjb2RlCgoKICAgICAgaWYgKGJ1ZmZlci5nZXRMZW5ndGhJbkJpdHMoKSArIDQgPD0gdG90YWxEYXRhQ291bnQgKiA4KSB7CiAgICAgICAgYnVmZmVyLnB1dCgwLCA0KTsKICAgICAgfSAvLyBwYWRkaW5nCgoKICAgICAgd2hpbGUgKGJ1ZmZlci5nZXRMZW5ndGhJbkJpdHMoKSAlIDggIT0gMCkgewogICAgICAgIGJ1ZmZlci5wdXRCaXQoZmFsc2UpOwogICAgICB9IC8vIHBhZGRpbmcKCgogICAgICB3aGlsZSAodHJ1ZSkgewogICAgICAgIGlmIChidWZmZXIuZ2V0TGVuZ3RoSW5CaXRzKCkgPj0gdG90YWxEYXRhQ291bnQgKiA4KSB7CiAgICAgICAgICBicmVhazsKICAgICAgICB9CgogICAgICAgIGJ1ZmZlci5wdXQoUEFEMCwgOCk7CgogICAgICAgIGlmIChidWZmZXIuZ2V0TGVuZ3RoSW5CaXRzKCkgPj0gdG90YWxEYXRhQ291bnQgKiA4KSB7CiAgICAgICAgICBicmVhazsKICAgICAgICB9CgogICAgICAgIGJ1ZmZlci5wdXQoUEFEMSwgOCk7CiAgICAgIH0KCiAgICAgIHJldHVybiBjcmVhdGVCeXRlcyhidWZmZXIsIHJzQmxvY2tzKTsKICAgIH07CgogICAgX3RoaXMuYWRkRGF0YSA9IGZ1bmN0aW9uIChkYXRhLCBtb2RlKSB7CiAgICAgIG1vZGUgPSBtb2RlIHx8ICdCeXRlJzsKICAgICAgdmFyIG5ld0RhdGEgPSBudWxsOwoKICAgICAgc3dpdGNoIChtb2RlKSB7CiAgICAgICAgY2FzZSAnTnVtZXJpYyc6CiAgICAgICAgICBuZXdEYXRhID0gcXJOdW1iZXIoZGF0YSk7CiAgICAgICAgICBicmVhazsKCiAgICAgICAgY2FzZSAnQWxwaGFudW1lcmljJzoKICAgICAgICAgIG5ld0RhdGEgPSBxckFscGhhTnVtKGRhdGEpOwogICAgICAgICAgYnJlYWs7CgogICAgICAgIGNhc2UgJ0J5dGUnOgogICAgICAgICAgbmV3RGF0YSA9IHFyOEJpdEJ5dGUoZGF0YSk7CiAgICAgICAgICBicmVhazsKCiAgICAgICAgY2FzZSAnS2FuamknOgogICAgICAgICAgbmV3RGF0YSA9IHFyS2FuamkoZGF0YSk7CiAgICAgICAgICBicmVhazsKCiAgICAgICAgZGVmYXVsdDoKICAgICAgICAgIHRocm93ICdtb2RlOicgKyBtb2RlOwogICAgICB9CgogICAgICBfZGF0YUxpc3QucHVzaChuZXdEYXRhKTsKCiAgICAgIF9kYXRhQ2FjaGUgPSBudWxsOwogICAgfTsKCiAgICBfdGhpcy5pc0RhcmsgPSBmdW5jdGlvbiAocm93LCBjb2wpIHsKICAgICAgaWYgKHJvdyA8IDAgfHwgX21vZHVsZUNvdW50IDw9IHJvdyB8fCBjb2wgPCAwIHx8IF9tb2R1bGVDb3VudCA8PSBjb2wpIHsKICAgICAgICB0aHJvdyByb3cgKyAnLCcgKyBjb2w7CiAgICAgIH0KCiAgICAgIHJldHVybiBfbW9kdWxlc1tyb3ddW2NvbF07CiAgICB9OwoKICAgIF90aGlzLmdldE1vZHVsZUNvdW50ID0gZnVuY3Rpb24gKCkgewogICAgICByZXR1cm4gX21vZHVsZUNvdW50OwogICAgfTsKCiAgICBfdGhpcy5tYWtlID0gZnVuY3Rpb24gKCkgewogICAgICBpZiAoX3R5cGVOdW1iZXIgPCAxKSB7CiAgICAgICAgdmFyIHR5cGVOdW1iZXIgPSAxOwoKICAgICAgICBmb3IgKDsgdHlwZU51bWJlciA8IDQwOyB0eXBlTnVtYmVyKyspIHsKICAgICAgICAgIHZhciByc0Jsb2NrcyA9IFFSUlNCbG9jay5nZXRSU0Jsb2Nrcyh0eXBlTnVtYmVyLCBfZXJyb3JDb3JyZWN0aW9uTGV2ZWwpOwogICAgICAgICAgdmFyIGJ1ZmZlciA9IHFyQml0QnVmZmVyKCk7CgogICAgICAgICAgZm9yICh2YXIgaSA9IDA7IGkgPCBfZGF0YUxpc3QubGVuZ3RoOyBpKyspIHsKICAgICAgICAgICAgdmFyIGRhdGEgPSBfZGF0YUxpc3RbaV07CiAgICAgICAgICAgIGJ1ZmZlci5wdXQoZGF0YS5nZXRNb2RlKCksIDQpOwogICAgICAgICAgICBidWZmZXIucHV0KGRhdGEuZ2V0TGVuZ3RoKCksIFFSVXRpbC5nZXRMZW5ndGhJbkJpdHMoZGF0YS5nZXRNb2RlKCksIHR5cGVOdW1iZXIpKTsKICAgICAgICAgICAgZGF0YS53cml0ZShidWZmZXIpOwogICAgICAgICAgfQoKICAgICAgICAgIHZhciB0b3RhbERhdGFDb3VudCA9IDA7CgogICAgICAgICAgZm9yICh2YXIgaSA9IDA7IGkgPCByc0Jsb2Nrcy5sZW5ndGg7IGkrKykgewogICAgICAgICAgICB0b3RhbERhdGFDb3VudCArPSByc0Jsb2Nrc1tpXS5kYXRhQ291bnQ7CiAgICAgICAgICB9CgogICAgICAgICAgaWYgKGJ1ZmZlci5nZXRMZW5ndGhJbkJpdHMoKSA8PSB0b3RhbERhdGFDb3VudCAqIDgpIHsKICAgICAgICAgICAgYnJlYWs7CiAgICAgICAgICB9CiAgICAgICAgfQoKICAgICAgICBfdHlwZU51bWJlciA9IHR5cGVOdW1iZXI7CiAgICAgIH0KCiAgICAgIG1ha2VJbXBsKGZhbHNlLCBnZXRCZXN0TWFza1BhdHRlcm4oKSk7CiAgICB9OwoKICAgIF90aGlzLmNyZWF0ZVRhYmxlVGFnID0gZnVuY3Rpb24gKGNlbGxTaXplLCBtYXJnaW4pIHsKICAgICAgY2VsbFNpemUgPSBjZWxsU2l6ZSB8fCAyOwogICAgICBtYXJnaW4gPSB0eXBlb2YgbWFyZ2luID09ICd1bmRlZmluZWQnID8gY2VsbFNpemUgKiA0IDogbWFyZ2luOwogICAgICB2YXIgcXJIdG1sID0gJyc7CiAgICAgIHFySHRtbCArPSAnPHRhYmxlIHN0eWxlPSInOwogICAgICBxckh0bWwgKz0gJyBib3JkZXItd2lkdGg6IDBweDsgYm9yZGVyLXN0eWxlOiBub25lOyc7CiAgICAgIHFySHRtbCArPSAnIGJvcmRlci1jb2xsYXBzZTogY29sbGFwc2U7JzsKICAgICAgcXJIdG1sICs9ICcgcGFkZGluZzogMHB4OyBtYXJnaW46ICcgKyBtYXJnaW4gKyAncHg7JzsKICAgICAgcXJIdG1sICs9ICciPic7CiAgICAgIHFySHRtbCArPSAnPHRib2R5Pic7CgogICAgICBmb3IgKHZhciByID0gMDsgciA8IF90aGlzLmdldE1vZHVsZUNvdW50KCk7IHIgKz0gMSkgewogICAgICAgIHFySHRtbCArPSAnPHRyPic7CgogICAgICAgIGZvciAodmFyIGMgPSAwOyBjIDwgX3RoaXMuZ2V0TW9kdWxlQ291bnQoKTsgYyArPSAxKSB7CiAgICAgICAgICBxckh0bWwgKz0gJzx0ZCBzdHlsZT0iJzsKICAgICAgICAgIHFySHRtbCArPSAnIGJvcmRlci13aWR0aDogMHB4OyBib3JkZXItc3R5bGU6IG5vbmU7JzsKICAgICAgICAgIHFySHRtbCArPSAnIGJvcmRlci1jb2xsYXBzZTogY29sbGFwc2U7JzsKICAgICAgICAgIHFySHRtbCArPSAnIHBhZGRpbmc6IDBweDsgbWFyZ2luOiAwcHg7JzsKICAgICAgICAgIHFySHRtbCArPSAnIHdpZHRoOiAnICsgY2VsbFNpemUgKyAncHg7JzsKICAgICAgICAgIHFySHRtbCArPSAnIGhlaWdodDogJyArIGNlbGxTaXplICsgJ3B4Oyc7CiAgICAgICAgICBxckh0bWwgKz0gJyBiYWNrZ3JvdW5kLWNvbG9yOiAnOwogICAgICAgICAgcXJIdG1sICs9IF90aGlzLmlzRGFyayhyLCBjKSA/ICcjMDAwMDAwJyA6ICcjZmZmZmZmJzsKICAgICAgICAgIHFySHRtbCArPSAnOyc7CiAgICAgICAgICBxckh0bWwgKz0gJyIvPic7CiAgICAgICAgfQoKICAgICAgICBxckh0bWwgKz0gJzwvdHI+JzsKICAgICAgfQoKICAgICAgcXJIdG1sICs9ICc8L3Rib2R5Pic7CiAgICAgIHFySHRtbCArPSAnPC90YWJsZT4nOwogICAgICByZXR1cm4gcXJIdG1sOwogICAgfTsKCiAgICBfdGhpcy5jcmVhdGVTdmdUYWcgPSBmdW5jdGlvbiAoY2VsbFNpemUsIG1hcmdpbiwgYWx0LCB0aXRsZSkgewogICAgICB2YXIgb3B0cyA9IHt9OwoKICAgICAgaWYgKF90eXBlb2YoYXJndW1lbnRzWzBdKSA9PSAnb2JqZWN0JykgewogICAgICAgIC8vIENhbGxlZCBieSBvcHRpb25zLgogICAgICAgIG9wdHMgPSBhcmd1bWVudHNbMF07IC8vIG92ZXJ3cml0ZSBjZWxsU2l6ZSBhbmQgbWFyZ2luLgoKICAgICAgICBjZWxsU2l6ZSA9IG9wdHMuY2VsbFNpemU7CiAgICAgICAgbWFyZ2luID0gb3B0cy5tYXJnaW47CiAgICAgICAgYWx0ID0gb3B0cy5hbHQ7CiAgICAgICAgdGl0bGUgPSBvcHRzLnRpdGxlOwogICAgICB9CgogICAgICBjZWxsU2l6ZSA9IGNlbGxTaXplIHx8IDI7CiAgICAgIG1hcmdpbiA9IHR5cGVvZiBtYXJnaW4gPT0gJ3VuZGVmaW5lZCcgPyBjZWxsU2l6ZSAqIDQgOiBtYXJnaW47IC8vIENvbXBvc2UgYWx0IHByb3BlcnR5IHN1cnJvZ2F0ZQoKICAgICAgYWx0ID0gdHlwZW9mIGFsdCA9PT0gJ3N0cmluZycgPyB7CiAgICAgICAgdGV4dDogYWx0CiAgICAgIH0gOiBhbHQgfHwge307CiAgICAgIGFsdC50ZXh0ID0gYWx0LnRleHQgfHwgbnVsbDsKICAgICAgYWx0LmlkID0gYWx0LnRleHQgPyBhbHQuaWQgfHwgJ3FyY29kZS1kZXNjcmlwdGlvbicgOiBudWxsOyAvLyBDb21wb3NlIHRpdGxlIHByb3BlcnR5IHN1cnJvZ2F0ZQoKICAgICAgdGl0bGUgPSB0eXBlb2YgdGl0bGUgPT09ICdzdHJpbmcnID8gewogICAgICAgIHRleHQ6IHRpdGxlCiAgICAgIH0gOiB0aXRsZSB8fCB7fTsKICAgICAgdGl0bGUudGV4dCA9IHRpdGxlLnRleHQgfHwgbnVsbDsKICAgICAgdGl0bGUuaWQgPSB0aXRsZS50ZXh0ID8gdGl0bGUuaWQgfHwgJ3FyY29kZS10aXRsZScgOiBudWxsOwogICAgICB2YXIgc2l6ZSA9IF90aGlzLmdldE1vZHVsZUNvdW50KCkgKiBjZWxsU2l6ZSArIG1hcmdpbiAqIDI7CiAgICAgIHZhciBjLAogICAgICAgICAgbWMsCiAgICAgICAgICByLAogICAgICAgICAgbXIsCiAgICAgICAgICBxclN2ZyA9ICcnLAogICAgICAgICAgcmVjdDsKICAgICAgcmVjdCA9ICdsJyArIGNlbGxTaXplICsgJywwIDAsJyArIGNlbGxTaXplICsgJyAtJyArIGNlbGxTaXplICsgJywwIDAsLScgKyBjZWxsU2l6ZSArICd6ICc7CiAgICAgIHFyU3ZnICs9ICc8c3ZnIHZlcnNpb249IjEuMSIgeG1sbnM9Imh0dHA6Ly93d3cudzMub3JnLzIwMDAvc3ZnIic7CiAgICAgIHFyU3ZnICs9ICFvcHRzLnNjYWxhYmxlID8gJyB3aWR0aD0iJyArIHNpemUgKyAncHgiIGhlaWdodD0iJyArIHNpemUgKyAncHgiJyA6ICcnOwogICAgICBxclN2ZyArPSAnIHZpZXdCb3g9IjAgMCAnICsgc2l6ZSArICcgJyArIHNpemUgKyAnIiAnOwogICAgICBxclN2ZyArPSAnIHByZXNlcnZlQXNwZWN0UmF0aW89InhNaW5ZTWluIG1lZXQiJzsKICAgICAgcXJTdmcgKz0gdGl0bGUudGV4dCB8fCBhbHQudGV4dCA/ICcgcm9sZT0iaW1nIiBhcmlhLWxhYmVsbGVkYnk9IicgKyBlc2NhcGVYbWwoW3RpdGxlLmlkLCBhbHQuaWRdLmpvaW4oJyAnKS50cmltKCkpICsgJyInIDogJyc7CiAgICAgIHFyU3ZnICs9ICc+JzsKICAgICAgcXJTdmcgKz0gdGl0bGUudGV4dCA/ICc8dGl0bGUgaWQ9IicgKyBlc2NhcGVYbWwodGl0bGUuaWQpICsgJyI+JyArIGVzY2FwZVhtbCh0aXRsZS50ZXh0KSArICc8L3RpdGxlPicgOiAnJzsKICAgICAgcXJTdmcgKz0gYWx0LnRleHQgPyAnPGRlc2NyaXB0aW9uIGlkPSInICsgZXNjYXBlWG1sKGFsdC5pZCkgKyAnIj4nICsgZXNjYXBlWG1sKGFsdC50ZXh0KSArICc8L2Rlc2NyaXB0aW9uPicgOiAnJzsKICAgICAgcXJTdmcgKz0gJzxyZWN0IHdpZHRoPSIxMDAlIiBoZWlnaHQ9IjEwMCUiIGZpbGw9IndoaXRlIiBjeD0iMCIgY3k9IjAiLz4nOwogICAgICBxclN2ZyArPSAnPHBhdGggZD0iJzsKCiAgICAgIGZvciAociA9IDA7IHIgPCBfdGhpcy5nZXRNb2R1bGVDb3VudCgpOyByICs9IDEpIHsKICAgICAgICBtciA9IHIgKiBjZWxsU2l6ZSArIG1hcmdpbjsKCiAgICAgICAgZm9yIChjID0gMDsgYyA8IF90aGlzLmdldE1vZHVsZUNvdW50KCk7IGMgKz0gMSkgewogICAgICAgICAgaWYgKF90aGlzLmlzRGFyayhyLCBjKSkgewogICAgICAgICAgICBtYyA9IGMgKiBjZWxsU2l6ZSArIG1hcmdpbjsKICAgICAgICAgICAgcXJTdmcgKz0gJ00nICsgbWMgKyAnLCcgKyBtciArIHJlY3Q7CiAgICAgICAgICB9CiAgICAgICAgfQogICAgICB9CgogICAgICBxclN2ZyArPSAnIiBzdHJva2U9InRyYW5zcGFyZW50IiBmaWxsPSJibGFjayIvPic7CiAgICAgIHFyU3ZnICs9ICc8L3N2Zz4nOwogICAgICByZXR1cm4gcXJTdmc7CiAgICB9OwoKICAgIF90aGlzLmNyZWF0ZURhdGFVUkwgPSBmdW5jdGlvbiAoY2VsbFNpemUsIG1hcmdpbikgewogICAgICBjZWxsU2l6ZSA9IGNlbGxTaXplIHx8IDI7CiAgICAgIG1hcmdpbiA9IHR5cGVvZiBtYXJnaW4gPT0gJ3VuZGVmaW5lZCcgPyBjZWxsU2l6ZSAqIDQgOiBtYXJnaW47CiAgICAgIHZhciBzaXplID0gX3RoaXMuZ2V0TW9kdWxlQ291bnQoKSAqIGNlbGxTaXplICsgbWFyZ2luICogMjsKICAgICAgdmFyIG1pbiA9IG1hcmdpbjsKICAgICAgdmFyIG1heCA9IHNpemUgLSBtYXJnaW47CiAgICAgIHJldHVybiBjcmVhdGVEYXRhVVJMKHNpemUsIHNpemUsIGZ1bmN0aW9uICh4LCB5KSB7CiAgICAgICAgaWYgKG1pbiA8PSB4ICYmIHggPCBtYXggJiYgbWluIDw9IHkgJiYgeSA8IG1heCkgewogICAgICAgICAgdmFyIGMgPSBNYXRoLmZsb29yKCh4IC0gbWluKSAvIGNlbGxTaXplKTsKICAgICAgICAgIHZhciByID0gTWF0aC5mbG9vcigoeSAtIG1pbikgLyBjZWxsU2l6ZSk7CiAgICAgICAgICByZXR1cm4gX3RoaXMuaXNEYXJrKHIsIGMpID8gMCA6IDE7CiAgICAgICAgfSBlbHNlIHsKICAgICAgICAgIHJldHVybiAxOwogICAgICAgIH0KICAgICAgfSk7CiAgICB9OwoKICAgIF90aGlzLmNyZWF0ZUltZ1RhZyA9IGZ1bmN0aW9uIChjZWxsU2l6ZSwgbWFyZ2luLCBhbHQpIHsKICAgICAgY2VsbFNpemUgPSBjZWxsU2l6ZSB8fCAyOwogICAgICBtYXJnaW4gPSB0eXBlb2YgbWFyZ2luID09ICd1bmRlZmluZWQnID8gY2VsbFNpemUgKiA0IDogbWFyZ2luOwogICAgICB2YXIgc2l6ZSA9IF90aGlzLmdldE1vZHVsZUNvdW50KCkgKiBjZWxsU2l6ZSArIG1hcmdpbiAqIDI7CiAgICAgIHZhciBpbWcgPSAnJzsKICAgICAgaW1nICs9ICc8aW1nJzsKICAgICAgaW1nICs9ICIgc3JjPVwiIjsKICAgICAgaW1nICs9IF90aGlzLmNyZWF0ZURhdGFVUkwoY2VsbFNpemUsIG1hcmdpbik7CiAgICAgIGltZyArPSAnIic7CiAgICAgIGltZyArPSAiIHdpZHRoPVwiIjsKICAgICAgaW1nICs9IHNpemU7CiAgICAgIGltZyArPSAnIic7CiAgICAgIGltZyArPSAiIGhlaWdodD1cIiI7CiAgICAgIGltZyArPSBzaXplOwogICAgICBpbWcgKz0gJyInOwoKICAgICAgaWYgKGFsdCkgewogICAgICAgIGltZyArPSAiIGFsdD1cIiI7CiAgICAgICAgaW1nICs9IGVzY2FwZVhtbChhbHQpOwogICAgICAgIGltZyArPSAnIic7CiAgICAgIH0KCiAgICAgIGltZyArPSAnLz4nOwogICAgICByZXR1cm4gaW1nOwogICAgfTsKCiAgICB2YXIgZXNjYXBlWG1sID0gZnVuY3Rpb24gZXNjYXBlWG1sKHMpIHsKICAgICAgdmFyIGVzY2FwZWQgPSAnJzsKCiAgICAgIGZvciAodmFyIGkgPSAwOyBpIDwgcy5sZW5ndGg7IGkgKz0gMSkgewogICAgICAgIHZhciBjID0gcy5jaGFyQXQoaSk7CgogICAgICAgIHN3aXRjaCAoYykgewogICAgICAgICAgY2FzZSAnPCc6CiAgICAgICAgICAgIGVzY2FwZWQgKz0gJyZsdDsnOwogICAgICAgICAgICBicmVhazsKCiAgICAgICAgICBjYXNlICc+JzoKICAgICAgICAgICAgZXNjYXBlZCArPSAnJmd0Oyc7CiAgICAgICAgICAgIGJyZWFrOwoKICAgICAgICAgIGNhc2UgJyYnOgogICAgICAgICAgICBlc2NhcGVkICs9ICcmYW1wOyc7CiAgICAgICAgICAgIGJyZWFrOwoKICAgICAgICAgIGNhc2UgJyInOgogICAgICAgICAgICBlc2NhcGVkICs9ICcmcXVvdDsnOwogICAgICAgICAgICBicmVhazsKCiAgICAgICAgICBkZWZhdWx0OgogICAgICAgICAgICBlc2NhcGVkICs9IGM7CiAgICAgICAgICAgIGJyZWFrOwogICAgICAgIH0KICAgICAgfQoKICAgICAgcmV0dXJuIGVzY2FwZWQ7CiAgICB9OwoKICAgIHZhciBfY3JlYXRlSGFsZkFTQ0lJID0gZnVuY3Rpb24gX2NyZWF0ZUhhbGZBU0NJSShtYXJnaW4pIHsKICAgICAgdmFyIGNlbGxTaXplID0gMTsKICAgICAgbWFyZ2luID0gdHlwZW9mIG1hcmdpbiA9PSAndW5kZWZpbmVkJyA/IGNlbGxTaXplICogMiA6IG1hcmdpbjsKICAgICAgdmFyIHNpemUgPSBfdGhpcy5nZXRNb2R1bGVDb3VudCgpICogY2VsbFNpemUgKyBtYXJnaW4gKiAyOwogICAgICB2YXIgbWluID0gbWFyZ2luOwogICAgICB2YXIgbWF4ID0gc2l6ZSAtIG1hcmdpbjsKICAgICAgdmFyIHksIHgsIHIxLCByMiwgcDsKICAgICAgdmFyIGJsb2NrcyA9IHsKICAgICAgICAn4paI4paIJzogJ+KWiCcsCiAgICAgICAgJ+KWiCAnOiAn4paAJywKICAgICAgICAnIOKWiCc6ICfiloQnLAogICAgICAgICcgICc6ICcgJwogICAgICB9OwogICAgICB2YXIgYmxvY2tzTGFzdExpbmVOb01hcmdpbiA9IHsKICAgICAgICAn4paI4paIJzogJ+KWgCcsCiAgICAgICAgJ+KWiCAnOiAn4paAJywKICAgICAgICAnIOKWiCc6ICcgJywKICAgICAgICAnICAnOiAnICcKICAgICAgfTsKICAgICAgdmFyIGFzY2lpID0gJyc7CgogICAgICBmb3IgKHkgPSAwOyB5IDwgc2l6ZTsgeSArPSAyKSB7CiAgICAgICAgcjEgPSBNYXRoLmZsb29yKCh5IC0gbWluKSAvIGNlbGxTaXplKTsKICAgICAgICByMiA9IE1hdGguZmxvb3IoKHkgKyAxIC0gbWluKSAvIGNlbGxTaXplKTsKCiAgICAgICAgZm9yICh4ID0gMDsgeCA8IHNpemU7IHggKz0gMSkgewogICAgICAgICAgcCA9ICfilognOwoKICAgICAgICAgIGlmIChtaW4gPD0geCAmJiB4IDwgbWF4ICYmIG1pbiA8PSB5ICYmIHkgPCBtYXggJiYgX3RoaXMuaXNEYXJrKHIxLCBNYXRoLmZsb29yKCh4IC0gbWluKSAvIGNlbGxTaXplKSkpIHsKICAgICAgICAgICAgcCA9ICcgJzsKICAgICAgICAgIH0KCiAgICAgICAgICBpZiAobWluIDw9IHggJiYgeCA8IG1heCAmJiBtaW4gPD0geSArIDEgJiYgeSArIDEgPCBtYXggJiYgX3RoaXMuaXNEYXJrKHIyLCBNYXRoLmZsb29yKCh4IC0gbWluKSAvIGNlbGxTaXplKSkpIHsKICAgICAgICAgICAgcCArPSAnICc7CiAgICAgICAgICB9IGVsc2UgewogICAgICAgICAgICBwICs9ICfilognOwogICAgICAgICAgfSAvLyBPdXRwdXQgMiBjaGFyYWN0ZXJzIHBlciBwaXhlbCwgdG8gY3JlYXRlIGZ1bGwgc3F1YXJlLiAxIGNoYXJhY3RlciBwZXIgcGl4ZWxzIGdpdmVzIG9ubHkgaGFsZiB3aWR0aCBvZiBzcXVhcmUuCgoKICAgICAgICAgIGFzY2lpICs9IG1hcmdpbiA8IDEgJiYgeSArIDEgPj0gbWF4ID8gYmxvY2tzTGFzdExpbmVOb01hcmdpbltwXSA6IGJsb2Nrc1twXTsKICAgICAgICB9CgogICAgICAgIGFzY2lpICs9ICdcbic7CiAgICAgIH0KCiAgICAgIGlmIChzaXplICUgMiAmJiBtYXJnaW4gPiAwKSB7CiAgICAgICAgcmV0dXJuIGFzY2lpLnN1YnN0cmluZygwLCBhc2NpaS5sZW5ndGggLSBzaXplIC0gMSkgKyBBcnJheShzaXplICsgMSkuam9pbign4paAJyk7CiAgICAgIH0KCiAgICAgIHJldHVybiBhc2NpaS5zdWJzdHJpbmcoMCwgYXNjaWkubGVuZ3RoIC0gMSk7CiAgICB9OwoKICAgIF90aGlzLmNyZWF0ZUFTQ0lJID0gZnVuY3Rpb24gKGNlbGxTaXplLCBtYXJnaW4pIHsKICAgICAgY2VsbFNpemUgPSBjZWxsU2l6ZSB8fCAxOwoKICAgICAgaWYgKGNlbGxTaXplIDwgMikgewogICAgICAgIHJldHVybiBfY3JlYXRlSGFsZkFTQ0lJKG1hcmdpbik7CiAgICAgIH0KCiAgICAgIGNlbGxTaXplIC09IDE7CiAgICAgIG1hcmdpbiA9IHR5cGVvZiBtYXJnaW4gPT0gJ3VuZGVmaW5lZCcgPyBjZWxsU2l6ZSAqIDIgOiBtYXJnaW47CiAgICAgIHZhciBzaXplID0gX3RoaXMuZ2V0TW9kdWxlQ291bnQoKSAqIGNlbGxTaXplICsgbWFyZ2luICogMjsKICAgICAgdmFyIG1pbiA9IG1hcmdpbjsKICAgICAgdmFyIG1heCA9IHNpemUgLSBtYXJnaW47CiAgICAgIHZhciB5LCB4LCByLCBwOwogICAgICB2YXIgd2hpdGUgPSBBcnJheShjZWxsU2l6ZSArIDEpLmpvaW4oJ+KWiOKWiCcpOwogICAgICB2YXIgYmxhY2sgPSBBcnJheShjZWxsU2l6ZSArIDEpLmpvaW4oJyAgJyk7CiAgICAgIHZhciBhc2NpaSA9ICcnOwogICAgICB2YXIgbGluZSA9ICcnOwoKICAgICAgZm9yICh5ID0gMDsgeSA8IHNpemU7IHkgKz0gMSkgewogICAgICAgIHIgPSBNYXRoLmZsb29yKCh5IC0gbWluKSAvIGNlbGxTaXplKTsKICAgICAgICBsaW5lID0gJyc7CgogICAgICAgIGZvciAoeCA9IDA7IHggPCBzaXplOyB4ICs9IDEpIHsKICAgICAgICAgIHAgPSAxOwoKICAgICAgICAgIGlmIChtaW4gPD0geCAmJiB4IDwgbWF4ICYmIG1pbiA8PSB5ICYmIHkgPCBtYXggJiYgX3RoaXMuaXNEYXJrKHIsIE1hdGguZmxvb3IoKHggLSBtaW4pIC8gY2VsbFNpemUpKSkgewogICAgICAgICAgICBwID0gMDsKICAgICAgICAgIH0gLy8gT3V0cHV0IDIgY2hhcmFjdGVycyBwZXIgcGl4ZWwsIHRvIGNyZWF0ZSBmdWxsIHNxdWFyZS4gMSBjaGFyYWN0ZXIgcGVyIHBpeGVscyBnaXZlcyBvbmx5IGhhbGYgd2lkdGggb2Ygc3F1YXJlLgoKCiAgICAgICAgICBsaW5lICs9IHAgPyB3aGl0ZSA6IGJsYWNrOwogICAgICAgIH0KCiAgICAgICAgZm9yIChyID0gMDsgciA8IGNlbGxTaXplOyByICs9IDEpIHsKICAgICAgICAgIGFzY2lpICs9IGxpbmUgKyAnXG4nOwogICAgICAgIH0KICAgICAgfQoKICAgICAgcmV0dXJuIGFzY2lpLnN1YnN0cmluZygwLCBhc2NpaS5sZW5ndGggLSAxKTsKICAgIH07CgogICAgX3RoaXMucmVuZGVyVG8yZENvbnRleHQgPSBmdW5jdGlvbiAoY29udGV4dCwgY2VsbFNpemUpIHsKICAgICAgY2VsbFNpemUgPSBjZWxsU2l6ZSB8fCAyOwoKICAgICAgdmFyIGxlbmd0aCA9IF90aGlzLmdldE1vZHVsZUNvdW50KCk7CgogICAgICBmb3IgKHZhciByb3cgPSAwOyByb3cgPCBsZW5ndGg7IHJvdysrKSB7CiAgICAgICAgZm9yICh2YXIgY29sID0gMDsgY29sIDwgbGVuZ3RoOyBjb2wrKykgewogICAgICAgICAgY29udGV4dC5maWxsU3R5bGUgPSBfdGhpcy5pc0Rhcmsocm93LCBjb2wpID8gJ2JsYWNrJyA6ICd3aGl0ZSc7CiAgICAgICAgICBjb250ZXh0LmZpbGxSZWN0KHJvdyAqIGNlbGxTaXplLCBjb2wgKiBjZWxsU2l6ZSwgY2VsbFNpemUsIGNlbGxTaXplKTsKICAgICAgICB9CiAgICAgIH0KICAgIH07CgogICAgcmV0dXJuIF90aGlzOwogIH07IC8vLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tCiAgLy8gcXJjb2RlLnN0cmluZ1RvQnl0ZXMKICAvLy0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLQoKCiAgcXJjb2RlLnN0cmluZ1RvQnl0ZXNGdW5jcyA9IHsKICAgICdkZWZhdWx0JzogZnVuY3Rpb24gX2RlZmF1bHQocykgewogICAgICB2YXIgYnl0ZXMgPSBbXTsKCiAgICAgIGZvciAodmFyIGkgPSAwOyBpIDwgcy5sZW5ndGg7IGkgKz0gMSkgewogICAgICAgIHZhciBjID0gcy5jaGFyQ29kZUF0KGkpOwogICAgICAgIGJ5dGVzLnB1c2goYyAmIDB4ZmYpOwogICAgICB9CgogICAgICByZXR1cm4gYnl0ZXM7CiAgICB9CiAgfTsKICBxcmNvZGUuc3RyaW5nVG9CeXRlcyA9IHFyY29kZS5zdHJpbmdUb0J5dGVzRnVuY3NbJ2RlZmF1bHQnXTsgLy8tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0KICAvLyBxcmNvZGUuY3JlYXRlU3RyaW5nVG9CeXRlcwogIC8vLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tCgogIC8qKgogICAqIEBwYXJhbSB1bmljb2RlRGF0YSBiYXNlNjQgc3RyaW5nIG9mIGJ5dGUgYXJyYXkuCiAgICogWzE2Yml0IFVuaWNvZGVdLFsxNmJpdCBCeXRlc10sIC4uLgogICAqIEBwYXJhbSBudW1DaGFycwogICAqLwoKICBxcmNvZGUuY3JlYXRlU3RyaW5nVG9CeXRlcyA9IGZ1bmN0aW9uICh1bmljb2RlRGF0YSwgbnVtQ2hhcnMpIHsKICAgIC8vIGNyZWF0ZSBjb252ZXJzaW9uIG1hcC4KICAgIHZhciB1bmljb2RlTWFwID0gZnVuY3Rpb24gKCkgewogICAgICB2YXIgYmluID0gYmFzZTY0RGVjb2RlSW5wdXRTdHJlYW0odW5pY29kZURhdGEpOwoKICAgICAgdmFyIHJlYWQgPSBmdW5jdGlvbiByZWFkKCkgewogICAgICAgIHZhciBiID0gYmluLnJlYWQoKTsKICAgICAgICBpZiAoYiA9PSAtMSkgdGhyb3cgJ2VvZic7CiAgICAgICAgcmV0dXJuIGI7CiAgICAgIH07CgogICAgICB2YXIgY291bnQgPSAwOwogICAgICB2YXIgdW5pY29kZU1hcCA9IHt9OwoKICAgICAgd2hpbGUgKHRydWUpIHsKICAgICAgICB2YXIgYjAgPSBiaW4ucmVhZCgpOwogICAgICAgIGlmIChiMCA9PSAtMSkgYnJlYWs7CiAgICAgICAgdmFyIGIxID0gcmVhZCgpOwogICAgICAgIHZhciBiMiA9IHJlYWQoKTsKICAgICAgICB2YXIgYjMgPSByZWFkKCk7CiAgICAgICAgdmFyIGsgPSBTdHJpbmcuZnJvbUNoYXJDb2RlKGIwIDw8IDggfCBiMSk7CiAgICAgICAgdmFyIHYgPSBiMiA8PCA4IHwgYjM7CiAgICAgICAgdW5pY29kZU1hcFtrXSA9IHY7CiAgICAgICAgY291bnQgKz0gMTsKICAgICAgfQoKICAgICAgaWYgKGNvdW50ICE9IG51bUNoYXJzKSB7CiAgICAgICAgdGhyb3cgY291bnQgKyAnICE9ICcgKyBudW1DaGFyczsKICAgICAgfQoKICAgICAgcmV0dXJuIHVuaWNvZGVNYXA7CiAgICB9KCk7CgogICAgdmFyIHVua25vd25DaGFyID0gJz8nLmNoYXJDb2RlQXQoMCk7CiAgICByZXR1cm4gZnVuY3Rpb24gKHMpIHsKICAgICAgdmFyIGJ5dGVzID0gW107CgogICAgICBmb3IgKHZhciBpID0gMDsgaSA8IHMubGVuZ3RoOyBpICs9IDEpIHsKICAgICAgICB2YXIgYyA9IHMuY2hhckNvZGVBdChpKTsKCiAgICAgICAgaWYgKGMgPCAxMjgpIHsKICAgICAgICAgIGJ5dGVzLnB1c2goYyk7CiAgICAgICAgfSBlbHNlIHsKICAgICAgICAgIHZhciBiID0gdW5pY29kZU1hcFtzLmNoYXJBdChpKV07CgogICAgICAgICAgaWYgKHR5cGVvZiBiID09ICdudW1iZXInKSB7CiAgICAgICAgICAgIGlmICgoYiAmIDB4ZmYpID09IGIpIHsKICAgICAgICAgICAgICAvLyAxYnl0ZQogICAgICAgICAgICAgIGJ5dGVzLnB1c2goYik7CiAgICAgICAgICAgIH0gZWxzZSB7CiAgICAgICAgICAgICAgLy8gMmJ5dGVzCiAgICAgICAgICAgICAgYnl0ZXMucHVzaChiID4+PiA4KTsKICAgICAgICAgICAgICBieXRlcy5wdXNoKGIgJiAweGZmKTsKICAgICAgICAgICAgfQogICAgICAgICAgfSBlbHNlIHsKICAgICAgICAgICAgYnl0ZXMucHVzaCh1bmtub3duQ2hhcik7CiAgICAgICAgICB9CiAgICAgICAgfQogICAgICB9CgogICAgICByZXR1cm4gYnl0ZXM7CiAgICB9OwogIH07IC8vLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tCiAgLy8gUVJNb2RlCiAgLy8tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0KCgogIHZhciBRUk1vZGUgPSB7CiAgICBNT0RFX05VTUJFUjogMSA8PCAwLAogICAgTU9ERV9BTFBIQV9OVU06IDEgPDwgMSwKICAgIE1PREVfOEJJVF9CWVRFOiAxIDw8IDIsCiAgICBNT0RFX0tBTkpJOiAxIDw8IDMKICB9OyAvLy0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLQogIC8vIFFSRXJyb3JDb3JyZWN0aW9uTGV2ZWwKICAvLy0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLQoKICB2YXIgUVJFcnJvckNvcnJlY3Rpb25MZXZlbCA9IHsKICAgIEw6IDEsCiAgICBNOiAwLAogICAgUTogMywKICAgIEg6IDIKICB9OyAvLy0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLQogIC8vIFFSTWFza1BhdHRlcm4KICAvLy0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLQoKICB2YXIgUVJNYXNrUGF0dGVybiA9IHsKICAgIFBBVFRFUk4wMDA6IDAsCiAgICBQQVRURVJOMDAxOiAxLAogICAgUEFUVEVSTjAxMDogMiwKICAgIFBBVFRFUk4wMTE6IDMsCiAgICBQQVRURVJOMTAwOiA0LAogICAgUEFUVEVSTjEwMTogNSwKICAgIFBBVFRFUk4xMTA6IDYsCiAgICBQQVRURVJOMTExOiA3CiAgfTsgLy8tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0KICAvLyBRUlV0aWwKICAvLy0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLQoKICB2YXIgUVJVdGlsID0gZnVuY3Rpb24gKCkgewogICAgdmFyIFBBVFRFUk5fUE9TSVRJT05fVEFCTEUgPSBbW10sIFs2LCAxOF0sIFs2LCAyMl0sIFs2LCAyNl0sIFs2LCAzMF0sIFs2LCAzNF0sIFs2LCAyMiwgMzhdLCBbNiwgMjQsIDQyXSwgWzYsIDI2LCA0Nl0sIFs2LCAyOCwgNTBdLCBbNiwgMzAsIDU0XSwgWzYsIDMyLCA1OF0sIFs2LCAzNCwgNjJdLCBbNiwgMjYsIDQ2LCA2Nl0sIFs2LCAyNiwgNDgsIDcwXSwgWzYsIDI2LCA1MCwgNzRdLCBbNiwgMzAsIDU0LCA3OF0sIFs2LCAzMCwgNTYsIDgyXSwgWzYsIDMwLCA1OCwgODZdLCBbNiwgMzQsIDYyLCA5MF0sIFs2LCAyOCwgNTAsIDcyLCA5NF0sIFs2LCAyNiwgNTAsIDc0LCA5OF0sIFs2LCAzMCwgNTQsIDc4LCAxMDJdLCBbNiwgMjgsIDU0LCA4MCwgMTA2XSwgWzYsIDMyLCA1OCwgODQsIDExMF0sIFs2LCAzMCwgNTgsIDg2LCAxMTRdLCBbNiwgMzQsIDYyLCA5MCwgMTE4XSwgWzYsIDI2LCA1MCwgNzQsIDk4LCAxMjJdLCBbNiwgMzAsIDU0LCA3OCwgMTAyLCAxMjZdLCBbNiwgMjYsIDUyLCA3OCwgMTA0LCAxMzBdLCBbNiwgMzAsIDU2LCA4MiwgMTA4LCAxMzRdLCBbNiwgMzQsIDYwLCA4NiwgMTEyLCAxMzhdLCBbNiwgMzAsIDU4LCA4NiwgMTE0LCAxNDJdLCBbNiwgMzQsIDYyLCA5MCwgMTE4LCAxNDZdLCBbNiwgMzAsIDU0LCA3OCwgMTAyLCAxMjYsIDE1MF0sIFs2LCAyNCwgNTAsIDc2LCAxMDIsIDEyOCwgMTU0XSwgWzYsIDI4LCA1NCwgODAsIDEwNiwgMTMyLCAxNThdLCBbNiwgMzIsIDU4LCA4NCwgMTEwLCAxMzYsIDE2Ml0sIFs2LCAyNiwgNTQsIDgyLCAxMTAsIDEzOCwgMTY2XSwgWzYsIDMwLCA1OCwgODYsIDExNCwgMTQyLCAxNzBdXTsKICAgIHZhciBHMTUgPSAxIDw8IDEwIHwgMSA8PCA4IHwgMSA8PCA1IHwgMSA8PCA0IHwgMSA8PCAyIHwgMSA8PCAxIHwgMSA8PCAwOwogICAgdmFyIEcxOCA9IDEgPDwgMTIgfCAxIDw8IDExIHwgMSA8PCAxMCB8IDEgPDwgOSB8IDEgPDwgOCB8IDEgPDwgNSB8IDEgPDwgMiB8IDEgPDwgMDsKICAgIHZhciBHMTVfTUFTSyA9IDEgPDwgMTQgfCAxIDw8IDEyIHwgMSA8PCAxMCB8IDEgPDwgNCB8IDEgPDwgMTsKICAgIHZhciBfdGhpcyA9IHt9OwoKICAgIHZhciBnZXRCQ0hEaWdpdCA9IGZ1bmN0aW9uIGdldEJDSERpZ2l0KGRhdGEpIHsKICAgICAgdmFyIGRpZ2l0ID0gMDsKCiAgICAgIHdoaWxlIChkYXRhICE9IDApIHsKICAgICAgICBkaWdpdCArPSAxOwogICAgICAgIGRhdGEgPj4+PSAxOwogICAgICB9CgogICAgICByZXR1cm4gZGlnaXQ7CiAgICB9OwoKICAgIF90aGlzLmdldEJDSFR5cGVJbmZvID0gZnVuY3Rpb24gKGRhdGEpIHsKICAgICAgdmFyIGQgPSBkYXRhIDw8IDEwOwoKICAgICAgd2hpbGUgKGdldEJDSERpZ2l0KGQpIC0gZ2V0QkNIRGlnaXQoRzE1KSA+PSAwKSB7CiAgICAgICAgZCBePSBHMTUgPDwgZ2V0QkNIRGlnaXQoZCkgLSBnZXRCQ0hEaWdpdChHMTUpOwogICAgICB9CgogICAgICByZXR1cm4gKGRhdGEgPDwgMTAgfCBkKSBeIEcxNV9NQVNLOwogICAgfTsKCiAgICBfdGhpcy5nZXRCQ0hUeXBlTnVtYmVyID0gZnVuY3Rpb24gKGRhdGEpIHsKICAgICAgdmFyIGQgPSBkYXRhIDw8IDEyOwoKICAgICAgd2hpbGUgKGdldEJDSERpZ2l0KGQpIC0gZ2V0QkNIRGlnaXQoRzE4KSA+PSAwKSB7CiAgICAgICAgZCBePSBHMTggPDwgZ2V0QkNIRGlnaXQoZCkgLSBnZXRCQ0hEaWdpdChHMTgpOwogICAgICB9CgogICAgICByZXR1cm4gZGF0YSA8PCAxMiB8IGQ7CiAgICB9OwoKICAgIF90aGlzLmdldFBhdHRlcm5Qb3NpdGlvbiA9IGZ1bmN0aW9uICh0eXBlTnVtYmVyKSB7CiAgICAgIHJldHVybiBQQVRURVJOX1BPU0lUSU9OX1RBQkxFW3R5cGVOdW1iZXIgLSAxXTsKICAgIH07CgogICAgX3RoaXMuZ2V0TWFza0Z1bmN0aW9uID0gZnVuY3Rpb24gKG1hc2tQYXR0ZXJuKSB7CiAgICAgIHN3aXRjaCAobWFza1BhdHRlcm4pIHsKICAgICAgICBjYXNlIFFSTWFza1BhdHRlcm4uUEFUVEVSTjAwMDoKICAgICAgICAgIHJldHVybiBmdW5jdGlvbiAoaSwgaikgewogICAgICAgICAgICByZXR1cm4gKGkgKyBqKSAlIDIgPT0gMDsKICAgICAgICAgIH07CgogICAgICAgIGNhc2UgUVJNYXNrUGF0dGVybi5QQVRURVJOMDAxOgogICAgICAgICAgcmV0dXJuIGZ1bmN0aW9uIChpLCBqKSB7CiAgICAgICAgICAgIHJldHVybiBpICUgMiA9PSAwOwogICAgICAgICAgfTsKCiAgICAgICAgY2FzZSBRUk1hc2tQYXR0ZXJuLlBBVFRFUk4wMTA6CiAgICAgICAgICByZXR1cm4gZnVuY3Rpb24gKGksIGopIHsKICAgICAgICAgICAgcmV0dXJuIGogJSAzID09IDA7CiAgICAgICAgICB9OwoKICAgICAgICBjYXNlIFFSTWFza1BhdHRlcm4uUEFUVEVSTjAxMToKICAgICAgICAgIHJldHVybiBmdW5jdGlvbiAoaSwgaikgewogICAgICAgICAgICByZXR1cm4gKGkgKyBqKSAlIDMgPT0gMDsKICAgICAgICAgIH07CgogICAgICAgIGNhc2UgUVJNYXNrUGF0dGVybi5QQVRURVJOMTAwOgogICAgICAgICAgcmV0dXJuIGZ1bmN0aW9uIChpLCBqKSB7CiAgICAgICAgICAgIHJldHVybiAoTWF0aC5mbG9vcihpIC8gMikgKyBNYXRoLmZsb29yKGogLyAzKSkgJSAyID09IDA7CiAgICAgICAgICB9OwoKICAgICAgICBjYXNlIFFSTWFza1BhdHRlcm4uUEFUVEVSTjEwMToKICAgICAgICAgIHJldHVybiBmdW5jdGlvbiAoaSwgaikgewogICAgICAgICAgICByZXR1cm4gaSAqIGogJSAyICsgaSAqIGogJSAzID09IDA7CiAgICAgICAgICB9OwoKICAgICAgICBjYXNlIFFSTWFza1BhdHRlcm4uUEFUVEVSTjExMDoKICAgICAgICAgIHJldHVybiBmdW5jdGlvbiAoaSwgaikgewogICAgICAgICAgICByZXR1cm4gKGkgKiBqICUgMiArIGkgKiBqICUgMykgJSAyID09IDA7CiAgICAgICAgICB9OwoKICAgICAgICBjYXNlIFFSTWFza1BhdHRlcm4uUEFUVEVSTjExMToKICAgICAgICAgIHJldHVybiBmdW5jdGlvbiAoaSwgaikgewogICAgICAgICAgICByZXR1cm4gKGkgKiBqICUgMyArIChpICsgaikgJSAyKSAlIDIgPT0gMDsKICAgICAgICAgIH07CgogICAgICAgIGRlZmF1bHQ6CiAgICAgICAgICB0aHJvdyAnYmFkIG1hc2tQYXR0ZXJuOicgKyBtYXNrUGF0dGVybjsKICAgICAgfQogICAgfTsKCiAgICBfdGhpcy5nZXRFcnJvckNvcnJlY3RQb2x5bm9taWFsID0gZnVuY3Rpb24gKGVycm9yQ29ycmVjdExlbmd0aCkgewogICAgICB2YXIgYSA9IHFyUG9seW5vbWlhbChbMV0sIDApOwoKICAgICAgZm9yICh2YXIgaSA9IDA7IGkgPCBlcnJvckNvcnJlY3RMZW5ndGg7IGkgKz0gMSkgewogICAgICAgIGEgPSBhLm11bHRpcGx5KHFyUG9seW5vbWlhbChbMSwgUVJNYXRoLmdleHAoaSldLCAwKSk7CiAgICAgIH0KCiAgICAgIHJldHVybiBhOwogICAgfTsKCiAgICBfdGhpcy5nZXRMZW5ndGhJbkJpdHMgPSBmdW5jdGlvbiAobW9kZSwgdHlwZSkgewogICAgICBpZiAoMSA8PSB0eXBlICYmIHR5cGUgPCAxMCkgewogICAgICAgIC8vIDEgLSA5CiAgICAgICAgc3dpdGNoIChtb2RlKSB7CiAgICAgICAgICBjYXNlIFFSTW9kZS5NT0RFX05VTUJFUjoKICAgICAgICAgICAgcmV0dXJuIDEwOwoKICAgICAgICAgIGNhc2UgUVJNb2RlLk1PREVfQUxQSEFfTlVNOgogICAgICAgICAgICByZXR1cm4gOTsKCiAgICAgICAgICBjYXNlIFFSTW9kZS5NT0RFXzhCSVRfQllURToKICAgICAgICAgICAgcmV0dXJuIDg7CgogICAgICAgICAgY2FzZSBRUk1vZGUuTU9ERV9LQU5KSToKICAgICAgICAgICAgcmV0dXJuIDg7CgogICAgICAgICAgZGVmYXVsdDoKICAgICAgICAgICAgdGhyb3cgJ21vZGU6JyArIG1vZGU7CiAgICAgICAgfQogICAgICB9IGVsc2UgaWYgKHR5cGUgPCAyNykgewogICAgICAgIC8vIDEwIC0gMjYKICAgICAgICBzd2l0Y2ggKG1vZGUpIHsKICAgICAgICAgIGNhc2UgUVJNb2RlLk1PREVfTlVNQkVSOgogICAgICAgICAgICByZXR1cm4gMTI7CgogICAgICAgICAgY2FzZSBRUk1vZGUuTU9ERV9BTFBIQV9OVU06CiAgICAgICAgICAgIHJldHVybiAxMTsKCiAgICAgICAgICBjYXNlIFFSTW9kZS5NT0RFXzhCSVRfQllURToKICAgICAgICAgICAgcmV0dXJuIDE2OwoKICAgICAgICAgIGNhc2UgUVJNb2RlLk1PREVfS0FOSkk6CiAgICAgICAgICAgIHJldHVybiAxMDsKCiAgICAgICAgICBkZWZhdWx0OgogICAgICAgICAgICB0aHJvdyAnbW9kZTonICsgbW9kZTsKICAgICAgICB9CiAgICAgIH0gZWxzZSBpZiAodHlwZSA8IDQxKSB7CiAgICAgICAgLy8gMjcgLSA0MAogICAgICAgIHN3aXRjaCAobW9kZSkgewogICAgICAgICAgY2FzZSBRUk1vZGUuTU9ERV9OVU1CRVI6CiAgICAgICAgICAgIHJldHVybiAxNDsKCiAgICAgICAgICBjYXNlIFFSTW9kZS5NT0RFX0FMUEhBX05VTToKICAgICAgICAgICAgcmV0dXJuIDEzOwoKICAgICAgICAgIGNhc2UgUVJNb2RlLk1PREVfOEJJVF9CWVRFOgogICAgICAgICAgICByZXR1cm4gMTY7CgogICAgICAgICAgY2FzZSBRUk1vZGUuTU9ERV9LQU5KSToKICAgICAgICAgICAgcmV0dXJuIDEyOwoKICAgICAgICAgIGRlZmF1bHQ6CiAgICAgICAgICAgIHRocm93ICdtb2RlOicgKyBtb2RlOwogICAgICAgIH0KICAgICAgfSBlbHNlIHsKICAgICAgICB0aHJvdyAndHlwZTonICsgdHlwZTsKICAgICAgfQogICAgfTsKCiAgICBfdGhpcy5nZXRMb3N0UG9pbnQgPSBmdW5jdGlvbiAocXJjb2RlKSB7CiAgICAgIHZhciBtb2R1bGVDb3VudCA9IHFyY29kZS5nZXRNb2R1bGVDb3VudCgpOwogICAgICB2YXIgbG9zdFBvaW50ID0gMDsgLy8gTEVWRUwxCgogICAgICBmb3IgKHZhciByb3cgPSAwOyByb3cgPCBtb2R1bGVDb3VudDsgcm93ICs9IDEpIHsKICAgICAgICBmb3IgKHZhciBjb2wgPSAwOyBjb2wgPCBtb2R1bGVDb3VudDsgY29sICs9IDEpIHsKICAgICAgICAgIHZhciBzYW1lQ291bnQgPSAwOwogICAgICAgICAgdmFyIGRhcmsgPSBxcmNvZGUuaXNEYXJrKHJvdywgY29sKTsKCiAgICAgICAgICBmb3IgKHZhciByID0gLTE7IHIgPD0gMTsgciArPSAxKSB7CiAgICAgICAgICAgIGlmIChyb3cgKyByIDwgMCB8fCBtb2R1bGVDb3VudCA8PSByb3cgKyByKSB7CiAgICAgICAgICAgICAgY29udGludWU7CiAgICAgICAgICAgIH0KCiAgICAgICAgICAgIGZvciAodmFyIGMgPSAtMTsgYyA8PSAxOyBjICs9IDEpIHsKICAgICAgICAgICAgICBpZiAoY29sICsgYyA8IDAgfHwgbW9kdWxlQ291bnQgPD0gY29sICsgYykgewogICAgICAgICAgICAgICAgY29udGludWU7CiAgICAgICAgICAgICAgfQoKICAgICAgICAgICAgICBpZiAociA9PSAwICYmIGMgPT0gMCkgewogICAgICAgICAgICAgICAgY29udGludWU7CiAgICAgICAgICAgICAgfQoKICAgICAgICAgICAgICBpZiAoZGFyayA9PSBxcmNvZGUuaXNEYXJrKHJvdyArIHIsIGNvbCArIGMpKSB7CiAgICAgICAgICAgICAgICBzYW1lQ291bnQgKz0gMTsKICAgICAgICAgICAgICB9CiAgICAgICAgICAgIH0KICAgICAgICAgIH0KCiAgICAgICAgICBpZiAoc2FtZUNvdW50ID4gNSkgewogICAgICAgICAgICBsb3N0UG9pbnQgKz0gMyArIHNhbWVDb3VudCAtIDU7CiAgICAgICAgICB9CiAgICAgICAgfQogICAgICB9IC8vIExFVkVMMgoKCiAgICAgIGZvciAodmFyIHJvdyA9IDA7IHJvdyA8IG1vZHVsZUNvdW50IC0gMTsgcm93ICs9IDEpIHsKICAgICAgICBmb3IgKHZhciBjb2wgPSAwOyBjb2wgPCBtb2R1bGVDb3VudCAtIDE7IGNvbCArPSAxKSB7CiAgICAgICAgICB2YXIgY291bnQgPSAwOwogICAgICAgICAgaWYgKHFyY29kZS5pc0Rhcmsocm93LCBjb2wpKSBjb3VudCArPSAxOwogICAgICAgICAgaWYgKHFyY29kZS5pc0Rhcmsocm93ICsgMSwgY29sKSkgY291bnQgKz0gMTsKICAgICAgICAgIGlmIChxcmNvZGUuaXNEYXJrKHJvdywgY29sICsgMSkpIGNvdW50ICs9IDE7CiAgICAgICAgICBpZiAocXJjb2RlLmlzRGFyayhyb3cgKyAxLCBjb2wgKyAxKSkgY291bnQgKz0gMTsKCiAgICAgICAgICBpZiAoY291bnQgPT0gMCB8fCBjb3VudCA9PSA0KSB7CiAgICAgICAgICAgIGxvc3RQb2ludCArPSAzOwogICAgICAgICAgfQogICAgICAgIH0KICAgICAgfSAvLyBMRVZFTDMKCgogICAgICBmb3IgKHZhciByb3cgPSAwOyByb3cgPCBtb2R1bGVDb3VudDsgcm93ICs9IDEpIHsKICAgICAgICBmb3IgKHZhciBjb2wgPSAwOyBjb2wgPCBtb2R1bGVDb3VudCAtIDY7IGNvbCArPSAxKSB7CiAgICAgICAgICBpZiAocXJjb2RlLmlzRGFyayhyb3csIGNvbCkgJiYgIXFyY29kZS5pc0Rhcmsocm93LCBjb2wgKyAxKSAmJiBxcmNvZGUuaXNEYXJrKHJvdywgY29sICsgMikgJiYgcXJjb2RlLmlzRGFyayhyb3csIGNvbCArIDMpICYmIHFyY29kZS5pc0Rhcmsocm93LCBjb2wgKyA0KSAmJiAhcXJjb2RlLmlzRGFyayhyb3csIGNvbCArIDUpICYmIHFyY29kZS5pc0Rhcmsocm93LCBjb2wgKyA2KSkgewogICAgICAgICAgICBsb3N0UG9pbnQgKz0gNDA7CiAgICAgICAgICB9CiAgICAgICAgfQogICAgICB9CgogICAgICBmb3IgKHZhciBjb2wgPSAwOyBjb2wgPCBtb2R1bGVDb3VudDsgY29sICs9IDEpIHsKICAgICAgICBmb3IgKHZhciByb3cgPSAwOyByb3cgPCBtb2R1bGVDb3VudCAtIDY7IHJvdyArPSAxKSB7CiAgICAgICAgICBpZiAocXJjb2RlLmlzRGFyayhyb3csIGNvbCkgJiYgIXFyY29kZS5pc0Rhcmsocm93ICsgMSwgY29sKSAmJiBxcmNvZGUuaXNEYXJrKHJvdyArIDIsIGNvbCkgJiYgcXJjb2RlLmlzRGFyayhyb3cgKyAzLCBjb2wpICYmIHFyY29kZS5pc0Rhcmsocm93ICsgNCwgY29sKSAmJiAhcXJjb2RlLmlzRGFyayhyb3cgKyA1LCBjb2wpICYmIHFyY29kZS5pc0Rhcmsocm93ICsgNiwgY29sKSkgewogICAgICAgICAgICBsb3N0UG9pbnQgKz0gNDA7CiAgICAgICAgICB9CiAgICAgICAgfQogICAgICB9IC8vIExFVkVMNAoKCiAgICAgIHZhciBkYXJrQ291bnQgPSAwOwoKICAgICAgZm9yICh2YXIgY29sID0gMDsgY29sIDwgbW9kdWxlQ291bnQ7IGNvbCArPSAxKSB7CiAgICAgICAgZm9yICh2YXIgcm93ID0gMDsgcm93IDwgbW9kdWxlQ291bnQ7IHJvdyArPSAxKSB7CiAgICAgICAgICBpZiAocXJjb2RlLmlzRGFyayhyb3csIGNvbCkpIHsKICAgICAgICAgICAgZGFya0NvdW50ICs9IDE7CiAgICAgICAgICB9CiAgICAgICAgfQogICAgICB9CgogICAgICB2YXIgcmF0aW8gPSBNYXRoLmFicygxMDAgKiBkYXJrQ291bnQgLyBtb2R1bGVDb3VudCAvIG1vZHVsZUNvdW50IC0gNTApIC8gNTsKICAgICAgbG9zdFBvaW50ICs9IHJhdGlvICogMTA7CiAgICAgIHJldHVybiBsb3N0UG9pbnQ7CiAgICB9OwoKICAgIHJldHVybiBfdGhpczsKICB9KCk7IC8vLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tCiAgLy8gUVJNYXRoCiAgLy8tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0KCgogIHZhciBRUk1hdGggPSBmdW5jdGlvbiAoKSB7CiAgICB2YXIgRVhQX1RBQkxFID0gbmV3IEFycmF5KDI1Nik7CiAgICB2YXIgTE9HX1RBQkxFID0gbmV3IEFycmF5KDI1Nik7IC8vIGluaXRpYWxpemUgdGFibGVzCgogICAgZm9yICh2YXIgaSA9IDA7IGkgPCA4OyBpICs9IDEpIHsKICAgICAgRVhQX1RBQkxFW2ldID0gMSA8PCBpOwogICAgfQoKICAgIGZvciAodmFyIGkgPSA4OyBpIDwgMjU2OyBpICs9IDEpIHsKICAgICAgRVhQX1RBQkxFW2ldID0gRVhQX1RBQkxFW2kgLSA0XSBeIEVYUF9UQUJMRVtpIC0gNV0gXiBFWFBfVEFCTEVbaSAtIDZdIF4gRVhQX1RBQkxFW2kgLSA4XTsKICAgIH0KCiAgICBmb3IgKHZhciBpID0gMDsgaSA8IDI1NTsgaSArPSAxKSB7CiAgICAgIExPR19UQUJMRVtFWFBfVEFCTEVbaV1dID0gaTsKICAgIH0KCiAgICB2YXIgX3RoaXMgPSB7fTsKCiAgICBfdGhpcy5nbG9nID0gZnVuY3Rpb24gKG4pIHsKICAgICAgaWYgKG4gPCAxKSB7CiAgICAgICAgdGhyb3cgJ2dsb2coJyArIG4gKyAnKSc7CiAgICAgIH0KCiAgICAgIHJldHVybiBMT0dfVEFCTEVbbl07CiAgICB9OwoKICAgIF90aGlzLmdleHAgPSBmdW5jdGlvbiAobikgewogICAgICB3aGlsZSAobiA8IDApIHsKICAgICAgICBuICs9IDI1NTsKICAgICAgfQoKICAgICAgd2hpbGUgKG4gPj0gMjU2KSB7CiAgICAgICAgbiAtPSAyNTU7CiAgICAgIH0KCiAgICAgIHJldHVybiBFWFBfVEFCTEVbbl07CiAgICB9OwoKICAgIHJldHVybiBfdGhpczsKICB9KCk7IC8vLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tCiAgLy8gcXJQb2x5bm9taWFsCiAgLy8tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0KCgogIGZ1bmN0aW9uIHFyUG9seW5vbWlhbChudW0sIHNoaWZ0KSB7CiAgICBpZiAodHlwZW9mIG51bS5sZW5ndGggPT0gJ3VuZGVmaW5lZCcpIHsKICAgICAgdGhyb3cgbnVtLmxlbmd0aCArICcvJyArIHNoaWZ0OwogICAgfQoKICAgIHZhciBfbnVtID0gZnVuY3Rpb24gKCkgewogICAgICB2YXIgb2Zmc2V0ID0gMDsKCiAgICAgIHdoaWxlIChvZmZzZXQgPCBudW0ubGVuZ3RoICYmIG51bVtvZmZzZXRdID09IDApIHsKICAgICAgICBvZmZzZXQgKz0gMTsKICAgICAgfQoKICAgICAgdmFyIF9udW0gPSBuZXcgQXJyYXkobnVtLmxlbmd0aCAtIG9mZnNldCArIHNoaWZ0KTsKCiAgICAgIGZvciAodmFyIGkgPSAwOyBpIDwgbnVtLmxlbmd0aCAtIG9mZnNldDsgaSArPSAxKSB7CiAgICAgICAgX251bVtpXSA9IG51bVtpICsgb2Zmc2V0XTsKICAgICAgfQoKICAgICAgcmV0dXJuIF9udW07CiAgICB9KCk7CgogICAgdmFyIF90aGlzID0ge307CgogICAgX3RoaXMuZ2V0QXQgPSBmdW5jdGlvbiAoaW5kZXgpIHsKICAgICAgcmV0dXJuIF9udW1baW5kZXhdOwogICAgfTsKCiAgICBfdGhpcy5nZXRMZW5ndGggPSBmdW5jdGlvbiAoKSB7CiAgICAgIHJldHVybiBfbnVtLmxlbmd0aDsKICAgIH07CgogICAgX3RoaXMubXVsdGlwbHkgPSBmdW5jdGlvbiAoZSkgewogICAgICB2YXIgbnVtID0gbmV3IEFycmF5KF90aGlzLmdldExlbmd0aCgpICsgZS5nZXRMZW5ndGgoKSAtIDEpOwoKICAgICAgZm9yICh2YXIgaSA9IDA7IGkgPCBfdGhpcy5nZXRMZW5ndGgoKTsgaSArPSAxKSB7CiAgICAgICAgZm9yICh2YXIgaiA9IDA7IGogPCBlLmdldExlbmd0aCgpOyBqICs9IDEpIHsKICAgICAgICAgIG51bVtpICsgal0gXj0gUVJNYXRoLmdleHAoUVJNYXRoLmdsb2coX3RoaXMuZ2V0QXQoaSkpICsgUVJNYXRoLmdsb2coZS5nZXRBdChqKSkpOwogICAgICAgIH0KICAgICAgfQoKICAgICAgcmV0dXJuIHFyUG9seW5vbWlhbChudW0sIDApOwogICAgfTsKCiAgICBfdGhpcy5tb2QgPSBmdW5jdGlvbiAoZSkgewogICAgICBpZiAoX3RoaXMuZ2V0TGVuZ3RoKCkgLSBlLmdldExlbmd0aCgpIDwgMCkgewogICAgICAgIHJldHVybiBfdGhpczsKICAgICAgfQoKICAgICAgdmFyIHJhdGlvID0gUVJNYXRoLmdsb2coX3RoaXMuZ2V0QXQoMCkpIC0gUVJNYXRoLmdsb2coZS5nZXRBdCgwKSk7CiAgICAgIHZhciBudW0gPSBuZXcgQXJyYXkoX3RoaXMuZ2V0TGVuZ3RoKCkpOwoKICAgICAgZm9yICh2YXIgaSA9IDA7IGkgPCBfdGhpcy5nZXRMZW5ndGgoKTsgaSArPSAxKSB7CiAgICAgICAgbnVtW2ldID0gX3RoaXMuZ2V0QXQoaSk7CiAgICAgIH0KCiAgICAgIGZvciAodmFyIGkgPSAwOyBpIDwgZS5nZXRMZW5ndGgoKTsgaSArPSAxKSB7CiAgICAgICAgbnVtW2ldIF49IFFSTWF0aC5nZXhwKFFSTWF0aC5nbG9nKGUuZ2V0QXQoaSkpICsgcmF0aW8pOwogICAgICB9IC8vIHJlY3Vyc2l2ZSBjYWxsCgoKICAgICAgcmV0dXJuIHFyUG9seW5vbWlhbChudW0sIDApLm1vZChlKTsKICAgIH07CgogICAgcmV0dXJuIF90aGlzOwogIH0gLy8tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0KICAvLyBRUlJTQmxvY2sKICAvLy0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLQoKCiAgdmFyIFFSUlNCbG9jayA9IGZ1bmN0aW9uICgpIHsKICAgIHZhciBSU19CTE9DS19UQUJMRSA9IFsvLyBMCiAgICAvLyBNCiAgICAvLyBRCiAgICAvLyBICiAgICAvLyAxCiAgICBbMSwgMjYsIDE5XSwgWzEsIDI2LCAxNl0sIFsxLCAyNiwgMTNdLCBbMSwgMjYsIDldLCAvLyAyCiAgICBbMSwgNDQsIDM0XSwgWzEsIDQ0LCAyOF0sIFsxLCA0NCwgMjJdLCBbMSwgNDQsIDE2XSwgLy8gMwogICAgWzEsIDcwLCA1NV0sIFsxLCA3MCwgNDRdLCBbMiwgMzUsIDE3XSwgWzIsIDM1LCAxM10sIC8vIDQKICAgIFsxLCAxMDAsIDgwXSwgWzIsIDUwLCAzMl0sIFsyLCA1MCwgMjRdLCBbNCwgMjUsIDldLCAvLyA1CiAgICBbMSwgMTM0LCAxMDhdLCBbMiwgNjcsIDQzXSwgWzIsIDMzLCAxNSwgMiwgMzQsIDE2XSwgWzIsIDMzLCAxMSwgMiwgMzQsIDEyXSwgLy8gNgogICAgWzIsIDg2LCA2OF0sIFs0LCA0MywgMjddLCBbNCwgNDMsIDE5XSwgWzQsIDQzLCAxNV0sIC8vIDcKICAgIFsyLCA5OCwgNzhdLCBbNCwgNDksIDMxXSwgWzIsIDMyLCAxNCwgNCwgMzMsIDE1XSwgWzQsIDM5LCAxMywgMSwgNDAsIDE0XSwgLy8gOAogICAgWzIsIDEyMSwgOTddLCBbMiwgNjAsIDM4LCAyLCA2MSwgMzldLCBbNCwgNDAsIDE4LCAyLCA0MSwgMTldLCBbNCwgNDAsIDE0LCAyLCA0MSwgMTVdLCAvLyA5CiAgICBbMiwgMTQ2LCAxMTZdLCBbMywgNTgsIDM2LCAyLCA1OSwgMzddLCBbNCwgMzYsIDE2LCA0LCAzNywgMTddLCBbNCwgMzYsIDEyLCA0LCAzNywgMTNdLCAvLyAxMAogICAgWzIsIDg2LCA2OCwgMiwgODcsIDY5XSwgWzQsIDY5LCA0MywgMSwgNzAsIDQ0XSwgWzYsIDQzLCAxOSwgMiwgNDQsIDIwXSwgWzYsIDQzLCAxNSwgMiwgNDQsIDE2XSwgLy8gMTEKICAgIFs0LCAxMDEsIDgxXSwgWzEsIDgwLCA1MCwgNCwgODEsIDUxXSwgWzQsIDUwLCAyMiwgNCwgNTEsIDIzXSwgWzMsIDM2LCAxMiwgOCwgMzcsIDEzXSwgLy8gMTIKICAgIFsyLCAxMTYsIDkyLCAyLCAxMTcsIDkzXSwgWzYsIDU4LCAzNiwgMiwgNTksIDM3XSwgWzQsIDQ2LCAyMCwgNiwgNDcsIDIxXSwgWzcsIDQyLCAxNCwgNCwgNDMsIDE1XSwgLy8gMTMKICAgIFs0LCAxMzMsIDEwN10sIFs4LCA1OSwgMzcsIDEsIDYwLCAzOF0sIFs4LCA0NCwgMjAsIDQsIDQ1LCAyMV0sIFsxMiwgMzMsIDExLCA0LCAzNCwgMTJdLCAvLyAxNAogICAgWzMsIDE0NSwgMTE1LCAxLCAxNDYsIDExNl0sIFs0LCA2NCwgNDAsIDUsIDY1LCA0MV0sIFsxMSwgMzYsIDE2LCA1LCAzNywgMTddLCBbMTEsIDM2LCAxMiwgNSwgMzcsIDEzXSwgLy8gMTUKICAgIFs1LCAxMDksIDg3LCAxLCAxMTAsIDg4XSwgWzUsIDY1LCA0MSwgNSwgNjYsIDQyXSwgWzUsIDU0LCAyNCwgNywgNTUsIDI1XSwgWzExLCAzNiwgMTIsIDcsIDM3LCAxM10sIC8vIDE2CiAgICBbNSwgMTIyLCA5OCwgMSwgMTIzLCA5OV0sIFs3LCA3MywgNDUsIDMsIDc0LCA0Nl0sIFsxNSwgNDMsIDE5LCAyLCA0NCwgMjBdLCBbMywgNDUsIDE1LCAxMywgNDYsIDE2XSwgLy8gMTcKICAgIFsxLCAxMzUsIDEwNywgNSwgMTM2LCAxMDhdLCBbMTAsIDc0LCA0NiwgMSwgNzUsIDQ3XSwgWzEsIDUwLCAyMiwgMTUsIDUxLCAyM10sIFsyLCA0MiwgMTQsIDE3LCA0MywgMTVdLCAvLyAxOAogICAgWzUsIDE1MCwgMTIwLCAxLCAxNTEsIDEyMV0sIFs5LCA2OSwgNDMsIDQsIDcwLCA0NF0sIFsxNywgNTAsIDIyLCAxLCA1MSwgMjNdLCBbMiwgNDIsIDE0LCAxOSwgNDMsIDE1XSwgLy8gMTkKICAgIFszLCAxNDEsIDExMywgNCwgMTQyLCAxMTRdLCBbMywgNzAsIDQ0LCAxMSwgNzEsIDQ1XSwgWzE3LCA0NywgMjEsIDQsIDQ4LCAyMl0sIFs5LCAzOSwgMTMsIDE2LCA0MCwgMTRdLCAvLyAyMAogICAgWzMsIDEzNSwgMTA3LCA1LCAxMzYsIDEwOF0sIFszLCA2NywgNDEsIDEzLCA2OCwgNDJdLCBbMTUsIDU0LCAyNCwgNSwgNTUsIDI1XSwgWzE1LCA0MywgMTUsIDEwLCA0NCwgMTZdLCAvLyAyMQogICAgWzQsIDE0NCwgMTE2LCA0LCAxNDUsIDExN10sIFsxNywgNjgsIDQyXSwgWzE3LCA1MCwgMjIsIDYsIDUxLCAyM10sIFsxOSwgNDYsIDE2LCA2LCA0NywgMTddLCAvLyAyMgogICAgWzIsIDEzOSwgMTExLCA3LCAxNDAsIDExMl0sIFsxNywgNzQsIDQ2XSwgWzcsIDU0LCAyNCwgMTYsIDU1LCAyNV0sIFszNCwgMzcsIDEzXSwgLy8gMjMKICAgIFs0LCAxNTEsIDEyMSwgNSwgMTUyLCAxMjJdLCBbNCwgNzUsIDQ3LCAxNCwgNzYsIDQ4XSwgWzExLCA1NCwgMjQsIDE0LCA1NSwgMjVdLCBbMTYsIDQ1LCAxNSwgMTQsIDQ2LCAxNl0sIC8vIDI0CiAgICBbNiwgMTQ3LCAxMTcsIDQsIDE0OCwgMTE4XSwgWzYsIDczLCA0NSwgMTQsIDc0LCA0Nl0sIFsxMSwgNTQsIDI0LCAxNiwgNTUsIDI1XSwgWzMwLCA0NiwgMTYsIDIsIDQ3LCAxN10sIC8vIDI1CiAgICBbOCwgMTMyLCAxMDYsIDQsIDEzMywgMTA3XSwgWzgsIDc1LCA0NywgMTMsIDc2LCA0OF0sIFs3LCA1NCwgMjQsIDIyLCA1NSwgMjVdLCBbMjIsIDQ1LCAxNSwgMTMsIDQ2LCAxNl0sIC8vIDI2CiAgICBbMTAsIDE0MiwgMTE0LCAyLCAxNDMsIDExNV0sIFsxOSwgNzQsIDQ2LCA0LCA3NSwgNDddLCBbMjgsIDUwLCAyMiwgNiwgNTEsIDIzXSwgWzMzLCA0NiwgMTYsIDQsIDQ3LCAxN10sIC8vIDI3CiAgICBbOCwgMTUyLCAxMjIsIDQsIDE1MywgMTIzXSwgWzIyLCA3MywgNDUsIDMsIDc0LCA0Nl0sIFs4LCA1MywgMjMsIDI2LCA1NCwgMjRdLCBbMTIsIDQ1LCAxNSwgMjgsIDQ2LCAxNl0sIC8vIDI4CiAgICBbMywgMTQ3LCAxMTcsIDEwLCAxNDgsIDExOF0sIFszLCA3MywgNDUsIDIzLCA3NCwgNDZdLCBbNCwgNTQsIDI0LCAzMSwgNTUsIDI1XSwgWzExLCA0NSwgMTUsIDMxLCA0NiwgMTZdLCAvLyAyOQogICAgWzcsIDE0NiwgMTE2LCA3LCAxNDcsIDExN10sIFsyMSwgNzMsIDQ1LCA3LCA3NCwgNDZdLCBbMSwgNTMsIDIzLCAzNywgNTQsIDI0XSwgWzE5LCA0NSwgMTUsIDI2LCA0NiwgMTZdLCAvLyAzMAogICAgWzUsIDE0NSwgMTE1LCAxMCwgMTQ2LCAxMTZdLCBbMTksIDc1LCA0NywgMTAsIDc2LCA0OF0sIFsxNSwgNTQsIDI0LCAyNSwgNTUsIDI1XSwgWzIzLCA0NSwgMTUsIDI1LCA0NiwgMTZdLCAvLyAzMQogICAgWzEzLCAxNDUsIDExNSwgMywgMTQ2LCAxMTZdLCBbMiwgNzQsIDQ2LCAyOSwgNzUsIDQ3XSwgWzQyLCA1NCwgMjQsIDEsIDU1LCAyNV0sIFsyMywgNDUsIDE1LCAyOCwgNDYsIDE2XSwgLy8gMzIKICAgIFsxNywgMTQ1LCAxMTVdLCBbMTAsIDc0LCA0NiwgMjMsIDc1LCA0N10sIFsxMCwgNTQsIDI0LCAzNSwgNTUsIDI1XSwgWzE5LCA0NSwgMTUsIDM1LCA0NiwgMTZdLCAvLyAzMwogICAgWzE3LCAxNDUsIDExNSwgMSwgMTQ2LCAxMTZdLCBbMTQsIDc0LCA0NiwgMjEsIDc1LCA0N10sIFsyOSwgNTQsIDI0LCAxOSwgNTUsIDI1XSwgWzExLCA0NSwgMTUsIDQ2LCA0NiwgMTZdLCAvLyAzNAogICAgWzEzLCAxNDUsIDExNSwgNiwgMTQ2LCAxMTZdLCBbMTQsIDc0LCA0NiwgMjMsIDc1LCA0N10sIFs0NCwgNTQsIDI0LCA3LCA1NSwgMjVdLCBbNTksIDQ2LCAxNiwgMSwgNDcsIDE3XSwgLy8gMzUKICAgIFsxMiwgMTUxLCAxMjEsIDcsIDE1MiwgMTIyXSwgWzEyLCA3NSwgNDcsIDI2LCA3NiwgNDhdLCBbMzksIDU0LCAyNCwgMTQsIDU1LCAyNV0sIFsyMiwgNDUsIDE1LCA0MSwgNDYsIDE2XSwgLy8gMzYKICAgIFs2LCAxNTEsIDEyMSwgMTQsIDE1MiwgMTIyXSwgWzYsIDc1LCA0NywgMzQsIDc2LCA0OF0sIFs0NiwgNTQsIDI0LCAxMCwgNTUsIDI1XSwgWzIsIDQ1LCAxNSwgNjQsIDQ2LCAxNl0sIC8vIDM3CiAgICBbMTcsIDE1MiwgMTIyLCA0LCAxNTMsIDEyM10sIFsyOSwgNzQsIDQ2LCAxNCwgNzUsIDQ3XSwgWzQ5LCA1NCwgMjQsIDEwLCA1NSwgMjVdLCBbMjQsIDQ1LCAxNSwgNDYsIDQ2LCAxNl0sIC8vIDM4CiAgICBbNCwgMTUyLCAxMjIsIDE4LCAxNTMsIDEyM10sIFsxMywgNzQsIDQ2LCAzMiwgNzUsIDQ3XSwgWzQ4LCA1NCwgMjQsIDE0LCA1NSwgMjVdLCBbNDIsIDQ1LCAxNSwgMzIsIDQ2LCAxNl0sIC8vIDM5CiAgICBbMjAsIDE0NywgMTE3LCA0LCAxNDgsIDExOF0sIFs0MCwgNzUsIDQ3LCA3LCA3NiwgNDhdLCBbNDMsIDU0LCAyNCwgMjIsIDU1LCAyNV0sIFsxMCwgNDUsIDE1LCA2NywgNDYsIDE2XSwgLy8gNDAKICAgIFsxOSwgMTQ4LCAxMTgsIDYsIDE0OSwgMTE5XSwgWzE4LCA3NSwgNDcsIDMxLCA3NiwgNDhdLCBbMzQsIDU0LCAyNCwgMzQsIDU1LCAyNV0sIFsyMCwgNDUsIDE1LCA2MSwgNDYsIDE2XV07CgogICAgdmFyIHFyUlNCbG9jayA9IGZ1bmN0aW9uIHFyUlNCbG9jayh0b3RhbENvdW50LCBkYXRhQ291bnQpIHsKICAgICAgdmFyIF90aGlzID0ge307CiAgICAgIF90aGlzLnRvdGFsQ291bnQgPSB0b3RhbENvdW50OwogICAgICBfdGhpcy5kYXRhQ291bnQgPSBkYXRhQ291bnQ7CiAgICAgIHJldHVybiBfdGhpczsKICAgIH07CgogICAgdmFyIF90aGlzID0ge307CgogICAgdmFyIGdldFJzQmxvY2tUYWJsZSA9IGZ1bmN0aW9uIGdldFJzQmxvY2tUYWJsZSh0eXBlTnVtYmVyLCBlcnJvckNvcnJlY3Rpb25MZXZlbCkgewogICAgICBzd2l0Y2ggKGVycm9yQ29ycmVjdGlvbkxldmVsKSB7CiAgICAgICAgY2FzZSBRUkVycm9yQ29ycmVjdGlvbkxldmVsLkw6CiAgICAgICAgICByZXR1cm4gUlNfQkxPQ0tfVEFCTEVbKHR5cGVOdW1iZXIgLSAxKSAqIDQgKyAwXTsKCiAgICAgICAgY2FzZSBRUkVycm9yQ29ycmVjdGlvbkxldmVsLk06CiAgICAgICAgICByZXR1cm4gUlNfQkxPQ0tfVEFCTEVbKHR5cGVOdW1iZXIgLSAxKSAqIDQgKyAxXTsKCiAgICAgICAgY2FzZSBRUkVycm9yQ29ycmVjdGlvbkxldmVsLlE6CiAgICAgICAgICByZXR1cm4gUlNfQkxPQ0tfVEFCTEVbKHR5cGVOdW1iZXIgLSAxKSAqIDQgKyAyXTsKCiAgICAgICAgY2FzZSBRUkVycm9yQ29ycmVjdGlvbkxldmVsLkg6CiAgICAgICAgICByZXR1cm4gUlNfQkxPQ0tfVEFCTEVbKHR5cGVOdW1iZXIgLSAxKSAqIDQgKyAzXTsKCiAgICAgICAgZGVmYXVsdDoKICAgICAgICAgIHJldHVybiB1bmRlZmluZWQ7CiAgICAgIH0KICAgIH07CgogICAgX3RoaXMuZ2V0UlNCbG9ja3MgPSBmdW5jdGlvbiAodHlwZU51bWJlciwgZXJyb3JDb3JyZWN0aW9uTGV2ZWwpIHsKICAgICAgdmFyIHJzQmxvY2sgPSBnZXRSc0Jsb2NrVGFibGUodHlwZU51bWJlciwgZXJyb3JDb3JyZWN0aW9uTGV2ZWwpOwoKICAgICAgaWYgKHR5cGVvZiByc0Jsb2NrID09ICd1bmRlZmluZWQnKSB7CiAgICAgICAgdGhyb3cgJ2JhZCBycyBibG9jayBAIHR5cGVOdW1iZXI6JyArIHR5cGVOdW1iZXIgKyAnL2Vycm9yQ29ycmVjdGlvbkxldmVsOicgKyBlcnJvckNvcnJlY3Rpb25MZXZlbDsKICAgICAgfQoKICAgICAgdmFyIGxlbmd0aCA9IHJzQmxvY2subGVuZ3RoIC8gMzsKICAgICAgdmFyIGxpc3QgPSBbXTsKCiAgICAgIGZvciAodmFyIGkgPSAwOyBpIDwgbGVuZ3RoOyBpICs9IDEpIHsKICAgICAgICB2YXIgY291bnQgPSByc0Jsb2NrW2kgKiAzICsgMF07CiAgICAgICAgdmFyIHRvdGFsQ291bnQgPSByc0Jsb2NrW2kgKiAzICsgMV07CiAgICAgICAgdmFyIGRhdGFDb3VudCA9IHJzQmxvY2tbaSAqIDMgKyAyXTsKCiAgICAgICAgZm9yICh2YXIgaiA9IDA7IGogPCBjb3VudDsgaiArPSAxKSB7CiAgICAgICAgICBsaXN0LnB1c2gocXJSU0Jsb2NrKHRvdGFsQ291bnQsIGRhdGFDb3VudCkpOwogICAgICAgIH0KICAgICAgfQoKICAgICAgcmV0dXJuIGxpc3Q7CiAgICB9OwoKICAgIHJldHVybiBfdGhpczsKICB9KCk7IC8vLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tCiAgLy8gcXJCaXRCdWZmZXIKICAvLy0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLQoKCiAgdmFyIHFyQml0QnVmZmVyID0gZnVuY3Rpb24gcXJCaXRCdWZmZXIoKSB7CiAgICB2YXIgX2J1ZmZlciA9IFtdOwogICAgdmFyIF9sZW5ndGggPSAwOwogICAgdmFyIF90aGlzID0ge307CgogICAgX3RoaXMuZ2V0QnVmZmVyID0gZnVuY3Rpb24gKCkgewogICAgICByZXR1cm4gX2J1ZmZlcjsKICAgIH07CgogICAgX3RoaXMuZ2V0QXQgPSBmdW5jdGlvbiAoaW5kZXgpIHsKICAgICAgdmFyIGJ1ZkluZGV4ID0gTWF0aC5mbG9vcihpbmRleCAvIDgpOwogICAgICByZXR1cm4gKF9idWZmZXJbYnVmSW5kZXhdID4+PiA3IC0gaW5kZXggJSA4ICYgMSkgPT0gMTsKICAgIH07CgogICAgX3RoaXMucHV0ID0gZnVuY3Rpb24gKG51bSwgbGVuZ3RoKSB7CiAgICAgIGZvciAodmFyIGkgPSAwOyBpIDwgbGVuZ3RoOyBpICs9IDEpIHsKICAgICAgICBfdGhpcy5wdXRCaXQoKG51bSA+Pj4gbGVuZ3RoIC0gaSAtIDEgJiAxKSA9PSAxKTsKICAgICAgfQogICAgfTsKCiAgICBfdGhpcy5nZXRMZW5ndGhJbkJpdHMgPSBmdW5jdGlvbiAoKSB7CiAgICAgIHJldHVybiBfbGVuZ3RoOwogICAgfTsKCiAgICBfdGhpcy5wdXRCaXQgPSBmdW5jdGlvbiAoYml0KSB7CiAgICAgIHZhciBidWZJbmRleCA9IE1hdGguZmxvb3IoX2xlbmd0aCAvIDgpOwoKICAgICAgaWYgKF9idWZmZXIubGVuZ3RoIDw9IGJ1ZkluZGV4KSB7CiAgICAgICAgX2J1ZmZlci5wdXNoKDApOwogICAgICB9CgogICAgICBpZiAoYml0KSB7CiAgICAgICAgX2J1ZmZlcltidWZJbmRleF0gfD0gMHg4MCA+Pj4gX2xlbmd0aCAlIDg7CiAgICAgIH0KCiAgICAgIF9sZW5ndGggKz0gMTsKICAgIH07CgogICAgcmV0dXJuIF90aGlzOwogIH07IC8vLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tCiAgLy8gcXJOdW1iZXIKICAvLy0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLQoKCiAgdmFyIHFyTnVtYmVyID0gZnVuY3Rpb24gcXJOdW1iZXIoZGF0YSkgewogICAgdmFyIF9tb2RlID0gUVJNb2RlLk1PREVfTlVNQkVSOwogICAgdmFyIF9kYXRhID0gZGF0YTsKICAgIHZhciBfdGhpcyA9IHt9OwoKICAgIF90aGlzLmdldE1vZGUgPSBmdW5jdGlvbiAoKSB7CiAgICAgIHJldHVybiBfbW9kZTsKICAgIH07CgogICAgX3RoaXMuZ2V0TGVuZ3RoID0gZnVuY3Rpb24gKGJ1ZmZlcikgewogICAgICByZXR1cm4gX2RhdGEubGVuZ3RoOwogICAgfTsKCiAgICBfdGhpcy53cml0ZSA9IGZ1bmN0aW9uIChidWZmZXIpIHsKICAgICAgdmFyIGRhdGEgPSBfZGF0YTsKICAgICAgdmFyIGkgPSAwOwoKICAgICAgd2hpbGUgKGkgKyAyIDwgZGF0YS5sZW5ndGgpIHsKICAgICAgICBidWZmZXIucHV0KHN0clRvTnVtKGRhdGEuc3Vic3RyaW5nKGksIGkgKyAzKSksIDEwKTsKICAgICAgICBpICs9IDM7CiAgICAgIH0KCiAgICAgIGlmIChpIDwgZGF0YS5sZW5ndGgpIHsKICAgICAgICBpZiAoZGF0YS5sZW5ndGggLSBpID09IDEpIHsKICAgICAgICAgIGJ1ZmZlci5wdXQoc3RyVG9OdW0oZGF0YS5zdWJzdHJpbmcoaSwgaSArIDEpKSwgNCk7CiAgICAgICAgfSBlbHNlIGlmIChkYXRhLmxlbmd0aCAtIGkgPT0gMikgewogICAgICAgICAgYnVmZmVyLnB1dChzdHJUb051bShkYXRhLnN1YnN0cmluZyhpLCBpICsgMikpLCA3KTsKICAgICAgICB9CiAgICAgIH0KICAgIH07CgogICAgdmFyIHN0clRvTnVtID0gZnVuY3Rpb24gc3RyVG9OdW0ocykgewogICAgICB2YXIgbnVtID0gMDsKCiAgICAgIGZvciAodmFyIGkgPSAwOyBpIDwgcy5sZW5ndGg7IGkgKz0gMSkgewogICAgICAgIG51bSA9IG51bSAqIDEwICsgY2hhdFRvTnVtKHMuY2hhckF0KGkpKTsKICAgICAgfQoKICAgICAgcmV0dXJuIG51bTsKICAgIH07CgogICAgdmFyIGNoYXRUb051bSA9IGZ1bmN0aW9uIGNoYXRUb051bShjKSB7CiAgICAgIGlmICgnMCcgPD0gYyAmJiBjIDw9ICc5JykgewogICAgICAgIHJldHVybiBjLmNoYXJDb2RlQXQoMCkgLSAnMCcuY2hhckNvZGVBdCgwKTsKICAgICAgfQoKICAgICAgdGhyb3cgJ2lsbGVnYWwgY2hhciA6JyArIGM7CiAgICB9OwoKICAgIHJldHVybiBfdGhpczsKICB9OyAvLy0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLQogIC8vIHFyQWxwaGFOdW0KICAvLy0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLQoKCiAgdmFyIHFyQWxwaGFOdW0gPSBmdW5jdGlvbiBxckFscGhhTnVtKGRhdGEpIHsKICAgIHZhciBfbW9kZSA9IFFSTW9kZS5NT0RFX0FMUEhBX05VTTsKICAgIHZhciBfZGF0YSA9IGRhdGE7CiAgICB2YXIgX3RoaXMgPSB7fTsKCiAgICBfdGhpcy5nZXRNb2RlID0gZnVuY3Rpb24gKCkgewogICAgICByZXR1cm4gX21vZGU7CiAgICB9OwoKICAgIF90aGlzLmdldExlbmd0aCA9IGZ1bmN0aW9uIChidWZmZXIpIHsKICAgICAgcmV0dXJuIF9kYXRhLmxlbmd0aDsKICAgIH07CgogICAgX3RoaXMud3JpdGUgPSBmdW5jdGlvbiAoYnVmZmVyKSB7CiAgICAgIHZhciBzID0gX2RhdGE7CiAgICAgIHZhciBpID0gMDsKCiAgICAgIHdoaWxlIChpICsgMSA8IHMubGVuZ3RoKSB7CiAgICAgICAgYnVmZmVyLnB1dChnZXRDb2RlKHMuY2hhckF0KGkpKSAqIDQ1ICsgZ2V0Q29kZShzLmNoYXJBdChpICsgMSkpLCAxMSk7CiAgICAgICAgaSArPSAyOwogICAgICB9CgogICAgICBpZiAoaSA8IHMubGVuZ3RoKSB7CiAgICAgICAgYnVmZmVyLnB1dChnZXRDb2RlKHMuY2hhckF0KGkpKSwgNik7CiAgICAgIH0KICAgIH07CgogICAgdmFyIGdldENvZGUgPSBmdW5jdGlvbiBnZXRDb2RlKGMpIHsKICAgICAgaWYgKCcwJyA8PSBjICYmIGMgPD0gJzknKSB7CiAgICAgICAgcmV0dXJuIGMuY2hhckNvZGVBdCgwKSAtICcwJy5jaGFyQ29kZUF0KDApOwogICAgICB9IGVsc2UgaWYgKCdBJyA8PSBjICYmIGMgPD0gJ1onKSB7CiAgICAgICAgcmV0dXJuIGMuY2hhckNvZGVBdCgwKSAtICdBJy5jaGFyQ29kZUF0KDApICsgMTA7CiAgICAgIH0gZWxzZSB7CiAgICAgICAgc3dpdGNoIChjKSB7CiAgICAgICAgICBjYXNlICcgJzoKICAgICAgICAgICAgcmV0dXJuIDM2OwoKICAgICAgICAgIGNhc2UgJyQnOgogICAgICAgICAgICByZXR1cm4gMzc7CgogICAgICAgICAgY2FzZSAnJSc6CiAgICAgICAgICAgIHJldHVybiAzODsKCiAgICAgICAgICBjYXNlICcqJzoKICAgICAgICAgICAgcmV0dXJuIDM5OwoKICAgICAgICAgIGNhc2UgJysnOgogICAgICAgICAgICByZXR1cm4gNDA7CgogICAgICAgICAgY2FzZSAnLSc6CiAgICAgICAgICAgIHJldHVybiA0MTsKCiAgICAgICAgICBjYXNlICcuJzoKICAgICAgICAgICAgcmV0dXJuIDQyOwoKICAgICAgICAgIGNhc2UgJy8nOgogICAgICAgICAgICByZXR1cm4gNDM7CgogICAgICAgICAgY2FzZSAnOic6CiAgICAgICAgICAgIHJldHVybiA0NDsKCiAgICAgICAgICBkZWZhdWx0OgogICAgICAgICAgICB0aHJvdyAnaWxsZWdhbCBjaGFyIDonICsgYzsKICAgICAgICB9CiAgICAgIH0KICAgIH07CgogICAgcmV0dXJuIF90aGlzOwogIH07IC8vLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tCiAgLy8gcXI4Qml0Qnl0ZQogIC8vLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tCgoKICB2YXIgcXI4Qml0Qnl0ZSA9IGZ1bmN0aW9uIHFyOEJpdEJ5dGUoZGF0YSkgewogICAgdmFyIF9tb2RlID0gUVJNb2RlLk1PREVfOEJJVF9CWVRFOwogICAgdmFyIF9kYXRhID0gZGF0YTsKCiAgICB2YXIgX2J5dGVzID0gcXJjb2RlLnN0cmluZ1RvQnl0ZXMoZGF0YSk7CgogICAgdmFyIF90aGlzID0ge307CgogICAgX3RoaXMuZ2V0TW9kZSA9IGZ1bmN0aW9uICgpIHsKICAgICAgcmV0dXJuIF9tb2RlOwogICAgfTsKCiAgICBfdGhpcy5nZXRMZW5ndGggPSBmdW5jdGlvbiAoYnVmZmVyKSB7CiAgICAgIHJldHVybiBfYnl0ZXMubGVuZ3RoOwogICAgfTsKCiAgICBfdGhpcy53cml0ZSA9IGZ1bmN0aW9uIChidWZmZXIpIHsKICAgICAgZm9yICh2YXIgaSA9IDA7IGkgPCBfYnl0ZXMubGVuZ3RoOyBpICs9IDEpIHsKICAgICAgICBidWZmZXIucHV0KF9ieXRlc1tpXSwgOCk7CiAgICAgIH0KICAgIH07CgogICAgcmV0dXJuIF90aGlzOwogIH07IC8vLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tCiAgLy8gcXJLYW5qaQogIC8vLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tCgoKICB2YXIgcXJLYW5qaSA9IGZ1bmN0aW9uIHFyS2FuamkoZGF0YSkgewogICAgdmFyIF9tb2RlID0gUVJNb2RlLk1PREVfS0FOSkk7CiAgICB2YXIgX2RhdGEgPSBkYXRhOwogICAgdmFyIHN0cmluZ1RvQnl0ZXMgPSBxcmNvZGUuc3RyaW5nVG9CeXRlc0Z1bmNzWydTSklTJ107CgogICAgaWYgKCFzdHJpbmdUb0J5dGVzKSB7CiAgICAgIHRocm93ICdzamlzIG5vdCBzdXBwb3J0ZWQuJzsKICAgIH0KCiAgICAhZnVuY3Rpb24gKGMsIGNvZGUpIHsKICAgICAgLy8gc2VsZiB0ZXN0IGZvciBzamlzIHN1cHBvcnQuCiAgICAgIHZhciB0ZXN0ID0gc3RyaW5nVG9CeXRlcyhjKTsKCiAgICAgIGlmICh0ZXN0Lmxlbmd0aCAhPSAyIHx8ICh0ZXN0WzBdIDw8IDggfCB0ZXN0WzFdKSAhPSBjb2RlKSB7CiAgICAgICAgdGhyb3cgJ3NqaXMgbm90IHN1cHBvcnRlZC4nOwogICAgICB9CiAgICB9KCJcdTUzQ0IiLCAweDk3NDYpOwoKICAgIHZhciBfYnl0ZXMgPSBzdHJpbmdUb0J5dGVzKGRhdGEpOwoKICAgIHZhciBfdGhpcyA9IHt9OwoKICAgIF90aGlzLmdldE1vZGUgPSBmdW5jdGlvbiAoKSB7CiAgICAgIHJldHVybiBfbW9kZTsKICAgIH07CgogICAgX3RoaXMuZ2V0TGVuZ3RoID0gZnVuY3Rpb24gKGJ1ZmZlcikgewogICAgICByZXR1cm4gfn4oX2J5dGVzLmxlbmd0aCAvIDIpOwogICAgfTsKCiAgICBfdGhpcy53cml0ZSA9IGZ1bmN0aW9uIChidWZmZXIpIHsKICAgICAgdmFyIGRhdGEgPSBfYnl0ZXM7CiAgICAgIHZhciBpID0gMDsKCiAgICAgIHdoaWxlIChpICsgMSA8IGRhdGEubGVuZ3RoKSB7CiAgICAgICAgdmFyIGMgPSAoMHhmZiAmIGRhdGFbaV0pIDw8IDggfCAweGZmICYgZGF0YVtpICsgMV07CgogICAgICAgIGlmICgweDgxNDAgPD0gYyAmJiBjIDw9IDB4OUZGQykgewogICAgICAgICAgYyAtPSAweDgxNDA7CiAgICAgICAgfSBlbHNlIGlmICgweEUwNDAgPD0gYyAmJiBjIDw9IDB4RUJCRikgewogICAgICAgICAgYyAtPSAweEMxNDA7CiAgICAgICAgfSBlbHNlIHsKICAgICAgICAgIHRocm93ICdpbGxlZ2FsIGNoYXIgYXQgJyArIChpICsgMSkgKyAnLycgKyBjOwogICAgICAgIH0KCiAgICAgICAgYyA9IChjID4+PiA4ICYgMHhmZikgKiAweEMwICsgKGMgJiAweGZmKTsKICAgICAgICBidWZmZXIucHV0KGMsIDEzKTsKICAgICAgICBpICs9IDI7CiAgICAgIH0KCiAgICAgIGlmIChpIDwgZGF0YS5sZW5ndGgpIHsKICAgICAgICB0aHJvdyAnaWxsZWdhbCBjaGFyIGF0ICcgKyAoaSArIDEpOwogICAgICB9CiAgICB9OwoKICAgIHJldHVybiBfdGhpczsKICB9OyAvLz09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PQogIC8vIEdJRiBTdXBwb3J0IGV0Yy4KICAvLwogIC8vLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tCiAgLy8gYnl0ZUFycmF5T3V0cHV0U3RyZWFtCiAgLy8tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0KCgogIHZhciBieXRlQXJyYXlPdXRwdXRTdHJlYW0gPSBmdW5jdGlvbiBieXRlQXJyYXlPdXRwdXRTdHJlYW0oKSB7CiAgICB2YXIgX2J5dGVzID0gW107CiAgICB2YXIgX3RoaXMgPSB7fTsKCiAgICBfdGhpcy53cml0ZUJ5dGUgPSBmdW5jdGlvbiAoYikgewogICAgICBfYnl0ZXMucHVzaChiICYgMHhmZik7CiAgICB9OwoKICAgIF90aGlzLndyaXRlU2hvcnQgPSBmdW5jdGlvbiAoaSkgewogICAgICBfdGhpcy53cml0ZUJ5dGUoaSk7CgogICAgICBfdGhpcy53cml0ZUJ5dGUoaSA+Pj4gOCk7CiAgICB9OwoKICAgIF90aGlzLndyaXRlQnl0ZXMgPSBmdW5jdGlvbiAoYiwgb2ZmLCBsZW4pIHsKICAgICAgb2ZmID0gb2ZmIHx8IDA7CiAgICAgIGxlbiA9IGxlbiB8fCBiLmxlbmd0aDsKCiAgICAgIGZvciAodmFyIGkgPSAwOyBpIDwgbGVuOyBpICs9IDEpIHsKICAgICAgICBfdGhpcy53cml0ZUJ5dGUoYltpICsgb2ZmXSk7CiAgICAgIH0KICAgIH07CgogICAgX3RoaXMud3JpdGVTdHJpbmcgPSBmdW5jdGlvbiAocykgewogICAgICBmb3IgKHZhciBpID0gMDsgaSA8IHMubGVuZ3RoOyBpICs9IDEpIHsKICAgICAgICBfdGhpcy53cml0ZUJ5dGUocy5jaGFyQ29kZUF0KGkpKTsKICAgICAgfQogICAgfTsKCiAgICBfdGhpcy50b0J5dGVBcnJheSA9IGZ1bmN0aW9uICgpIHsKICAgICAgcmV0dXJuIF9ieXRlczsKICAgIH07CgogICAgX3RoaXMudG9TdHJpbmcgPSBmdW5jdGlvbiAoKSB7CiAgICAgIHZhciBzID0gJyc7CiAgICAgIHMgKz0gJ1snOwoKICAgICAgZm9yICh2YXIgaSA9IDA7IGkgPCBfYnl0ZXMubGVuZ3RoOyBpICs9IDEpIHsKICAgICAgICBpZiAoaSA+IDApIHsKICAgICAgICAgIHMgKz0gJywnOwogICAgICAgIH0KCiAgICAgICAgcyArPSBfYnl0ZXNbaV07CiAgICAgIH0KCiAgICAgIHMgKz0gJ10nOwogICAgICByZXR1cm4gczsKICAgIH07CgogICAgcmV0dXJuIF90aGlzOwogIH07IC8vLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tCiAgLy8gYmFzZTY0RW5jb2RlT3V0cHV0U3RyZWFtCiAgLy8tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0KCgogIHZhciBiYXNlNjRFbmNvZGVPdXRwdXRTdHJlYW0gPSBmdW5jdGlvbiBiYXNlNjRFbmNvZGVPdXRwdXRTdHJlYW0oKSB7CiAgICB2YXIgX2J1ZmZlciA9IDA7CiAgICB2YXIgX2J1ZmxlbiA9IDA7CiAgICB2YXIgX2xlbmd0aCA9IDA7CiAgICB2YXIgX2Jhc2U2NCA9ICcnOwogICAgdmFyIF90aGlzID0ge307CgogICAgdmFyIHdyaXRlRW5jb2RlZCA9IGZ1bmN0aW9uIHdyaXRlRW5jb2RlZChiKSB7CiAgICAgIF9iYXNlNjQgKz0gU3RyaW5nLmZyb21DaGFyQ29kZShlbmNvZGUoYiAmIDB4M2YpKTsKICAgIH07CgogICAgdmFyIGVuY29kZSA9IGZ1bmN0aW9uIGVuY29kZShuKSB7CiAgICAgIGlmIChuIDwgMCkgey8vIGVycm9yLgogICAgICB9IGVsc2UgaWYgKG4gPCAyNikgewogICAgICAgIHJldHVybiAweDQxICsgbjsKICAgICAgfSBlbHNlIGlmIChuIDwgNTIpIHsKICAgICAgICByZXR1cm4gMHg2MSArIChuIC0gMjYpOwogICAgICB9IGVsc2UgaWYgKG4gPCA2MikgewogICAgICAgIHJldHVybiAweDMwICsgKG4gLSA1Mik7CiAgICAgIH0gZWxzZSBpZiAobiA9PSA2MikgewogICAgICAgIHJldHVybiAweDJiOwogICAgICB9IGVsc2UgaWYgKG4gPT0gNjMpIHsKICAgICAgICByZXR1cm4gMHgyZjsKICAgICAgfQoKICAgICAgdGhyb3cgJ246JyArIG47CiAgICB9OwoKICAgIF90aGlzLndyaXRlQnl0ZSA9IGZ1bmN0aW9uIChuKSB7CiAgICAgIF9idWZmZXIgPSBfYnVmZmVyIDw8IDggfCBuICYgMHhmZjsKICAgICAgX2J1ZmxlbiArPSA4OwogICAgICBfbGVuZ3RoICs9IDE7CgogICAgICB3aGlsZSAoX2J1ZmxlbiA+PSA2KSB7CiAgICAgICAgd3JpdGVFbmNvZGVkKF9idWZmZXIgPj4+IF9idWZsZW4gLSA2KTsKICAgICAgICBfYnVmbGVuIC09IDY7CiAgICAgIH0KICAgIH07CgogICAgX3RoaXMuZmx1c2ggPSBmdW5jdGlvbiAoKSB7CiAgICAgIGlmIChfYnVmbGVuID4gMCkgewogICAgICAgIHdyaXRlRW5jb2RlZChfYnVmZmVyIDw8IDYgLSBfYnVmbGVuKTsKICAgICAgICBfYnVmZmVyID0gMDsKICAgICAgICBfYnVmbGVuID0gMDsKICAgICAgfQoKICAgICAgaWYgKF9sZW5ndGggJSAzICE9IDApIHsKICAgICAgICAvLyBwYWRkaW5nCiAgICAgICAgdmFyIHBhZGxlbiA9IDMgLSBfbGVuZ3RoICUgMzsKCiAgICAgICAgZm9yICh2YXIgaSA9IDA7IGkgPCBwYWRsZW47IGkgKz0gMSkgewogICAgICAgICAgX2Jhc2U2NCArPSAnPSc7CiAgICAgICAgfQogICAgICB9CiAgICB9OwoKICAgIF90aGlzLnRvU3RyaW5nID0gZnVuY3Rpb24gKCkgewogICAgICByZXR1cm4gX2Jhc2U2NDsKICAgIH07CgogICAgcmV0dXJuIF90aGlzOwogIH07IC8vLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tCiAgLy8gYmFzZTY0RGVjb2RlSW5wdXRTdHJlYW0KICAvLy0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLQoKCiAgdmFyIGJhc2U2NERlY29kZUlucHV0U3RyZWFtID0gZnVuY3Rpb24gYmFzZTY0RGVjb2RlSW5wdXRTdHJlYW0oc3RyKSB7CiAgICB2YXIgX3N0ciA9IHN0cjsKICAgIHZhciBfcG9zID0gMDsKICAgIHZhciBfYnVmZmVyID0gMDsKICAgIHZhciBfYnVmbGVuID0gMDsKICAgIHZhciBfdGhpcyA9IHt9OwoKICAgIF90aGlzLnJlYWQgPSBmdW5jdGlvbiAoKSB7CiAgICAgIHdoaWxlIChfYnVmbGVuIDwgOCkgewogICAgICAgIGlmIChfcG9zID49IF9zdHIubGVuZ3RoKSB7CiAgICAgICAgICBpZiAoX2J1ZmxlbiA9PSAwKSB7CiAgICAgICAgICAgIHJldHVybiAtMTsKICAgICAgICAgIH0KCiAgICAgICAgICB0aHJvdyAndW5leHBlY3RlZCBlbmQgb2YgZmlsZS4vJyArIF9idWZsZW47CiAgICAgICAgfQoKICAgICAgICB2YXIgYyA9IF9zdHIuY2hhckF0KF9wb3MpOwoKICAgICAgICBfcG9zICs9IDE7CgogICAgICAgIGlmIChjID09ICc9JykgewogICAgICAgICAgX2J1ZmxlbiA9IDA7CiAgICAgICAgICByZXR1cm4gLTE7CiAgICAgICAgfSBlbHNlIGlmIChjLm1hdGNoKC9eXHMkLykpIHsKICAgICAgICAgIC8vIGlnbm9yZSBpZiB3aGl0ZXNwYWNlLgogICAgICAgICAgY29udGludWU7CiAgICAgICAgfQoKICAgICAgICBfYnVmZmVyID0gX2J1ZmZlciA8PCA2IHwgZGVjb2RlKGMuY2hhckNvZGVBdCgwKSk7CiAgICAgICAgX2J1ZmxlbiArPSA2OwogICAgICB9CgogICAgICB2YXIgbiA9IF9idWZmZXIgPj4+IF9idWZsZW4gLSA4ICYgMHhmZjsKICAgICAgX2J1ZmxlbiAtPSA4OwogICAgICByZXR1cm4gbjsKICAgIH07CgogICAgdmFyIGRlY29kZSA9IGZ1bmN0aW9uIGRlY29kZShjKSB7CiAgICAgIGlmICgweDQxIDw9IGMgJiYgYyA8PSAweDVhKSB7CiAgICAgICAgcmV0dXJuIGMgLSAweDQxOwogICAgICB9IGVsc2UgaWYgKDB4NjEgPD0gYyAmJiBjIDw9IDB4N2EpIHsKICAgICAgICByZXR1cm4gYyAtIDB4NjEgKyAyNjsKICAgICAgfSBlbHNlIGlmICgweDMwIDw9IGMgJiYgYyA8PSAweDM5KSB7CiAgICAgICAgcmV0dXJuIGMgLSAweDMwICsgNTI7CiAgICAgIH0gZWxzZSBpZiAoYyA9PSAweDJiKSB7CiAgICAgICAgcmV0dXJuIDYyOwogICAgICB9IGVsc2UgaWYgKGMgPT0gMHgyZikgewogICAgICAgIHJldHVybiA2MzsKICAgICAgfSBlbHNlIHsKICAgICAgICB0aHJvdyAnYzonICsgYzsKICAgICAgfQogICAgfTsKCiAgICByZXR1cm4gX3RoaXM7CiAgfTsgLy8tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0KICAvLyBnaWZJbWFnZSAoQi9XKQogIC8vLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tCgoKICB2YXIgZ2lmSW1hZ2UgPSBmdW5jdGlvbiBnaWZJbWFnZSh3aWR0aCwgaGVpZ2h0KSB7CiAgICB2YXIgX3dpZHRoID0gd2lkdGg7CiAgICB2YXIgX2hlaWdodCA9IGhlaWdodDsKCiAgICB2YXIgX2RhdGEgPSBuZXcgQXJyYXkod2lkdGggKiBoZWlnaHQpOwoKICAgIHZhciBfdGhpcyA9IHt9OwoKICAgIF90aGlzLnNldFBpeGVsID0gZnVuY3Rpb24gKHgsIHksIHBpeGVsKSB7CiAgICAgIF9kYXRhW3kgKiBfd2lkdGggKyB4XSA9IHBpeGVsOwogICAgfTsKCiAgICBfdGhpcy53cml0ZSA9IGZ1bmN0aW9uIChvdXQpIHsKICAgICAgLy8tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0KICAgICAgLy8gR0lGIFNpZ25hdHVyZQogICAgICBvdXQud3JpdGVTdHJpbmcoJ0dJRjg3YScpOyAvLy0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLQogICAgICAvLyBTY3JlZW4gRGVzY3JpcHRvcgoKICAgICAgb3V0LndyaXRlU2hvcnQoX3dpZHRoKTsKICAgICAgb3V0LndyaXRlU2hvcnQoX2hlaWdodCk7CiAgICAgIG91dC53cml0ZUJ5dGUoMHg4MCk7IC8vIDJiaXQKCiAgICAgIG91dC53cml0ZUJ5dGUoMCk7CiAgICAgIG91dC53cml0ZUJ5dGUoMCk7IC8vLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tCiAgICAgIC8vIEdsb2JhbCBDb2xvciBNYXAKICAgICAgLy8gYmxhY2sKCiAgICAgIG91dC53cml0ZUJ5dGUoMHgwMCk7CiAgICAgIG91dC53cml0ZUJ5dGUoMHgwMCk7CiAgICAgIG91dC53cml0ZUJ5dGUoMHgwMCk7IC8vIHdoaXRlCgogICAgICBvdXQud3JpdGVCeXRlKDB4ZmYpOwogICAgICBvdXQud3JpdGVCeXRlKDB4ZmYpOwogICAgICBvdXQud3JpdGVCeXRlKDB4ZmYpOyAvLy0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLQogICAgICAvLyBJbWFnZSBEZXNjcmlwdG9yCgogICAgICBvdXQud3JpdGVTdHJpbmcoJywnKTsKICAgICAgb3V0LndyaXRlU2hvcnQoMCk7CiAgICAgIG91dC53cml0ZVNob3J0KDApOwogICAgICBvdXQud3JpdGVTaG9ydChfd2lkdGgpOwogICAgICBvdXQud3JpdGVTaG9ydChfaGVpZ2h0KTsKICAgICAgb3V0LndyaXRlQnl0ZSgwKTsgLy8tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0KICAgICAgLy8gTG9jYWwgQ29sb3IgTWFwCiAgICAgIC8vLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tCiAgICAgIC8vIFJhc3RlciBEYXRhCgogICAgICB2YXIgbHp3TWluQ29kZVNpemUgPSAyOwogICAgICB2YXIgcmFzdGVyID0gZ2V0TFpXUmFzdGVyKGx6d01pbkNvZGVTaXplKTsKICAgICAgb3V0LndyaXRlQnl0ZShsendNaW5Db2RlU2l6ZSk7CiAgICAgIHZhciBvZmZzZXQgPSAwOwoKICAgICAgd2hpbGUgKHJhc3Rlci5sZW5ndGggLSBvZmZzZXQgPiAyNTUpIHsKICAgICAgICBvdXQud3JpdGVCeXRlKDI1NSk7CiAgICAgICAgb3V0LndyaXRlQnl0ZXMocmFzdGVyLCBvZmZzZXQsIDI1NSk7CiAgICAgICAgb2Zmc2V0ICs9IDI1NTsKICAgICAgfQoKICAgICAgb3V0LndyaXRlQnl0ZShyYXN0ZXIubGVuZ3RoIC0gb2Zmc2V0KTsKICAgICAgb3V0LndyaXRlQnl0ZXMocmFzdGVyLCBvZmZzZXQsIHJhc3Rlci5sZW5ndGggLSBvZmZzZXQpOwogICAgICBvdXQud3JpdGVCeXRlKDB4MDApOyAvLy0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLQogICAgICAvLyBHSUYgVGVybWluYXRvcgoKICAgICAgb3V0LndyaXRlU3RyaW5nKCc7Jyk7CiAgICB9OwoKICAgIHZhciBiaXRPdXRwdXRTdHJlYW0gPSBmdW5jdGlvbiBiaXRPdXRwdXRTdHJlYW0ob3V0KSB7CiAgICAgIHZhciBfb3V0ID0gb3V0OwogICAgICB2YXIgX2JpdExlbmd0aCA9IDA7CiAgICAgIHZhciBfYml0QnVmZmVyID0gMDsKICAgICAgdmFyIF90aGlzID0ge307CgogICAgICBfdGhpcy53cml0ZSA9IGZ1bmN0aW9uIChkYXRhLCBsZW5ndGgpIHsKICAgICAgICBpZiAoZGF0YSA+Pj4gbGVuZ3RoICE9IDApIHsKICAgICAgICAgIHRocm93ICdsZW5ndGggb3Zlcic7CiAgICAgICAgfQoKICAgICAgICB3aGlsZSAoX2JpdExlbmd0aCArIGxlbmd0aCA+PSA4KSB7CiAgICAgICAgICBfb3V0LndyaXRlQnl0ZSgweGZmICYgKGRhdGEgPDwgX2JpdExlbmd0aCB8IF9iaXRCdWZmZXIpKTsKCiAgICAgICAgICBsZW5ndGggLT0gOCAtIF9iaXRMZW5ndGg7CiAgICAgICAgICBkYXRhID4+Pj0gOCAtIF9iaXRMZW5ndGg7CiAgICAgICAgICBfYml0QnVmZmVyID0gMDsKICAgICAgICAgIF9iaXRMZW5ndGggPSAwOwogICAgICAgIH0KCiAgICAgICAgX2JpdEJ1ZmZlciA9IGRhdGEgPDwgX2JpdExlbmd0aCB8IF9iaXRCdWZmZXI7CiAgICAgICAgX2JpdExlbmd0aCA9IF9iaXRMZW5ndGggKyBsZW5ndGg7CiAgICAgIH07CgogICAgICBfdGhpcy5mbHVzaCA9IGZ1bmN0aW9uICgpIHsKICAgICAgICBpZiAoX2JpdExlbmd0aCA+IDApIHsKICAgICAgICAgIF9vdXQud3JpdGVCeXRlKF9iaXRCdWZmZXIpOwogICAgICAgIH0KICAgICAgfTsKCiAgICAgIHJldHVybiBfdGhpczsKICAgIH07CgogICAgdmFyIGdldExaV1Jhc3RlciA9IGZ1bmN0aW9uIGdldExaV1Jhc3RlcihsendNaW5Db2RlU2l6ZSkgewogICAgICB2YXIgY2xlYXJDb2RlID0gMSA8PCBsendNaW5Db2RlU2l6ZTsKICAgICAgdmFyIGVuZENvZGUgPSAoMSA8PCBsendNaW5Db2RlU2l6ZSkgKyAxOwogICAgICB2YXIgYml0TGVuZ3RoID0gbHp3TWluQ29kZVNpemUgKyAxOyAvLyBTZXR1cCBMWldUYWJsZQoKICAgICAgdmFyIHRhYmxlID0gbHp3VGFibGUoKTsKCiAgICAgIGZvciAodmFyIGkgPSAwOyBpIDwgY2xlYXJDb2RlOyBpICs9IDEpIHsKICAgICAgICB0YWJsZS5hZGQoU3RyaW5nLmZyb21DaGFyQ29kZShpKSk7CiAgICAgIH0KCiAgICAgIHRhYmxlLmFkZChTdHJpbmcuZnJvbUNoYXJDb2RlKGNsZWFyQ29kZSkpOwogICAgICB0YWJsZS5hZGQoU3RyaW5nLmZyb21DaGFyQ29kZShlbmRDb2RlKSk7CiAgICAgIHZhciBieXRlT3V0ID0gYnl0ZUFycmF5T3V0cHV0U3RyZWFtKCk7CiAgICAgIHZhciBiaXRPdXQgPSBiaXRPdXRwdXRTdHJlYW0oYnl0ZU91dCk7IC8vIGNsZWFyIGNvZGUKCiAgICAgIGJpdE91dC53cml0ZShjbGVhckNvZGUsIGJpdExlbmd0aCk7CiAgICAgIHZhciBkYXRhSW5kZXggPSAwOwogICAgICB2YXIgcyA9IFN0cmluZy5mcm9tQ2hhckNvZGUoX2RhdGFbZGF0YUluZGV4XSk7CiAgICAgIGRhdGFJbmRleCArPSAxOwoKICAgICAgd2hpbGUgKGRhdGFJbmRleCA8IF9kYXRhLmxlbmd0aCkgewogICAgICAgIHZhciBjID0gU3RyaW5nLmZyb21DaGFyQ29kZShfZGF0YVtkYXRhSW5kZXhdKTsKICAgICAgICBkYXRhSW5kZXggKz0gMTsKCiAgICAgICAgaWYgKHRhYmxlLmNvbnRhaW5zKHMgKyBjKSkgewogICAgICAgICAgcyA9IHMgKyBjOwogICAgICAgIH0gZWxzZSB7CiAgICAgICAgICBiaXRPdXQud3JpdGUodGFibGUuaW5kZXhPZihzKSwgYml0TGVuZ3RoKTsKCiAgICAgICAgICBpZiAodGFibGUuc2l6ZSgpIDwgMHhmZmYpIHsKICAgICAgICAgICAgaWYgKHRhYmxlLnNpemUoKSA9PSAxIDw8IGJpdExlbmd0aCkgewogICAgICAgICAgICAgIGJpdExlbmd0aCArPSAxOwogICAgICAgICAgICB9CgogICAgICAgICAgICB0YWJsZS5hZGQocyArIGMpOwogICAgICAgICAgfQoKICAgICAgICAgIHMgPSBjOwogICAgICAgIH0KICAgICAgfQoKICAgICAgYml0T3V0LndyaXRlKHRhYmxlLmluZGV4T2YocyksIGJpdExlbmd0aCk7IC8vIGVuZCBjb2RlCgogICAgICBiaXRPdXQud3JpdGUoZW5kQ29kZSwgYml0TGVuZ3RoKTsKICAgICAgYml0T3V0LmZsdXNoKCk7CiAgICAgIHJldHVybiBieXRlT3V0LnRvQnl0ZUFycmF5KCk7CiAgICB9OwoKICAgIHZhciBsendUYWJsZSA9IGZ1bmN0aW9uIGx6d1RhYmxlKCkgewogICAgICB2YXIgX21hcCA9IHt9OwogICAgICB2YXIgX3NpemUgPSAwOwogICAgICB2YXIgX3RoaXMgPSB7fTsKCiAgICAgIF90aGlzLmFkZCA9IGZ1bmN0aW9uIChrZXkpIHsKICAgICAgICBpZiAoX3RoaXMuY29udGFpbnMoa2V5KSkgewogICAgICAgICAgdGhyb3cgJ2R1cCBrZXk6JyArIGtleTsKICAgICAgICB9CgogICAgICAgIF9tYXBba2V5XSA9IF9zaXplOwogICAgICAgIF9zaXplICs9IDE7CiAgICAgIH07CgogICAgICBfdGhpcy5zaXplID0gZnVuY3Rpb24gKCkgewogICAgICAgIHJldHVybiBfc2l6ZTsKICAgICAgfTsKCiAgICAgIF90aGlzLmluZGV4T2YgPSBmdW5jdGlvbiAoa2V5KSB7CiAgICAgICAgcmV0dXJuIF9tYXBba2V5XTsKICAgICAgfTsKCiAgICAgIF90aGlzLmNvbnRhaW5zID0gZnVuY3Rpb24gKGtleSkgewogICAgICAgIHJldHVybiB0eXBlb2YgX21hcFtrZXldICE9ICd1bmRlZmluZWQnOwogICAgICB9OwoKICAgICAgcmV0dXJuIF90aGlzOwogICAgfTsKCiAgICByZXR1cm4gX3RoaXM7CiAgfTsKCiAgdmFyIGNyZWF0ZURhdGFVUkwgPSBmdW5jdGlvbiBjcmVhdGVEYXRhVVJMKHdpZHRoLCBoZWlnaHQsIGdldFBpeGVsKSB7CiAgICB2YXIgZ2lmID0gZ2lmSW1hZ2Uod2lkdGgsIGhlaWdodCk7CgogICAgZm9yICh2YXIgeSA9IDA7IHkgPCBoZWlnaHQ7IHkgKz0gMSkgewogICAgICBmb3IgKHZhciB4ID0gMDsgeCA8IHdpZHRoOyB4ICs9IDEpIHsKICAgICAgICBnaWYuc2V0UGl4ZWwoeCwgeSwgZ2V0UGl4ZWwoeCwgeSkpOwogICAgICB9CiAgICB9CgogICAgdmFyIGIgPSBieXRlQXJyYXlPdXRwdXRTdHJlYW0oKTsKICAgIGdpZi53cml0ZShiKTsKICAgIHZhciBiYXNlNjQgPSBiYXNlNjRFbmNvZGVPdXRwdXRTdHJlYW0oKTsKICAgIHZhciBieXRlcyA9IGIudG9CeXRlQXJyYXkoKTsKCiAgICBmb3IgKHZhciBpID0gMDsgaSA8IGJ5dGVzLmxlbmd0aDsgaSArPSAxKSB7CiAgICAgIGJhc2U2NC53cml0ZUJ5dGUoYnl0ZXNbaV0pOwogICAgfQoKICAgIGJhc2U2NC5mbHVzaCgpOwogICAgcmV0dXJuICdkYXRhOmltYWdlL2dpZjtiYXNlNjQsJyArIGJhc2U2NDsKICB9OyAvLy0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLQogIC8vIHJldHVybnMgcXJjb2RlIGZ1bmN0aW9uLgoKCiAgcmV0dXJuIHFyY29kZTsKfSgpOwoKZXhwb3J0IHsgcXJjb2RlIH07IC8vIC8vIG11bHRpYnl0ZSBzdXBwb3J0Ci8vICFmdW5jdGlvbigpIHsKLy8KLy8gICBxcmNvZGUuc3RyaW5nVG9CeXRlc0Z1bmNzWydVVEYtOCddID0gZnVuY3Rpb24ocykgewovLyAgICAgLy8gaHR0cDovL3N0YWNrb3ZlcmZsb3cuY29tL3F1ZXN0aW9ucy8xODcyOTQwNS9ob3ctdG8tY29udmVydC11dGY4LXN0cmluZy10by1ieXRlLWFycmF5Ci8vICAgICBmdW5jdGlvbiB0b1VURjhBcnJheShzdHIpIHsKLy8gICAgICAgdmFyIHV0ZjggPSBbXQovLyAgICAgICBmb3IgKHZhciBpID0gMDsgaSA8IHN0ci5sZW5ndGg7IGkrKykgewovLyAgICAgICAgIHZhciBjaGFyY29kZSA9IHN0ci5jaGFyQ29kZUF0KGkpCi8vICAgICAgICAgaWYgKGNoYXJjb2RlIDwgMHg4MCkgdXRmOC5wdXNoKGNoYXJjb2RlKQovLyAgICAgICAgIGVsc2UgaWYgKGNoYXJjb2RlIDwgMHg4MDApIHsKLy8gICAgICAgICAgIHV0ZjgucHVzaCgweGMwIHwgKGNoYXJjb2RlID4+IDYpLAovLyAgICAgICAgICAgICAweDgwIHwgKGNoYXJjb2RlICYgMHgzZikpCi8vICAgICAgICAgfSBlbHNlIGlmIChjaGFyY29kZSA8IDB4ZDgwMCB8fCBjaGFyY29kZSA+PSAweGUwMDApIHsKLy8gICAgICAgICAgIHV0ZjgucHVzaCgweGUwIHwgKGNoYXJjb2RlID4+IDEyKSwKLy8gICAgICAgICAgICAgMHg4MCB8ICgoY2hhcmNvZGUgPj4gNikgJiAweDNmKSwKLy8gICAgICAgICAgICAgMHg4MCB8IChjaGFyY29kZSAmIDB4M2YpKQovLyAgICAgICAgIH0KLy8gICAgICAgICAvLyBzdXJyb2dhdGUgcGFpcgovLyAgICAgICAgIGVsc2UgewovLyAgICAgICAgICAgaSsrCi8vICAgICAgICAgICAvLyBVVEYtMTYgZW5jb2RlcyAweDEwMDAwLTB4MTBGRkZGIGJ5Ci8vICAgICAgICAgICAvLyBzdWJ0cmFjdGluZyAweDEwMDAwIGFuZCBzcGxpdHRpbmcgdGhlCi8vICAgICAgICAgICAvLyAyMCBiaXRzIG9mIDB4MC0weEZGRkZGIGludG8gdHdvIGhhbHZlcwovLyAgICAgICAgICAgY2hhcmNvZGUgPSAweDEwMDAwICsgKCgoY2hhcmNvZGUgJiAweDNmZikgPDwgMTApCi8vICAgICAgICAgICAgIHwgKHN0ci5jaGFyQ29kZUF0KGkpICYgMHgzZmYpKQovLyAgICAgICAgICAgdXRmOC5wdXNoKDB4ZjAgfCAoY2hhcmNvZGUgPj4gMTgpLAovLyAgICAgICAgICAgICAweDgwIHwgKChjaGFyY29kZSA+PiAxMikgJiAweDNmKSwKLy8gICAgICAgICAgICAgMHg4MCB8ICgoY2hhcmNvZGUgPj4gNikgJiAweDNmKSwKLy8gICAgICAgICAgICAgMHg4MCB8IChjaGFyY29kZSAmIDB4M2YpKQovLyAgICAgICAgIH0KLy8gICAgICAgfQovLyAgICAgICByZXR1cm4gdXRmOAovLyAgICAgfQovLwovLyAgICAgcmV0dXJuIHRvVVRGOEFycmF5KHMpCi8vICAgfQovLwovLyB9KCk7Ci8vCi8vIChmdW5jdGlvbihmYWN0b3J5KSB7Ci8vICAgaWYgKHR5cGVvZiBkZWZpbmUgPT09ICdmdW5jdGlvbicgJiYgZGVmaW5lLmFtZCkgewovLyAgICAgZGVmaW5lKFtdLCBmYWN0b3J5KQovLyAgIH0gZWxzZSBpZiAodHlwZW9mIGV4cG9ydHMgPT09ICdvYmplY3QnKSB7Ci8vICAgICBtb2R1bGUuZXhwb3J0cyA9IGZhY3RvcnkoKQovLyAgIH0KLy8gfShmdW5jdGlvbigpIHsKLy8gICByZXR1cm4gcXJjb2RlCi8vIH0pKQ=="},{"version":3,"sources":["C:/Users/Brezgo-1098/Desktop/brezz/src/lib/qrcode.js"],"names":["qrcode","typeNumber","errorCorrectionLevel","PAD0","PAD1","_typeNumber","_errorCorrectionLevel","QRErrorCorrectionLevel","_modules","_moduleCount","_dataCache","_dataList","_this","makeImpl","test","maskPattern","moduleCount","modules","Array","row","col","setupPositionProbePattern","setupPositionAdjustPattern","setupTimingPattern","setupTypeInfo","setupTypeNumber","createData","mapData","r","c","getBestMaskPattern","minLostPoint","pattern","i","lostPoint","QRUtil","getLostPoint","pos","getPatternPosition","length","j","bits","getBCHTypeNumber","mod","Math","floor","data","getBCHTypeInfo","inc","bitIndex","byteIndex","maskFunc","getMaskFunction","dark","mask","createBytes","buffer","rsBlocks","offset","maxDcCount","maxEcCount","dcdata","ecdata","dcCount","dataCount","ecCount","totalCount","max","getBuffer","rsPoly","getErrorCorrectPolynomial","rawPoly","qrPolynomial","getLength","modPoly","modIndex","getAt","totalCodeCount","index","dataList","QRRSBlock","getRSBlocks","qrBitBuffer","put","getMode","getLengthInBits","write","totalDataCount","putBit","addData","mode","newData","qrNumber","qrAlphaNum","qr8BitByte","qrKanji","push","isDark","getModuleCount","make","createTableTag","cellSize","margin","qrHtml","createSvgTag","alt","title","opts","arguments","text","id","size","mc","mr","qrSvg","rect","scalable","escapeXml","join","trim","createDataURL","min","x","y","createImgTag","img","s","escaped","charAt","_createHalfASCII","r1","r2","p","blocks","blocksLastLineNoMargin","ascii","substring","createASCII","white","black","line","renderTo2dContext","context","fillStyle","fillRect","stringToBytesFuncs","bytes","charCodeAt","stringToBytes","createStringToBytes","unicodeData","numChars","unicodeMap","bin","base64DecodeInputStream","read","b","count","b0","b1","b2","b3","k","String","fromCharCode","v","unknownChar","QRMode","MODE_NUMBER","MODE_ALPHA_NUM","MODE_8BIT_BYTE","MODE_KANJI","L","M","Q","H","QRMaskPattern","PATTERN000","PATTERN001","PATTERN010","PATTERN011","PATTERN100","PATTERN101","PATTERN110","PATTERN111","PATTERN_POSITION_TABLE","G15","G18","G15_MASK","getBCHDigit","digit","d","errorCorrectLength","a","multiply","QRMath","gexp","type","sameCount","darkCount","ratio","abs","EXP_TABLE","LOG_TABLE","glog","n","num","shift","_num","e","RS_BLOCK_TABLE","qrRSBlock","getRsBlockTable","undefined","rsBlock","list","_buffer","_length","bufIndex","bit","_mode","_data","strToNum","chatToNum","getCode","_bytes","code","byteArrayOutputStream","writeByte","writeShort","writeBytes","off","len","writeString","toByteArray","toString","base64EncodeOutputStream","_buflen","_base64","writeEncoded","encode","flush","padlen","str","_str","_pos","match","decode","gifImage","width","height","_width","_height","setPixel","pixel","out","lzwMinCodeSize","raster","getLZWRaster","bitOutputStream","_out","_bitLength","_bitBuffer","clearCode","endCode","bitLength","table","lzwTable","add","byteOut","bitOut","dataIndex","contains","indexOf","_map","_size","key","getPixel","gif","base64"],"mappings":"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D,IAAAA,GAAG,CAAChM,KAAJ,CAAUsE,CAAV;AAEA,QAAI2H,MAAM,GAAG3C,wBAAwB,EAArC;AACA,QAAI1F,KAAK,GAAGU,CAAC,CAAC8E,WAAF,EAAZ;;AACA,SAAK,IAAIzM,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGiH,KAAK,CAAC3G,MAA1B,EAAkCN,CAAC,IAAI,CAAvC,EAA0C;AACxCsP,MAAAA,MAAM,CAACnD,SAAP,CAAiBlF,KAAK,CAACjH,CAAD,CAAtB;AACD;;AACDsP,IAAAA,MAAM,CAACtC,KAAP;AAEA,WAAO,2BAA2BsC,MAAlC;AACD,GAnBD,CA3sEsB,CAguEtB;AACA;;;AAEA,SAAOvR,MAAP;AACD,CApuEY,EAAb;;AAsuEA,SAASA,MAAT,G,CAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","sourcesContent":["//---------------------------------------------------------------------\n//\n// QR Code Generator for JavaScript\n//\n// Copyright (c) 2009 Kazuhiko Arase\n//\n// URL: http://www.d-project.com/\n//\n// Licensed under the MIT license:\n//  http://www.opensource.org/licenses/mit-license.php\n//\n// The word 'QR Code' is registered trademark of\n// DENSO WAVE INCORPORATED\n//  http://www.denso-wave.com/qrcode/faqpatent-e.html\n//\n//---------------------------------------------------------------------\n\nvar qrcode = function() {\n\n  //---------------------------------------------------------------------\n  // qrcode\n  //---------------------------------------------------------------------\n\n  /**\n   * qrcode\n   * @param typeNumber 1 to 40\n   * @param errorCorrectionLevel 'L','M','Q','H'\n   */\n  var qrcode = function(typeNumber, errorCorrectionLevel) {\n\n    var PAD0 = 0xEC\n    var PAD1 = 0x11\n\n    var _typeNumber = typeNumber\n    var _errorCorrectionLevel = QRErrorCorrectionLevel[errorCorrectionLevel]\n    var _modules = null\n    var _moduleCount = 0\n    var _dataCache = null\n    var _dataList = []\n\n    var _this = {}\n\n    var makeImpl = function(test, maskPattern) {\n\n      _moduleCount = _typeNumber * 4 + 17\n      _modules = function(moduleCount) {\n        var modules = new Array(moduleCount)\n        for (var row = 0; row < moduleCount; row += 1) {\n          modules[row] = new Array(moduleCount)\n          for (var col = 0; col < moduleCount; col += 1) {\n            modules[row][col] = null\n          }\n        }\n        return modules\n      }(_moduleCount)\n\n      setupPositionProbePattern(0, 0)\n      setupPositionProbePattern(_moduleCount - 7, 0)\n      setupPositionProbePattern(0, _moduleCount - 7)\n      setupPositionAdjustPattern()\n      setupTimingPattern()\n      setupTypeInfo(test, maskPattern)\n\n      if (_typeNumber >= 7) {\n        setupTypeNumber(test)\n      }\n\n      if (_dataCache == null) {\n        _dataCache = createData(_typeNumber, _errorCorrectionLevel, _dataList)\n      }\n\n      mapData(_dataCache, maskPattern)\n    }\n\n    var setupPositionProbePattern = function(row, col) {\n\n      for (var r = -1; r <= 7; r += 1) {\n\n        if (row + r <= -1 || _moduleCount <= row + r) continue\n\n        for (var c = -1; c <= 7; c += 1) {\n\n          if (col + c <= -1 || _moduleCount <= col + c) continue\n\n          if ((0 <= r && r <= 6 && (c == 0 || c == 6))\n            || (0 <= c && c <= 6 && (r == 0 || r == 6))\n            || (2 <= r && r <= 4 && 2 <= c && c <= 4)) {\n            _modules[row + r][col + c] = true\n          } else {\n            _modules[row + r][col + c] = false\n          }\n        }\n      }\n    }\n\n    var getBestMaskPattern = function() {\n\n      var minLostPoint = 0\n      var pattern = 0\n\n      for (var i = 0; i < 8; i += 1) {\n\n        makeImpl(true, i)\n\n        var lostPoint = QRUtil.getLostPoint(_this)\n\n        if (i == 0 || minLostPoint > lostPoint) {\n          minLostPoint = lostPoint\n          pattern = i\n        }\n      }\n\n      return pattern\n    }\n\n    var setupTimingPattern = function() {\n\n      for (var r = 8; r < _moduleCount - 8; r += 1) {\n        if (_modules[r][6] != null) {\n          continue\n        }\n        _modules[r][6] = (r % 2 == 0)\n      }\n\n      for (var c = 8; c < _moduleCount - 8; c += 1) {\n        if (_modules[6][c] != null) {\n          continue\n        }\n        _modules[6][c] = (c % 2 == 0)\n      }\n    }\n\n    var setupPositionAdjustPattern = function() {\n\n      var pos = QRUtil.getPatternPosition(_typeNumber)\n\n      for (var i = 0; i < pos.length; i += 1) {\n\n        for (var j = 0; j < pos.length; j += 1) {\n\n          var row = pos[i]\n          var col = pos[j]\n\n          if (_modules[row][col] != null) {\n            continue\n          }\n\n          for (var r = -2; r <= 2; r += 1) {\n\n            for (var c = -2; c <= 2; c += 1) {\n\n              if (r == -2 || r == 2 || c == -2 || c == 2\n                || (r == 0 && c == 0)) {\n                _modules[row + r][col + c] = true\n              } else {\n                _modules[row + r][col + c] = false\n              }\n            }\n          }\n        }\n      }\n    }\n\n    var setupTypeNumber = function(test) {\n\n      var bits = QRUtil.getBCHTypeNumber(_typeNumber)\n\n      for (var i = 0; i < 18; i += 1) {\n        var mod = (!test && ((bits >> i) & 1) == 1)\n        _modules[Math.floor(i / 3)][i % 3 + _moduleCount - 8 - 3] = mod\n      }\n\n      for (var i = 0; i < 18; i += 1) {\n        var mod = (!test && ((bits >> i) & 1) == 1)\n        _modules[i % 3 + _moduleCount - 8 - 3][Math.floor(i / 3)] = mod\n      }\n    }\n\n    var setupTypeInfo = function(test, maskPattern) {\n\n      var data = (_errorCorrectionLevel << 3) | maskPattern\n      var bits = QRUtil.getBCHTypeInfo(data)\n\n      // vertical\n      for (var i = 0; i < 15; i += 1) {\n\n        var mod = (!test && ((bits >> i) & 1) == 1)\n\n        if (i < 6) {\n          _modules[i][8] = mod\n        } else if (i < 8) {\n          _modules[i + 1][8] = mod\n        } else {\n          _modules[_moduleCount - 15 + i][8] = mod\n        }\n      }\n\n      // horizontal\n      for (var i = 0; i < 15; i += 1) {\n\n        var mod = (!test && ((bits >> i) & 1) == 1)\n\n        if (i < 8) {\n          _modules[8][_moduleCount - i - 1] = mod\n        } else if (i < 9) {\n          _modules[8][15 - i - 1 + 1] = mod\n        } else {\n          _modules[8][15 - i - 1] = mod\n        }\n      }\n\n      // fixed module\n      _modules[_moduleCount - 8][8] = (!test)\n    }\n\n    var mapData = function(data, maskPattern) {\n\n      var inc = -1\n      var row = _moduleCount - 1\n      var bitIndex = 7\n      var byteIndex = 0\n      var maskFunc = QRUtil.getMaskFunction(maskPattern)\n\n      for (var col = _moduleCount - 1; col > 0; col -= 2) {\n\n        if (col == 6) col -= 1\n\n        while (true) {\n\n          for (var c = 0; c < 2; c += 1) {\n\n            if (_modules[row][col - c] == null) {\n\n              var dark = false\n\n              if (byteIndex < data.length) {\n                dark = (((data[byteIndex] >>> bitIndex) & 1) == 1)\n              }\n\n              var mask = maskFunc(row, col - c)\n\n              if (mask) {\n                dark = !dark\n              }\n\n              _modules[row][col - c] = dark\n              bitIndex -= 1\n\n              if (bitIndex == -1) {\n                byteIndex += 1\n                bitIndex = 7\n              }\n            }\n          }\n\n          row += inc\n\n          if (row < 0 || _moduleCount <= row) {\n            row -= inc\n            inc = -inc\n            break\n          }\n        }\n      }\n    }\n\n    var createBytes = function(buffer, rsBlocks) {\n\n      var offset = 0\n\n      var maxDcCount = 0\n      var maxEcCount = 0\n\n      var dcdata = new Array(rsBlocks.length)\n      var ecdata = new Array(rsBlocks.length)\n\n      for (var r = 0; r < rsBlocks.length; r += 1) {\n\n        var dcCount = rsBlocks[r].dataCount\n        var ecCount = rsBlocks[r].totalCount - dcCount\n\n        maxDcCount = Math.max(maxDcCount, dcCount)\n        maxEcCount = Math.max(maxEcCount, ecCount)\n\n        dcdata[r] = new Array(dcCount)\n\n        for (var i = 0; i < dcdata[r].length; i += 1) {\n          dcdata[r][i] = 0xff & buffer.getBuffer()[i + offset]\n        }\n        offset += dcCount\n\n        var rsPoly = QRUtil.getErrorCorrectPolynomial(ecCount)\n        var rawPoly = qrPolynomial(dcdata[r], rsPoly.getLength() - 1)\n\n        var modPoly = rawPoly.mod(rsPoly)\n        ecdata[r] = new Array(rsPoly.getLength() - 1)\n        for (var i = 0; i < ecdata[r].length; i += 1) {\n          var modIndex = i + modPoly.getLength() - ecdata[r].length\n          ecdata[r][i] = (modIndex >= 0) ? modPoly.getAt(modIndex) : 0\n        }\n      }\n\n      var totalCodeCount = 0\n      for (var i = 0; i < rsBlocks.length; i += 1) {\n        totalCodeCount += rsBlocks[i].totalCount\n      }\n\n      var data = new Array(totalCodeCount)\n      var index = 0\n\n      for (var i = 0; i < maxDcCount; i += 1) {\n        for (var r = 0; r < rsBlocks.length; r += 1) {\n          if (i < dcdata[r].length) {\n            data[index] = dcdata[r][i]\n            index += 1\n          }\n        }\n      }\n\n      for (var i = 0; i < maxEcCount; i += 1) {\n        for (var r = 0; r < rsBlocks.length; r += 1) {\n          if (i < ecdata[r].length) {\n            data[index] = ecdata[r][i]\n            index += 1\n          }\n        }\n      }\n\n      return data\n    }\n\n    var createData = function(typeNumber, errorCorrectionLevel, dataList) {\n\n      var rsBlocks = QRRSBlock.getRSBlocks(typeNumber, errorCorrectionLevel)\n\n      var buffer = qrBitBuffer()\n\n      for (var i = 0; i < dataList.length; i += 1) {\n        var data = dataList[i]\n        buffer.put(data.getMode(), 4)\n        buffer.put(data.getLength(), QRUtil.getLengthInBits(data.getMode(), typeNumber))\n        data.write(buffer)\n      }\n\n      // calc num max data.\n      var totalDataCount = 0\n      for (var i = 0; i < rsBlocks.length; i += 1) {\n        totalDataCount += rsBlocks[i].dataCount\n      }\n\n      if (buffer.getLengthInBits() > totalDataCount * 8) {\n        throw 'code length overflow. ('\n        + buffer.getLengthInBits()\n        + '>'\n        + totalDataCount * 8\n        + ')'\n      }\n\n      // end code\n      if (buffer.getLengthInBits() + 4 <= totalDataCount * 8) {\n        buffer.put(0, 4)\n      }\n\n      // padding\n      while (buffer.getLengthInBits() % 8 != 0) {\n        buffer.putBit(false)\n      }\n\n      // padding\n      while (true) {\n\n        if (buffer.getLengthInBits() >= totalDataCount * 8) {\n          break\n        }\n        buffer.put(PAD0, 8)\n\n        if (buffer.getLengthInBits() >= totalDataCount * 8) {\n          break\n        }\n        buffer.put(PAD1, 8)\n      }\n\n      return createBytes(buffer, rsBlocks)\n    }\n\n    _this.addData = function(data, mode) {\n\n      mode = mode || 'Byte'\n\n      var newData = null\n\n      switch (mode) {\n        case 'Numeric' :\n          newData = qrNumber(data)\n          break\n        case 'Alphanumeric' :\n          newData = qrAlphaNum(data)\n          break\n        case 'Byte' :\n          newData = qr8BitByte(data)\n          break\n        case 'Kanji' :\n          newData = qrKanji(data)\n          break\n        default :\n          throw 'mode:' + mode\n      }\n\n      _dataList.push(newData)\n      _dataCache = null\n    }\n\n    _this.isDark = function(row, col) {\n      if (row < 0 || _moduleCount <= row || col < 0 || _moduleCount <= col) {\n        throw row + ',' + col\n      }\n      return _modules[row][col]\n    }\n\n    _this.getModuleCount = function() {\n      return _moduleCount\n    }\n\n    _this.make = function() {\n      if (_typeNumber < 1) {\n        var typeNumber = 1\n\n        for (; typeNumber < 40; typeNumber++) {\n          var rsBlocks = QRRSBlock.getRSBlocks(typeNumber, _errorCorrectionLevel)\n          var buffer = qrBitBuffer()\n\n          for (var i = 0; i < _dataList.length; i++) {\n            var data = _dataList[i]\n            buffer.put(data.getMode(), 4)\n            buffer.put(data.getLength(), QRUtil.getLengthInBits(data.getMode(), typeNumber))\n            data.write(buffer)\n          }\n\n          var totalDataCount = 0\n          for (var i = 0; i < rsBlocks.length; i++) {\n            totalDataCount += rsBlocks[i].dataCount\n          }\n\n          if (buffer.getLengthInBits() <= totalDataCount * 8) {\n            break\n          }\n        }\n\n        _typeNumber = typeNumber\n      }\n\n      makeImpl(false, getBestMaskPattern())\n    }\n\n    _this.createTableTag = function(cellSize, margin) {\n\n      cellSize = cellSize || 2\n      margin = (typeof margin == 'undefined') ? cellSize * 4 : margin\n\n      var qrHtml = ''\n\n      qrHtml += '<table style=\"'\n      qrHtml += ' border-width: 0px; border-style: none;'\n      qrHtml += ' border-collapse: collapse;'\n      qrHtml += ' padding: 0px; margin: ' + margin + 'px;'\n      qrHtml += '\">'\n      qrHtml += '<tbody>'\n\n      for (var r = 0; r < _this.getModuleCount(); r += 1) {\n\n        qrHtml += '<tr>'\n\n        for (var c = 0; c < _this.getModuleCount(); c += 1) {\n          qrHtml += '<td style=\"'\n          qrHtml += ' border-width: 0px; border-style: none;'\n          qrHtml += ' border-collapse: collapse;'\n          qrHtml += ' padding: 0px; margin: 0px;'\n          qrHtml += ' width: ' + cellSize + 'px;'\n          qrHtml += ' height: ' + cellSize + 'px;'\n          qrHtml += ' background-color: '\n          qrHtml += _this.isDark(r, c) ? '#000000' : '#ffffff'\n          qrHtml += ';'\n          qrHtml += '\"/>'\n        }\n\n        qrHtml += '</tr>'\n      }\n\n      qrHtml += '</tbody>'\n      qrHtml += '</table>'\n\n      return qrHtml\n    }\n\n    _this.createSvgTag = function(cellSize, margin, alt, title) {\n\n      var opts = {}\n      if (typeof arguments[0] == 'object') {\n        // Called by options.\n        opts = arguments[0]\n        // overwrite cellSize and margin.\n        cellSize = opts.cellSize\n        margin = opts.margin\n        alt = opts.alt\n        title = opts.title\n      }\n\n      cellSize = cellSize || 2\n      margin = (typeof margin == 'undefined') ? cellSize * 4 : margin\n\n      // Compose alt property surrogate\n      alt = (typeof alt === 'string') ? { text: alt } : alt || {}\n      alt.text = alt.text || null\n      alt.id = (alt.text) ? alt.id || 'qrcode-description' : null\n\n      // Compose title property surrogate\n      title = (typeof title === 'string') ? { text: title } : title || {}\n      title.text = title.text || null\n      title.id = (title.text) ? title.id || 'qrcode-title' : null\n\n      var size = _this.getModuleCount() * cellSize + margin * 2\n      var c, mc, r, mr, qrSvg = '', rect\n\n      rect = 'l' + cellSize + ',0 0,' + cellSize +\n        ' -' + cellSize + ',0 0,-' + cellSize + 'z '\n\n      qrSvg += '<svg version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\"'\n      qrSvg += !opts.scalable ? ' width=\"' + size + 'px\" height=\"' + size + 'px\"' : ''\n      qrSvg += ' viewBox=\"0 0 ' + size + ' ' + size + '\" '\n      qrSvg += ' preserveAspectRatio=\"xMinYMin meet\"'\n      qrSvg += (title.text || alt.text) ? ' role=\"img\" aria-labelledby=\"' +\n        escapeXml([title.id, alt.id].join(' ').trim()) + '\"' : ''\n      qrSvg += '>'\n      qrSvg += (title.text) ? '<title id=\"' + escapeXml(title.id) + '\">' +\n        escapeXml(title.text) + '</title>' : ''\n      qrSvg += (alt.text) ? '<description id=\"' + escapeXml(alt.id) + '\">' +\n        escapeXml(alt.text) + '</description>' : ''\n      qrSvg += '<rect width=\"100%\" height=\"100%\" fill=\"white\" cx=\"0\" cy=\"0\"/>'\n      qrSvg += '<path d=\"'\n\n      for (r = 0; r < _this.getModuleCount(); r += 1) {\n        mr = r * cellSize + margin\n        for (c = 0; c < _this.getModuleCount(); c += 1) {\n          if (_this.isDark(r, c)) {\n            mc = c * cellSize + margin\n            qrSvg += 'M' + mc + ',' + mr + rect\n          }\n        }\n      }\n\n      qrSvg += '\" stroke=\"transparent\" fill=\"black\"/>'\n      qrSvg += '</svg>'\n\n      return qrSvg\n    }\n\n    _this.createDataURL = function(cellSize, margin) {\n\n      cellSize = cellSize || 2\n      margin = (typeof margin == 'undefined') ? cellSize * 4 : margin\n\n      var size = _this.getModuleCount() * cellSize + margin * 2\n      var min = margin\n      var max = size - margin\n\n      return createDataURL(size, size, function(x, y) {\n        if (min <= x && x < max && min <= y && y < max) {\n          var c = Math.floor((x - min) / cellSize)\n          var r = Math.floor((y - min) / cellSize)\n          return _this.isDark(r, c) ? 0 : 1\n        } else {\n          return 1\n        }\n      })\n    }\n\n    _this.createImgTag = function(cellSize, margin, alt) {\n\n      cellSize = cellSize || 2\n      margin = (typeof margin == 'undefined') ? cellSize * 4 : margin\n\n      var size = _this.getModuleCount() * cellSize + margin * 2\n\n      var img = ''\n      img += '<img'\n      img += '\\u0020src=\"'\n      img += _this.createDataURL(cellSize, margin)\n      img += '\"'\n      img += '\\u0020width=\"'\n      img += size\n      img += '\"'\n      img += '\\u0020height=\"'\n      img += size\n      img += '\"'\n      if (alt) {\n        img += '\\u0020alt=\"'\n        img += escapeXml(alt)\n        img += '\"'\n      }\n      img += '/>'\n\n      return img\n    }\n\n    var escapeXml = function(s) {\n      var escaped = ''\n      for (var i = 0; i < s.length; i += 1) {\n        var c = s.charAt(i)\n        switch (c) {\n          case '<':\n            escaped += '&lt;'\n            break\n          case '>':\n            escaped += '&gt;'\n            break\n          case '&':\n            escaped += '&amp;'\n            break\n          case '\"':\n            escaped += '&quot;'\n            break\n          default :\n            escaped += c\n            break\n        }\n      }\n      return escaped\n    }\n\n    var _createHalfASCII = function(margin) {\n      var cellSize = 1\n      margin = (typeof margin == 'undefined') ? cellSize * 2 : margin\n\n      var size = _this.getModuleCount() * cellSize + margin * 2\n      var min = margin\n      var max = size - margin\n\n      var y, x, r1, r2, p\n\n      var blocks = {\n        '██': '█',\n        '█ ': '▀',\n        ' █': '▄',\n        '  ': ' '\n      }\n\n      var blocksLastLineNoMargin = {\n        '██': '▀',\n        '█ ': '▀',\n        ' █': ' ',\n        '  ': ' '\n      }\n\n      var ascii = ''\n      for (y = 0; y < size; y += 2) {\n        r1 = Math.floor((y - min) / cellSize)\n        r2 = Math.floor((y + 1 - min) / cellSize)\n        for (x = 0; x < size; x += 1) {\n          p = '█'\n\n          if (min <= x && x < max && min <= y && y < max && _this.isDark(r1, Math.floor((x - min) / cellSize))) {\n            p = ' '\n          }\n\n          if (min <= x && x < max && min <= y + 1 && y + 1 < max && _this.isDark(r2, Math.floor((x - min) / cellSize))) {\n            p += ' '\n          } else {\n            p += '█'\n          }\n\n          // Output 2 characters per pixel, to create full square. 1 character per pixels gives only half width of square.\n          ascii += (margin < 1 && y + 1 >= max) ? blocksLastLineNoMargin[p] : blocks[p]\n        }\n\n        ascii += '\\n'\n      }\n\n      if (size % 2 && margin > 0) {\n        return ascii.substring(0, ascii.length - size - 1) + Array(size + 1).join('▀')\n      }\n\n      return ascii.substring(0, ascii.length - 1)\n    }\n\n    _this.createASCII = function(cellSize, margin) {\n      cellSize = cellSize || 1\n\n      if (cellSize < 2) {\n        return _createHalfASCII(margin)\n      }\n\n      cellSize -= 1\n      margin = (typeof margin == 'undefined') ? cellSize * 2 : margin\n\n      var size = _this.getModuleCount() * cellSize + margin * 2\n      var min = margin\n      var max = size - margin\n\n      var y, x, r, p\n\n      var white = Array(cellSize + 1).join('██')\n      var black = Array(cellSize + 1).join('  ')\n\n      var ascii = ''\n      var line = ''\n      for (y = 0; y < size; y += 1) {\n        r = Math.floor((y - min) / cellSize)\n        line = ''\n        for (x = 0; x < size; x += 1) {\n          p = 1\n\n          if (min <= x && x < max && min <= y && y < max && _this.isDark(r, Math.floor((x - min) / cellSize))) {\n            p = 0\n          }\n\n          // Output 2 characters per pixel, to create full square. 1 character per pixels gives only half width of square.\n          line += p ? white : black\n        }\n\n        for (r = 0; r < cellSize; r += 1) {\n          ascii += line + '\\n'\n        }\n      }\n\n      return ascii.substring(0, ascii.length - 1)\n    }\n\n    _this.renderTo2dContext = function(context, cellSize) {\n      cellSize = cellSize || 2\n      var length = _this.getModuleCount()\n      for (var row = 0; row < length; row++) {\n        for (var col = 0; col < length; col++) {\n          context.fillStyle = _this.isDark(row, col) ? 'black' : 'white'\n          context.fillRect(row * cellSize, col * cellSize, cellSize, cellSize)\n        }\n      }\n    }\n\n    return _this\n  }\n\n  //---------------------------------------------------------------------\n  // qrcode.stringToBytes\n  //---------------------------------------------------------------------\n\n  qrcode.stringToBytesFuncs = {\n    'default': function(s) {\n      var bytes = []\n      for (var i = 0; i < s.length; i += 1) {\n        var c = s.charCodeAt(i)\n        bytes.push(c & 0xff)\n      }\n      return bytes\n    }\n  }\n\n  qrcode.stringToBytes = qrcode.stringToBytesFuncs['default']\n\n  //---------------------------------------------------------------------\n  // qrcode.createStringToBytes\n  //---------------------------------------------------------------------\n\n  /**\n   * @param unicodeData base64 string of byte array.\n   * [16bit Unicode],[16bit Bytes], ...\n   * @param numChars\n   */\n  qrcode.createStringToBytes = function(unicodeData, numChars) {\n\n    // create conversion map.\n\n    var unicodeMap = function() {\n\n      var bin = base64DecodeInputStream(unicodeData)\n      var read = function() {\n        var b = bin.read()\n        if (b == -1) throw 'eof'\n        return b\n      }\n\n      var count = 0\n      var unicodeMap = {}\n      while (true) {\n        var b0 = bin.read()\n        if (b0 == -1) break\n        var b1 = read()\n        var b2 = read()\n        var b3 = read()\n        var k = String.fromCharCode((b0 << 8) | b1)\n        var v = (b2 << 8) | b3\n        unicodeMap[k] = v\n        count += 1\n      }\n      if (count != numChars) {\n        throw count + ' != ' + numChars\n      }\n\n      return unicodeMap\n    }()\n\n    var unknownChar = '?'.charCodeAt(0)\n\n    return function(s) {\n      var bytes = []\n      for (var i = 0; i < s.length; i += 1) {\n        var c = s.charCodeAt(i)\n        if (c < 128) {\n          bytes.push(c)\n        } else {\n          var b = unicodeMap[s.charAt(i)]\n          if (typeof b == 'number') {\n            if ((b & 0xff) == b) {\n              // 1byte\n              bytes.push(b)\n            } else {\n              // 2bytes\n              bytes.push(b >>> 8)\n              bytes.push(b & 0xff)\n            }\n          } else {\n            bytes.push(unknownChar)\n          }\n        }\n      }\n      return bytes\n    }\n  }\n\n  //---------------------------------------------------------------------\n  // QRMode\n  //---------------------------------------------------------------------\n\n  var QRMode = {\n    MODE_NUMBER: 1 << 0,\n    MODE_ALPHA_NUM: 1 << 1,\n    MODE_8BIT_BYTE: 1 << 2,\n    MODE_KANJI: 1 << 3\n  }\n\n  //---------------------------------------------------------------------\n  // QRErrorCorrectionLevel\n  //---------------------------------------------------------------------\n\n  var QRErrorCorrectionLevel = {\n    L: 1,\n    M: 0,\n    Q: 3,\n    H: 2\n  }\n\n  //---------------------------------------------------------------------\n  // QRMaskPattern\n  //---------------------------------------------------------------------\n\n  var QRMaskPattern = {\n    PATTERN000: 0,\n    PATTERN001: 1,\n    PATTERN010: 2,\n    PATTERN011: 3,\n    PATTERN100: 4,\n    PATTERN101: 5,\n    PATTERN110: 6,\n    PATTERN111: 7\n  }\n\n  //---------------------------------------------------------------------\n  // QRUtil\n  //---------------------------------------------------------------------\n\n  var QRUtil = function() {\n\n    var PATTERN_POSITION_TABLE = [\n      [],\n      [6, 18],\n      [6, 22],\n      [6, 26],\n      [6, 30],\n      [6, 34],\n      [6, 22, 38],\n      [6, 24, 42],\n      [6, 26, 46],\n      [6, 28, 50],\n      [6, 30, 54],\n      [6, 32, 58],\n      [6, 34, 62],\n      [6, 26, 46, 66],\n      [6, 26, 48, 70],\n      [6, 26, 50, 74],\n      [6, 30, 54, 78],\n      [6, 30, 56, 82],\n      [6, 30, 58, 86],\n      [6, 34, 62, 90],\n      [6, 28, 50, 72, 94],\n      [6, 26, 50, 74, 98],\n      [6, 30, 54, 78, 102],\n      [6, 28, 54, 80, 106],\n      [6, 32, 58, 84, 110],\n      [6, 30, 58, 86, 114],\n      [6, 34, 62, 90, 118],\n      [6, 26, 50, 74, 98, 122],\n      [6, 30, 54, 78, 102, 126],\n      [6, 26, 52, 78, 104, 130],\n      [6, 30, 56, 82, 108, 134],\n      [6, 34, 60, 86, 112, 138],\n      [6, 30, 58, 86, 114, 142],\n      [6, 34, 62, 90, 118, 146],\n      [6, 30, 54, 78, 102, 126, 150],\n      [6, 24, 50, 76, 102, 128, 154],\n      [6, 28, 54, 80, 106, 132, 158],\n      [6, 32, 58, 84, 110, 136, 162],\n      [6, 26, 54, 82, 110, 138, 166],\n      [6, 30, 58, 86, 114, 142, 170]\n    ]\n    var G15 = (1 << 10) | (1 << 8) | (1 << 5) | (1 << 4) | (1 << 2) | (1 << 1) | (1 << 0)\n    var G18 = (1 << 12) | (1 << 11) | (1 << 10) | (1 << 9) | (1 << 8) | (1 << 5) | (1 << 2) | (1 << 0)\n    var G15_MASK = (1 << 14) | (1 << 12) | (1 << 10) | (1 << 4) | (1 << 1)\n\n    var _this = {}\n\n    var getBCHDigit = function(data) {\n      var digit = 0\n      while (data != 0) {\n        digit += 1\n        data >>>= 1\n      }\n      return digit\n    }\n\n    _this.getBCHTypeInfo = function(data) {\n      var d = data << 10\n      while (getBCHDigit(d) - getBCHDigit(G15) >= 0) {\n        d ^= (G15 << (getBCHDigit(d) - getBCHDigit(G15)))\n      }\n      return ((data << 10) | d) ^ G15_MASK\n    }\n\n    _this.getBCHTypeNumber = function(data) {\n      var d = data << 12\n      while (getBCHDigit(d) - getBCHDigit(G18) >= 0) {\n        d ^= (G18 << (getBCHDigit(d) - getBCHDigit(G18)))\n      }\n      return (data << 12) | d\n    }\n\n    _this.getPatternPosition = function(typeNumber) {\n      return PATTERN_POSITION_TABLE[typeNumber - 1]\n    }\n\n    _this.getMaskFunction = function(maskPattern) {\n\n      switch (maskPattern) {\n\n        case QRMaskPattern.PATTERN000 :\n          return function(i, j) {\n            return (i + j) % 2 == 0\n          }\n        case QRMaskPattern.PATTERN001 :\n          return function(i, j) {\n            return i % 2 == 0\n          }\n        case QRMaskPattern.PATTERN010 :\n          return function(i, j) {\n            return j % 3 == 0\n          }\n        case QRMaskPattern.PATTERN011 :\n          return function(i, j) {\n            return (i + j) % 3 == 0\n          }\n        case QRMaskPattern.PATTERN100 :\n          return function(i, j) {\n            return (Math.floor(i / 2) + Math.floor(j / 3)) % 2 == 0\n          }\n        case QRMaskPattern.PATTERN101 :\n          return function(i, j) {\n            return (i * j) % 2 + (i * j) % 3 == 0\n          }\n        case QRMaskPattern.PATTERN110 :\n          return function(i, j) {\n            return ((i * j) % 2 + (i * j) % 3) % 2 == 0\n          }\n        case QRMaskPattern.PATTERN111 :\n          return function(i, j) {\n            return ((i * j) % 3 + (i + j) % 2) % 2 == 0\n          }\n\n        default :\n          throw 'bad maskPattern:' + maskPattern\n      }\n    }\n\n    _this.getErrorCorrectPolynomial = function(errorCorrectLength) {\n      var a = qrPolynomial([1], 0)\n      for (var i = 0; i < errorCorrectLength; i += 1) {\n        a = a.multiply(qrPolynomial([1, QRMath.gexp(i)], 0))\n      }\n      return a\n    }\n\n    _this.getLengthInBits = function(mode, type) {\n\n      if (1 <= type && type < 10) {\n\n        // 1 - 9\n\n        switch (mode) {\n          case QRMode.MODE_NUMBER    :\n            return 10\n          case QRMode.MODE_ALPHA_NUM :\n            return 9\n          case QRMode.MODE_8BIT_BYTE :\n            return 8\n          case QRMode.MODE_KANJI     :\n            return 8\n          default :\n            throw 'mode:' + mode\n        }\n\n      } else if (type < 27) {\n\n        // 10 - 26\n\n        switch (mode) {\n          case QRMode.MODE_NUMBER    :\n            return 12\n          case QRMode.MODE_ALPHA_NUM :\n            return 11\n          case QRMode.MODE_8BIT_BYTE :\n            return 16\n          case QRMode.MODE_KANJI     :\n            return 10\n          default :\n            throw 'mode:' + mode\n        }\n\n      } else if (type < 41) {\n\n        // 27 - 40\n\n        switch (mode) {\n          case QRMode.MODE_NUMBER    :\n            return 14\n          case QRMode.MODE_ALPHA_NUM :\n            return 13\n          case QRMode.MODE_8BIT_BYTE :\n            return 16\n          case QRMode.MODE_KANJI     :\n            return 12\n          default :\n            throw 'mode:' + mode\n        }\n\n      } else {\n        throw 'type:' + type\n      }\n    }\n\n    _this.getLostPoint = function(qrcode) {\n\n      var moduleCount = qrcode.getModuleCount()\n\n      var lostPoint = 0\n\n      // LEVEL1\n\n      for (var row = 0; row < moduleCount; row += 1) {\n        for (var col = 0; col < moduleCount; col += 1) {\n\n          var sameCount = 0\n          var dark = qrcode.isDark(row, col)\n\n          for (var r = -1; r <= 1; r += 1) {\n\n            if (row + r < 0 || moduleCount <= row + r) {\n              continue\n            }\n\n            for (var c = -1; c <= 1; c += 1) {\n\n              if (col + c < 0 || moduleCount <= col + c) {\n                continue\n              }\n\n              if (r == 0 && c == 0) {\n                continue\n              }\n\n              if (dark == qrcode.isDark(row + r, col + c)) {\n                sameCount += 1\n              }\n            }\n          }\n\n          if (sameCount > 5) {\n            lostPoint += (3 + sameCount - 5)\n          }\n        }\n      }\n\n\n      // LEVEL2\n\n      for (var row = 0; row < moduleCount - 1; row += 1) {\n        for (var col = 0; col < moduleCount - 1; col += 1) {\n          var count = 0\n          if (qrcode.isDark(row, col)) count += 1\n          if (qrcode.isDark(row + 1, col)) count += 1\n          if (qrcode.isDark(row, col + 1)) count += 1\n          if (qrcode.isDark(row + 1, col + 1)) count += 1\n          if (count == 0 || count == 4) {\n            lostPoint += 3\n          }\n        }\n      }\n\n      // LEVEL3\n\n      for (var row = 0; row < moduleCount; row += 1) {\n        for (var col = 0; col < moduleCount - 6; col += 1) {\n          if (qrcode.isDark(row, col)\n            && !qrcode.isDark(row, col + 1)\n            && qrcode.isDark(row, col + 2)\n            && qrcode.isDark(row, col + 3)\n            && qrcode.isDark(row, col + 4)\n            && !qrcode.isDark(row, col + 5)\n            && qrcode.isDark(row, col + 6)) {\n            lostPoint += 40\n          }\n        }\n      }\n\n      for (var col = 0; col < moduleCount; col += 1) {\n        for (var row = 0; row < moduleCount - 6; row += 1) {\n          if (qrcode.isDark(row, col)\n            && !qrcode.isDark(row + 1, col)\n            && qrcode.isDark(row + 2, col)\n            && qrcode.isDark(row + 3, col)\n            && qrcode.isDark(row + 4, col)\n            && !qrcode.isDark(row + 5, col)\n            && qrcode.isDark(row + 6, col)) {\n            lostPoint += 40\n          }\n        }\n      }\n\n      // LEVEL4\n\n      var darkCount = 0\n\n      for (var col = 0; col < moduleCount; col += 1) {\n        for (var row = 0; row < moduleCount; row += 1) {\n          if (qrcode.isDark(row, col)) {\n            darkCount += 1\n          }\n        }\n      }\n\n      var ratio = Math.abs(100 * darkCount / moduleCount / moduleCount - 50) / 5\n      lostPoint += ratio * 10\n\n      return lostPoint\n    }\n\n    return _this\n  }()\n\n  //---------------------------------------------------------------------\n  // QRMath\n  //---------------------------------------------------------------------\n\n  var QRMath = function() {\n\n    var EXP_TABLE = new Array(256)\n    var LOG_TABLE = new Array(256)\n\n    // initialize tables\n    for (var i = 0; i < 8; i += 1) {\n      EXP_TABLE[i] = 1 << i\n    }\n    for (var i = 8; i < 256; i += 1) {\n      EXP_TABLE[i] = EXP_TABLE[i - 4]\n        ^ EXP_TABLE[i - 5]\n        ^ EXP_TABLE[i - 6]\n        ^ EXP_TABLE[i - 8]\n    }\n    for (var i = 0; i < 255; i += 1) {\n      LOG_TABLE[EXP_TABLE[i]] = i\n    }\n\n    var _this = {}\n\n    _this.glog = function(n) {\n\n      if (n < 1) {\n        throw 'glog(' + n + ')'\n      }\n\n      return LOG_TABLE[n]\n    }\n\n    _this.gexp = function(n) {\n\n      while (n < 0) {\n        n += 255\n      }\n\n      while (n >= 256) {\n        n -= 255\n      }\n\n      return EXP_TABLE[n]\n    }\n\n    return _this\n  }()\n\n  //---------------------------------------------------------------------\n  // qrPolynomial\n  //---------------------------------------------------------------------\n\n  function qrPolynomial(num, shift) {\n\n    if (typeof num.length == 'undefined') {\n      throw num.length + '/' + shift\n    }\n\n    var _num = function() {\n      var offset = 0\n      while (offset < num.length && num[offset] == 0) {\n        offset += 1\n      }\n      var _num = new Array(num.length - offset + shift)\n      for (var i = 0; i < num.length - offset; i += 1) {\n        _num[i] = num[i + offset]\n      }\n      return _num\n    }()\n\n    var _this = {}\n\n    _this.getAt = function(index) {\n      return _num[index]\n    }\n\n    _this.getLength = function() {\n      return _num.length\n    }\n\n    _this.multiply = function(e) {\n\n      var num = new Array(_this.getLength() + e.getLength() - 1)\n\n      for (var i = 0; i < _this.getLength(); i += 1) {\n        for (var j = 0; j < e.getLength(); j += 1) {\n          num[i + j] ^= QRMath.gexp(QRMath.glog(_this.getAt(i)) + QRMath.glog(e.getAt(j)))\n        }\n      }\n\n      return qrPolynomial(num, 0)\n    }\n\n    _this.mod = function(e) {\n\n      if (_this.getLength() - e.getLength() < 0) {\n        return _this\n      }\n\n      var ratio = QRMath.glog(_this.getAt(0)) - QRMath.glog(e.getAt(0))\n\n      var num = new Array(_this.getLength())\n      for (var i = 0; i < _this.getLength(); i += 1) {\n        num[i] = _this.getAt(i)\n      }\n\n      for (var i = 0; i < e.getLength(); i += 1) {\n        num[i] ^= QRMath.gexp(QRMath.glog(e.getAt(i)) + ratio)\n      }\n\n      // recursive call\n      return qrPolynomial(num, 0).mod(e)\n    }\n\n    return _this\n  }\n\n  //---------------------------------------------------------------------\n  // QRRSBlock\n  //---------------------------------------------------------------------\n\n  var QRRSBlock = function() {\n\n    var RS_BLOCK_TABLE = [\n\n      // L\n      // M\n      // Q\n      // H\n\n      // 1\n      [1, 26, 19],\n      [1, 26, 16],\n      [1, 26, 13],\n      [1, 26, 9],\n\n      // 2\n      [1, 44, 34],\n      [1, 44, 28],\n      [1, 44, 22],\n      [1, 44, 16],\n\n      // 3\n      [1, 70, 55],\n      [1, 70, 44],\n      [2, 35, 17],\n      [2, 35, 13],\n\n      // 4\n      [1, 100, 80],\n      [2, 50, 32],\n      [2, 50, 24],\n      [4, 25, 9],\n\n      // 5\n      [1, 134, 108],\n      [2, 67, 43],\n      [2, 33, 15, 2, 34, 16],\n      [2, 33, 11, 2, 34, 12],\n\n      // 6\n      [2, 86, 68],\n      [4, 43, 27],\n      [4, 43, 19],\n      [4, 43, 15],\n\n      // 7\n      [2, 98, 78],\n      [4, 49, 31],\n      [2, 32, 14, 4, 33, 15],\n      [4, 39, 13, 1, 40, 14],\n\n      // 8\n      [2, 121, 97],\n      [2, 60, 38, 2, 61, 39],\n      [4, 40, 18, 2, 41, 19],\n      [4, 40, 14, 2, 41, 15],\n\n      // 9\n      [2, 146, 116],\n      [3, 58, 36, 2, 59, 37],\n      [4, 36, 16, 4, 37, 17],\n      [4, 36, 12, 4, 37, 13],\n\n      // 10\n      [2, 86, 68, 2, 87, 69],\n      [4, 69, 43, 1, 70, 44],\n      [6, 43, 19, 2, 44, 20],\n      [6, 43, 15, 2, 44, 16],\n\n      // 11\n      [4, 101, 81],\n      [1, 80, 50, 4, 81, 51],\n      [4, 50, 22, 4, 51, 23],\n      [3, 36, 12, 8, 37, 13],\n\n      // 12\n      [2, 116, 92, 2, 117, 93],\n      [6, 58, 36, 2, 59, 37],\n      [4, 46, 20, 6, 47, 21],\n      [7, 42, 14, 4, 43, 15],\n\n      // 13\n      [4, 133, 107],\n      [8, 59, 37, 1, 60, 38],\n      [8, 44, 20, 4, 45, 21],\n      [12, 33, 11, 4, 34, 12],\n\n      // 14\n      [3, 145, 115, 1, 146, 116],\n      [4, 64, 40, 5, 65, 41],\n      [11, 36, 16, 5, 37, 17],\n      [11, 36, 12, 5, 37, 13],\n\n      // 15\n      [5, 109, 87, 1, 110, 88],\n      [5, 65, 41, 5, 66, 42],\n      [5, 54, 24, 7, 55, 25],\n      [11, 36, 12, 7, 37, 13],\n\n      // 16\n      [5, 122, 98, 1, 123, 99],\n      [7, 73, 45, 3, 74, 46],\n      [15, 43, 19, 2, 44, 20],\n      [3, 45, 15, 13, 46, 16],\n\n      // 17\n      [1, 135, 107, 5, 136, 108],\n      [10, 74, 46, 1, 75, 47],\n      [1, 50, 22, 15, 51, 23],\n      [2, 42, 14, 17, 43, 15],\n\n      // 18\n      [5, 150, 120, 1, 151, 121],\n      [9, 69, 43, 4, 70, 44],\n      [17, 50, 22, 1, 51, 23],\n      [2, 42, 14, 19, 43, 15],\n\n      // 19\n      [3, 141, 113, 4, 142, 114],\n      [3, 70, 44, 11, 71, 45],\n      [17, 47, 21, 4, 48, 22],\n      [9, 39, 13, 16, 40, 14],\n\n      // 20\n      [3, 135, 107, 5, 136, 108],\n      [3, 67, 41, 13, 68, 42],\n      [15, 54, 24, 5, 55, 25],\n      [15, 43, 15, 10, 44, 16],\n\n      // 21\n      [4, 144, 116, 4, 145, 117],\n      [17, 68, 42],\n      [17, 50, 22, 6, 51, 23],\n      [19, 46, 16, 6, 47, 17],\n\n      // 22\n      [2, 139, 111, 7, 140, 112],\n      [17, 74, 46],\n      [7, 54, 24, 16, 55, 25],\n      [34, 37, 13],\n\n      // 23\n      [4, 151, 121, 5, 152, 122],\n      [4, 75, 47, 14, 76, 48],\n      [11, 54, 24, 14, 55, 25],\n      [16, 45, 15, 14, 46, 16],\n\n      // 24\n      [6, 147, 117, 4, 148, 118],\n      [6, 73, 45, 14, 74, 46],\n      [11, 54, 24, 16, 55, 25],\n      [30, 46, 16, 2, 47, 17],\n\n      // 25\n      [8, 132, 106, 4, 133, 107],\n      [8, 75, 47, 13, 76, 48],\n      [7, 54, 24, 22, 55, 25],\n      [22, 45, 15, 13, 46, 16],\n\n      // 26\n      [10, 142, 114, 2, 143, 115],\n      [19, 74, 46, 4, 75, 47],\n      [28, 50, 22, 6, 51, 23],\n      [33, 46, 16, 4, 47, 17],\n\n      // 27\n      [8, 152, 122, 4, 153, 123],\n      [22, 73, 45, 3, 74, 46],\n      [8, 53, 23, 26, 54, 24],\n      [12, 45, 15, 28, 46, 16],\n\n      // 28\n      [3, 147, 117, 10, 148, 118],\n      [3, 73, 45, 23, 74, 46],\n      [4, 54, 24, 31, 55, 25],\n      [11, 45, 15, 31, 46, 16],\n\n      // 29\n      [7, 146, 116, 7, 147, 117],\n      [21, 73, 45, 7, 74, 46],\n      [1, 53, 23, 37, 54, 24],\n      [19, 45, 15, 26, 46, 16],\n\n      // 30\n      [5, 145, 115, 10, 146, 116],\n      [19, 75, 47, 10, 76, 48],\n      [15, 54, 24, 25, 55, 25],\n      [23, 45, 15, 25, 46, 16],\n\n      // 31\n      [13, 145, 115, 3, 146, 116],\n      [2, 74, 46, 29, 75, 47],\n      [42, 54, 24, 1, 55, 25],\n      [23, 45, 15, 28, 46, 16],\n\n      // 32\n      [17, 145, 115],\n      [10, 74, 46, 23, 75, 47],\n      [10, 54, 24, 35, 55, 25],\n      [19, 45, 15, 35, 46, 16],\n\n      // 33\n      [17, 145, 115, 1, 146, 116],\n      [14, 74, 46, 21, 75, 47],\n      [29, 54, 24, 19, 55, 25],\n      [11, 45, 15, 46, 46, 16],\n\n      // 34\n      [13, 145, 115, 6, 146, 116],\n      [14, 74, 46, 23, 75, 47],\n      [44, 54, 24, 7, 55, 25],\n      [59, 46, 16, 1, 47, 17],\n\n      // 35\n      [12, 151, 121, 7, 152, 122],\n      [12, 75, 47, 26, 76, 48],\n      [39, 54, 24, 14, 55, 25],\n      [22, 45, 15, 41, 46, 16],\n\n      // 36\n      [6, 151, 121, 14, 152, 122],\n      [6, 75, 47, 34, 76, 48],\n      [46, 54, 24, 10, 55, 25],\n      [2, 45, 15, 64, 46, 16],\n\n      // 37\n      [17, 152, 122, 4, 153, 123],\n      [29, 74, 46, 14, 75, 47],\n      [49, 54, 24, 10, 55, 25],\n      [24, 45, 15, 46, 46, 16],\n\n      // 38\n      [4, 152, 122, 18, 153, 123],\n      [13, 74, 46, 32, 75, 47],\n      [48, 54, 24, 14, 55, 25],\n      [42, 45, 15, 32, 46, 16],\n\n      // 39\n      [20, 147, 117, 4, 148, 118],\n      [40, 75, 47, 7, 76, 48],\n      [43, 54, 24, 22, 55, 25],\n      [10, 45, 15, 67, 46, 16],\n\n      // 40\n      [19, 148, 118, 6, 149, 119],\n      [18, 75, 47, 31, 76, 48],\n      [34, 54, 24, 34, 55, 25],\n      [20, 45, 15, 61, 46, 16]\n    ]\n\n    var qrRSBlock = function(totalCount, dataCount) {\n      var _this = {}\n      _this.totalCount = totalCount\n      _this.dataCount = dataCount\n      return _this\n    }\n\n    var _this = {}\n\n    var getRsBlockTable = function(typeNumber, errorCorrectionLevel) {\n\n      switch (errorCorrectionLevel) {\n        case QRErrorCorrectionLevel.L :\n          return RS_BLOCK_TABLE[(typeNumber - 1) * 4 + 0]\n        case QRErrorCorrectionLevel.M :\n          return RS_BLOCK_TABLE[(typeNumber - 1) * 4 + 1]\n        case QRErrorCorrectionLevel.Q :\n          return RS_BLOCK_TABLE[(typeNumber - 1) * 4 + 2]\n        case QRErrorCorrectionLevel.H :\n          return RS_BLOCK_TABLE[(typeNumber - 1) * 4 + 3]\n        default :\n          return undefined\n      }\n    }\n\n    _this.getRSBlocks = function(typeNumber, errorCorrectionLevel) {\n\n      var rsBlock = getRsBlockTable(typeNumber, errorCorrectionLevel)\n\n      if (typeof rsBlock == 'undefined') {\n        throw 'bad rs block @ typeNumber:' + typeNumber +\n        '/errorCorrectionLevel:' + errorCorrectionLevel\n      }\n\n      var length = rsBlock.length / 3\n\n      var list = []\n\n      for (var i = 0; i < length; i += 1) {\n\n        var count = rsBlock[i * 3 + 0]\n        var totalCount = rsBlock[i * 3 + 1]\n        var dataCount = rsBlock[i * 3 + 2]\n\n        for (var j = 0; j < count; j += 1) {\n          list.push(qrRSBlock(totalCount, dataCount))\n        }\n      }\n\n      return list\n    }\n\n    return _this\n  }()\n\n  //---------------------------------------------------------------------\n  // qrBitBuffer\n  //---------------------------------------------------------------------\n\n  var qrBitBuffer = function() {\n\n    var _buffer = []\n    var _length = 0\n\n    var _this = {}\n\n    _this.getBuffer = function() {\n      return _buffer\n    }\n\n    _this.getAt = function(index) {\n      var bufIndex = Math.floor(index / 8)\n      return ((_buffer[bufIndex] >>> (7 - index % 8)) & 1) == 1\n    }\n\n    _this.put = function(num, length) {\n      for (var i = 0; i < length; i += 1) {\n        _this.putBit(((num >>> (length - i - 1)) & 1) == 1)\n      }\n    }\n\n    _this.getLengthInBits = function() {\n      return _length\n    }\n\n    _this.putBit = function(bit) {\n\n      var bufIndex = Math.floor(_length / 8)\n      if (_buffer.length <= bufIndex) {\n        _buffer.push(0)\n      }\n\n      if (bit) {\n        _buffer[bufIndex] |= (0x80 >>> (_length % 8))\n      }\n\n      _length += 1\n    }\n\n    return _this\n  }\n\n  //---------------------------------------------------------------------\n  // qrNumber\n  //---------------------------------------------------------------------\n\n  var qrNumber = function(data) {\n\n    var _mode = QRMode.MODE_NUMBER\n    var _data = data\n\n    var _this = {}\n\n    _this.getMode = function() {\n      return _mode\n    }\n\n    _this.getLength = function(buffer) {\n      return _data.length\n    }\n\n    _this.write = function(buffer) {\n\n      var data = _data\n\n      var i = 0\n\n      while (i + 2 < data.length) {\n        buffer.put(strToNum(data.substring(i, i + 3)), 10)\n        i += 3\n      }\n\n      if (i < data.length) {\n        if (data.length - i == 1) {\n          buffer.put(strToNum(data.substring(i, i + 1)), 4)\n        } else if (data.length - i == 2) {\n          buffer.put(strToNum(data.substring(i, i + 2)), 7)\n        }\n      }\n    }\n\n    var strToNum = function(s) {\n      var num = 0\n      for (var i = 0; i < s.length; i += 1) {\n        num = num * 10 + chatToNum(s.charAt(i))\n      }\n      return num\n    }\n\n    var chatToNum = function(c) {\n      if ('0' <= c && c <= '9') {\n        return c.charCodeAt(0) - '0'.charCodeAt(0)\n      }\n      throw 'illegal char :' + c\n    }\n\n    return _this\n  }\n\n  //---------------------------------------------------------------------\n  // qrAlphaNum\n  //---------------------------------------------------------------------\n\n  var qrAlphaNum = function(data) {\n\n    var _mode = QRMode.MODE_ALPHA_NUM\n    var _data = data\n\n    var _this = {}\n\n    _this.getMode = function() {\n      return _mode\n    }\n\n    _this.getLength = function(buffer) {\n      return _data.length\n    }\n\n    _this.write = function(buffer) {\n\n      var s = _data\n\n      var i = 0\n\n      while (i + 1 < s.length) {\n        buffer.put(\n          getCode(s.charAt(i)) * 45 +\n          getCode(s.charAt(i + 1)), 11)\n        i += 2\n      }\n\n      if (i < s.length) {\n        buffer.put(getCode(s.charAt(i)), 6)\n      }\n    }\n\n    var getCode = function(c) {\n\n      if ('0' <= c && c <= '9') {\n        return c.charCodeAt(0) - '0'.charCodeAt(0)\n      } else if ('A' <= c && c <= 'Z') {\n        return c.charCodeAt(0) - 'A'.charCodeAt(0) + 10\n      } else {\n        switch (c) {\n          case ' ' :\n            return 36\n          case '$' :\n            return 37\n          case '%' :\n            return 38\n          case '*' :\n            return 39\n          case '+' :\n            return 40\n          case '-' :\n            return 41\n          case '.' :\n            return 42\n          case '/' :\n            return 43\n          case ':' :\n            return 44\n          default :\n            throw 'illegal char :' + c\n        }\n      }\n    }\n\n    return _this\n  }\n\n  //---------------------------------------------------------------------\n  // qr8BitByte\n  //---------------------------------------------------------------------\n\n  var qr8BitByte = function(data) {\n\n    var _mode = QRMode.MODE_8BIT_BYTE\n    var _data = data\n    var _bytes = qrcode.stringToBytes(data)\n\n    var _this = {}\n\n    _this.getMode = function() {\n      return _mode\n    }\n\n    _this.getLength = function(buffer) {\n      return _bytes.length\n    }\n\n    _this.write = function(buffer) {\n      for (var i = 0; i < _bytes.length; i += 1) {\n        buffer.put(_bytes[i], 8)\n      }\n    }\n\n    return _this\n  }\n\n  //---------------------------------------------------------------------\n  // qrKanji\n  //---------------------------------------------------------------------\n\n  var qrKanji = function(data) {\n\n    var _mode = QRMode.MODE_KANJI\n    var _data = data\n\n    var stringToBytes = qrcode.stringToBytesFuncs['SJIS']\n    if (!stringToBytes) {\n      throw 'sjis not supported.'\n    }\n    !function(c, code) {\n      // self test for sjis support.\n      var test = stringToBytes(c)\n      if (test.length != 2 || ((test[0] << 8) | test[1]) != code) {\n        throw 'sjis not supported.'\n      }\n    }('\\u53cb', 0x9746)\n\n    var _bytes = stringToBytes(data)\n\n    var _this = {}\n\n    _this.getMode = function() {\n      return _mode\n    }\n\n    _this.getLength = function(buffer) {\n      return ~~(_bytes.length / 2)\n    }\n\n    _this.write = function(buffer) {\n\n      var data = _bytes\n\n      var i = 0\n\n      while (i + 1 < data.length) {\n\n        var c = ((0xff & data[i]) << 8) | (0xff & data[i + 1])\n\n        if (0x8140 <= c && c <= 0x9FFC) {\n          c -= 0x8140\n        } else if (0xE040 <= c && c <= 0xEBBF) {\n          c -= 0xC140\n        } else {\n          throw 'illegal char at ' + (i + 1) + '/' + c\n        }\n\n        c = ((c >>> 8) & 0xff) * 0xC0 + (c & 0xff)\n\n        buffer.put(c, 13)\n\n        i += 2\n      }\n\n      if (i < data.length) {\n        throw 'illegal char at ' + (i + 1)\n      }\n    }\n\n    return _this\n  }\n\n  //=====================================================================\n  // GIF Support etc.\n  //\n\n  //---------------------------------------------------------------------\n  // byteArrayOutputStream\n  //---------------------------------------------------------------------\n\n  var byteArrayOutputStream = function() {\n\n    var _bytes = []\n\n    var _this = {}\n\n    _this.writeByte = function(b) {\n      _bytes.push(b & 0xff)\n    }\n\n    _this.writeShort = function(i) {\n      _this.writeByte(i)\n      _this.writeByte(i >>> 8)\n    }\n\n    _this.writeBytes = function(b, off, len) {\n      off = off || 0\n      len = len || b.length\n      for (var i = 0; i < len; i += 1) {\n        _this.writeByte(b[i + off])\n      }\n    }\n\n    _this.writeString = function(s) {\n      for (var i = 0; i < s.length; i += 1) {\n        _this.writeByte(s.charCodeAt(i))\n      }\n    }\n\n    _this.toByteArray = function() {\n      return _bytes\n    }\n\n    _this.toString = function() {\n      var s = ''\n      s += '['\n      for (var i = 0; i < _bytes.length; i += 1) {\n        if (i > 0) {\n          s += ','\n        }\n        s += _bytes[i]\n      }\n      s += ']'\n      return s\n    }\n\n    return _this\n  }\n\n  //---------------------------------------------------------------------\n  // base64EncodeOutputStream\n  //---------------------------------------------------------------------\n\n  var base64EncodeOutputStream = function() {\n\n    var _buffer = 0\n    var _buflen = 0\n    var _length = 0\n    var _base64 = ''\n\n    var _this = {}\n\n    var writeEncoded = function(b) {\n      _base64 += String.fromCharCode(encode(b & 0x3f))\n    }\n\n    var encode = function(n) {\n      if (n < 0) {\n        // error.\n      } else if (n < 26) {\n        return 0x41 + n\n      } else if (n < 52) {\n        return 0x61 + (n - 26)\n      } else if (n < 62) {\n        return 0x30 + (n - 52)\n      } else if (n == 62) {\n        return 0x2b\n      } else if (n == 63) {\n        return 0x2f\n      }\n      throw 'n:' + n\n    }\n\n    _this.writeByte = function(n) {\n\n      _buffer = (_buffer << 8) | (n & 0xff)\n      _buflen += 8\n      _length += 1\n\n      while (_buflen >= 6) {\n        writeEncoded(_buffer >>> (_buflen - 6))\n        _buflen -= 6\n      }\n    }\n\n    _this.flush = function() {\n\n      if (_buflen > 0) {\n        writeEncoded(_buffer << (6 - _buflen))\n        _buffer = 0\n        _buflen = 0\n      }\n\n      if (_length % 3 != 0) {\n        // padding\n        var padlen = 3 - _length % 3\n        for (var i = 0; i < padlen; i += 1) {\n          _base64 += '='\n        }\n      }\n    }\n\n    _this.toString = function() {\n      return _base64\n    }\n\n    return _this\n  }\n\n  //---------------------------------------------------------------------\n  // base64DecodeInputStream\n  //---------------------------------------------------------------------\n\n  var base64DecodeInputStream = function(str) {\n\n    var _str = str\n    var _pos = 0\n    var _buffer = 0\n    var _buflen = 0\n\n    var _this = {}\n\n    _this.read = function() {\n\n      while (_buflen < 8) {\n\n        if (_pos >= _str.length) {\n          if (_buflen == 0) {\n            return -1\n          }\n          throw 'unexpected end of file./' + _buflen\n        }\n\n        var c = _str.charAt(_pos)\n        _pos += 1\n\n        if (c == '=') {\n          _buflen = 0\n          return -1\n        } else if (c.match(/^\\s$/)) {\n          // ignore if whitespace.\n          continue\n        }\n\n        _buffer = (_buffer << 6) | decode(c.charCodeAt(0))\n        _buflen += 6\n      }\n\n      var n = (_buffer >>> (_buflen - 8)) & 0xff\n      _buflen -= 8\n      return n\n    }\n\n    var decode = function(c) {\n      if (0x41 <= c && c <= 0x5a) {\n        return c - 0x41\n      } else if (0x61 <= c && c <= 0x7a) {\n        return c - 0x61 + 26\n      } else if (0x30 <= c && c <= 0x39) {\n        return c - 0x30 + 52\n      } else if (c == 0x2b) {\n        return 62\n      } else if (c == 0x2f) {\n        return 63\n      } else {\n        throw 'c:' + c\n      }\n    }\n\n    return _this\n  }\n\n  //---------------------------------------------------------------------\n  // gifImage (B/W)\n  //---------------------------------------------------------------------\n\n  var gifImage = function(width, height) {\n\n    var _width = width\n    var _height = height\n    var _data = new Array(width * height)\n\n    var _this = {}\n\n    _this.setPixel = function(x, y, pixel) {\n      _data[y * _width + x] = pixel\n    }\n\n    _this.write = function(out) {\n\n      //---------------------------------\n      // GIF Signature\n\n      out.writeString('GIF87a')\n\n      //---------------------------------\n      // Screen Descriptor\n\n      out.writeShort(_width)\n      out.writeShort(_height)\n\n      out.writeByte(0x80) // 2bit\n      out.writeByte(0)\n      out.writeByte(0)\n\n      //---------------------------------\n      // Global Color Map\n\n      // black\n      out.writeByte(0x00)\n      out.writeByte(0x00)\n      out.writeByte(0x00)\n\n      // white\n      out.writeByte(0xff)\n      out.writeByte(0xff)\n      out.writeByte(0xff)\n\n      //---------------------------------\n      // Image Descriptor\n\n      out.writeString(',')\n      out.writeShort(0)\n      out.writeShort(0)\n      out.writeShort(_width)\n      out.writeShort(_height)\n      out.writeByte(0)\n\n      //---------------------------------\n      // Local Color Map\n\n      //---------------------------------\n      // Raster Data\n\n      var lzwMinCodeSize = 2\n      var raster = getLZWRaster(lzwMinCodeSize)\n\n      out.writeByte(lzwMinCodeSize)\n\n      var offset = 0\n\n      while (raster.length - offset > 255) {\n        out.writeByte(255)\n        out.writeBytes(raster, offset, 255)\n        offset += 255\n      }\n\n      out.writeByte(raster.length - offset)\n      out.writeBytes(raster, offset, raster.length - offset)\n      out.writeByte(0x00)\n\n      //---------------------------------\n      // GIF Terminator\n      out.writeString(';')\n    }\n\n    var bitOutputStream = function(out) {\n\n      var _out = out\n      var _bitLength = 0\n      var _bitBuffer = 0\n\n      var _this = {}\n\n      _this.write = function(data, length) {\n\n        if ((data >>> length) != 0) {\n          throw 'length over'\n        }\n\n        while (_bitLength + length >= 8) {\n          _out.writeByte(0xff & ((data << _bitLength) | _bitBuffer))\n          length -= (8 - _bitLength)\n          data >>>= (8 - _bitLength)\n          _bitBuffer = 0\n          _bitLength = 0\n        }\n\n        _bitBuffer = (data << _bitLength) | _bitBuffer\n        _bitLength = _bitLength + length\n      }\n\n      _this.flush = function() {\n        if (_bitLength > 0) {\n          _out.writeByte(_bitBuffer)\n        }\n      }\n\n      return _this\n    }\n\n    var getLZWRaster = function(lzwMinCodeSize) {\n\n      var clearCode = 1 << lzwMinCodeSize\n      var endCode = (1 << lzwMinCodeSize) + 1\n      var bitLength = lzwMinCodeSize + 1\n\n      // Setup LZWTable\n      var table = lzwTable()\n\n      for (var i = 0; i < clearCode; i += 1) {\n        table.add(String.fromCharCode(i))\n      }\n      table.add(String.fromCharCode(clearCode))\n      table.add(String.fromCharCode(endCode))\n\n      var byteOut = byteArrayOutputStream()\n      var bitOut = bitOutputStream(byteOut)\n\n      // clear code\n      bitOut.write(clearCode, bitLength)\n\n      var dataIndex = 0\n\n      var s = String.fromCharCode(_data[dataIndex])\n      dataIndex += 1\n\n      while (dataIndex < _data.length) {\n\n        var c = String.fromCharCode(_data[dataIndex])\n        dataIndex += 1\n\n        if (table.contains(s + c)) {\n\n          s = s + c\n\n        } else {\n\n          bitOut.write(table.indexOf(s), bitLength)\n\n          if (table.size() < 0xfff) {\n\n            if (table.size() == (1 << bitLength)) {\n              bitLength += 1\n            }\n\n            table.add(s + c)\n          }\n\n          s = c\n        }\n      }\n\n      bitOut.write(table.indexOf(s), bitLength)\n\n      // end code\n      bitOut.write(endCode, bitLength)\n\n      bitOut.flush()\n\n      return byteOut.toByteArray()\n    }\n\n    var lzwTable = function() {\n\n      var _map = {}\n      var _size = 0\n\n      var _this = {}\n\n      _this.add = function(key) {\n        if (_this.contains(key)) {\n          throw 'dup key:' + key\n        }\n        _map[key] = _size\n        _size += 1\n      }\n\n      _this.size = function() {\n        return _size\n      }\n\n      _this.indexOf = function(key) {\n        return _map[key]\n      }\n\n      _this.contains = function(key) {\n        return typeof _map[key] != 'undefined'\n      }\n\n      return _this\n    }\n\n    return _this\n  }\n\n  var createDataURL = function(width, height, getPixel) {\n    var gif = gifImage(width, height)\n    for (var y = 0; y < height; y += 1) {\n      for (var x = 0; x < width; x += 1) {\n        gif.setPixel(x, y, getPixel(x, y))\n      }\n    }\n\n    var b = byteArrayOutputStream()\n    gif.write(b)\n\n    var base64 = base64EncodeOutputStream()\n    var bytes = b.toByteArray()\n    for (var i = 0; i < bytes.length; i += 1) {\n      base64.writeByte(bytes[i])\n    }\n    base64.flush()\n\n    return 'data:image/gif;base64,' + base64\n  }\n\n  //---------------------------------------------------------------------\n  // returns qrcode function.\n\n  return qrcode\n}()\n\nexport { qrcode }\n\n// // multibyte support\n// !function() {\n//\n//   qrcode.stringToBytesFuncs['UTF-8'] = function(s) {\n//     // http://stackoverflow.com/questions/18729405/how-to-convert-utf8-string-to-byte-array\n//     function toUTF8Array(str) {\n//       var utf8 = []\n//       for (var i = 0; i < str.length; i++) {\n//         var charcode = str.charCodeAt(i)\n//         if (charcode < 0x80) utf8.push(charcode)\n//         else if (charcode < 0x800) {\n//           utf8.push(0xc0 | (charcode >> 6),\n//             0x80 | (charcode & 0x3f))\n//         } else if (charcode < 0xd800 || charcode >= 0xe000) {\n//           utf8.push(0xe0 | (charcode >> 12),\n//             0x80 | ((charcode >> 6) & 0x3f),\n//             0x80 | (charcode & 0x3f))\n//         }\n//         // surrogate pair\n//         else {\n//           i++\n//           // UTF-16 encodes 0x10000-0x10FFFF by\n//           // subtracting 0x10000 and splitting the\n//           // 20 bits of 0x0-0xFFFFF into two halves\n//           charcode = 0x10000 + (((charcode & 0x3ff) << 10)\n//             | (str.charCodeAt(i) & 0x3ff))\n//           utf8.push(0xf0 | (charcode >> 18),\n//             0x80 | ((charcode >> 12) & 0x3f),\n//             0x80 | ((charcode >> 6) & 0x3f),\n//             0x80 | (charcode & 0x3f))\n//         }\n//       }\n//       return utf8\n//     }\n//\n//     return toUTF8Array(s)\n//   }\n//\n// }();\n//\n// (function(factory) {\n//   if (typeof define === 'function' && define.amd) {\n//     define([], factory)\n//   } else if (typeof exports === 'object') {\n//     module.exports = factory()\n//   }\n// }(function() {\n//   return qrcode\n// }))\n"]}]}