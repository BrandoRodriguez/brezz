{"remainingRequest":"C:\\Users\\Brezgo-1098\\Desktop\\brezz\\node_modules\\babel-loader\\lib\\index.js!C:\\Users\\Brezgo-1098\\Desktop\\brezz\\src\\state.js","dependencies":[{"path":"C:\\Users\\Brezgo-1098\\Desktop\\brezz\\src\\state.js","mtime":1587032502000},{"path":"C:\\Users\\Brezgo-1098\\Desktop\\brezz\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\Brezgo-1098\\Desktop\\brezz\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["C:/Users/Brezgo-1098/Desktop/brezz/src/state.js"],"names":["messages","setupWebRTC","defaultAudioConstraints","defaultVideoConstraints","getDevices","getUserMedia","log","require","DEBUG","location","port","toString","pathname","startsWith","room","substr","length","state","peerID","peers","stream","status","blur","bandwidth","muteVideo","muteAudio","deviceVideo","deviceAudio","devices","on","updateStream","getAudioTracks","forEach","t","enabled","getVideoTracks","switchVideo","blurLib","audio","deviceId","video","constraints","showsDesktop","cursor","navigator","mediaDevices","getDisplayMedia","success","videoTracks","audioTracks","startBlurTransform","Array","from","removeTrack","addTrack","stopBlurTransform","emit","setup","alert","assign","console","error","then"],"mappings":"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","sourcesContent":["import { messages } from './lib/emitter'\nimport { setupWebRTC } from './logic/connection'\nimport { defaultAudioConstraints, defaultVideoConstraints, getDevices, getUserMedia } from './logic/stream'\n\nconst log = require('debug')('app:state')\n\nexport const DEBUG = location.port.toString() === '8080' || !location.pathname.startsWith('/ng/')\n\n// ROOM\n\nlet room = DEBUG ? 'development' : location.pathname.substr('/ng/'.length)\n\n// STATE\n\nexport let state = {\n\n  // ID of this room\n  room,\n\n  // Local users peer ID\n  peerID: null,\n\n  // IDs of all currently active WebRTC peers\n  peers: [],\n\n  // Video stream of the local user without sound\n  stream: null,\n\n  status: {},\n\n  blur: false,\n  bandwidth: false,\n\n  muteVideo: false,\n  muteAudio: false,\n\n  deviceVideo: null,\n  deviceAudio: null,\n\n  devices: [],\n}\n\nmessages.on('updateStream', updateStream)\n\nfunction updateStream() {\n  state.stream.getAudioTracks().forEach(t => t.enabled = !state.muteAudio)\n  state.stream.getVideoTracks().forEach(t => t.enabled = !state.muteVideo)\n}\n\nmessages.on('switchVideo', switchVideo)\n\nlet blurLib\n\nasync function switchVideo() {\n  let audio = {\n    ...defaultAudioConstraints,\n  }\n\n  if (state.deviceAudio) {\n    audio.deviceId = state.deviceAudio\n  }\n\n  let video = {\n    ...defaultVideoConstraints,\n  }\n\n  if (state.deviceVideo) {\n    video.deviceId = state.deviceVideo\n  }\n\n  let constraints = {\n    audio,\n    video,\n  }\n\n  let stream\n  const showsDesktop = state.deviceVideo === 'desktop'\n\n  if (showsDesktop) {\n    log('desktop')\n    video = {\n      video: {\n        cursor: 'always',\n      },\n    }\n    stream = await navigator.mediaDevices.getDisplayMedia(video)\n  } else {\n    stream = await navigator.mediaDevices.getUserMedia(constraints)\n  }\n  log('Stream', stream, constraints)\n  if (stream) {\n    let success = true\n    let videoTracks = stream.getVideoTracks()\n    if (state.deviceVideo && videoTracks?.length <= 0) {\n      state.deviceVideo = null\n      success = false\n    }\n    let audioTracks = stream.getAudioTracks()\n    if (state.deviceAudio && audioTracks?.length <= 0) {\n      state.deviceAudio = null\n      success = false\n    }\n\n    if (!success) {\n      return await switchVideo()\n    }\n\n    log('blur what?', state.blur, blurLib)\n    if (state.blur && !showsDesktop) {\n      if (!blurLib) {\n        blurLib = await import(/* webpackChunkName: 'blur' */ './logic/blur')\n      }\n      stream = await blurLib.startBlurTransform(stream)\n      Array.from(stream.getAudioTracks()).forEach(t => stream.removeTrack(t))\n      audioTracks.forEach(t => stream.addTrack(t))\n    } else if (blurLib) {\n      log('stop blur')\n      blurLib.stopBlurTransform()\n    }\n\n    state.stream = stream\n    updateStream()\n\n    messages.emit('setLocalStream', state.stream)\n\n  } else {\n    log('Stream not found')\n  }\n}\n\nasync function setup() {\n  try {\n\n    if (!await setupWebRTC(state)) {\n      alert('Your browser does not support the required WebRTC technologies.\\n\\nPlease reconnect using an up to date web browser.\\n\\nThanks for your understanding.')\n      location.assign('/ng/')\n      return\n    }\n\n    let stream = await getUserMedia()\n\n    // Safari getDevices only works immediately after getUserMedia (bug)\n    state.devices = await getDevices()\n\n    state.stream = stream\n    updateStream()\n\n    messages.emit('setLocalStream', state.stream)\n\n  } catch (err) {\n    console.error('Exception:', err)\n  }\n}\n\nsetup().then()\n"]}]}