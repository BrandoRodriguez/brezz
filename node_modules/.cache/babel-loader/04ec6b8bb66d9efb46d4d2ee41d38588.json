{"remainingRequest":"C:\\Users\\Brezgo-1098\\Desktop\\brezz\\node_modules\\babel-loader\\lib\\index.js!C:\\Users\\Brezgo-1098\\Desktop\\brezz\\src\\lib\\emitter.js","dependencies":[{"path":"C:\\Users\\Brezgo-1098\\Desktop\\brezz\\src\\lib\\emitter.js","mtime":1587032502000},{"path":"C:\\Users\\Brezgo-1098\\Desktop\\brezz\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\Brezgo-1098\\Desktop\\brezz\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuYXJyYXkuZmlsdGVyIjsKaW1wb3J0IF9jbGFzc0NhbGxDaGVjayBmcm9tICJDOlxcVXNlcnNcXEJyZXpnby0xMDk4XFxEZXNrdG9wXFxicmV6elxcbm9kZV9tb2R1bGVzXFxAYmFiZWxcXHJ1bnRpbWUvaGVscGVycy9lc20vY2xhc3NDYWxsQ2hlY2siOwppbXBvcnQgX2NyZWF0ZUNsYXNzIGZyb20gIkM6XFxVc2Vyc1xcQnJlemdvLTEwOThcXERlc2t0b3BcXGJyZXp6XFxub2RlX21vZHVsZXNcXEBiYWJlbFxccnVudGltZS9oZWxwZXJzL2VzbS9jcmVhdGVDbGFzcyI7CmltcG9ydCBfZGVmaW5lUHJvcGVydHkgZnJvbSAiQzpcXFVzZXJzXFxCcmV6Z28tMTA5OFxcRGVza3RvcFxcYnJlenpcXG5vZGVfbW9kdWxlc1xcQGJhYmVsXFxydW50aW1lL2hlbHBlcnMvZXNtL2RlZmluZVByb3BlcnR5IjsKCnZhciBsb2cgPSByZXF1aXJlKCdkZWJ1ZycpKCdhcHA6ZW1pdHRlcicpOwoKZXhwb3J0IHZhciBFbWl0dGVyID0gLyojX19QVVJFX18qL2Z1bmN0aW9uICgpIHsKICBmdW5jdGlvbiBFbWl0dGVyKCkgewogICAgX2NsYXNzQ2FsbENoZWNrKHRoaXMsIEVtaXR0ZXIpOwoKICAgIF9kZWZpbmVQcm9wZXJ0eSh0aGlzLCAic3Vic2NyaWJlcnMiLCB7fSk7CiAgfQoKICBfY3JlYXRlQ2xhc3MoRW1pdHRlciwgW3sKICAgIGtleTogImVtaXQiLAogICAgdmFsdWU6IGZ1bmN0aW9uIGVtaXQoa2V5LCBpbmZvKSB7CiAgICAgIHRyeSB7CiAgICAgICAgdmFyIHN1YnNjcmliZXJzID0gdGhpcy5zdWJzY3JpYmVyc1trZXldIHx8IFtdOwoKICAgICAgICBmb3IgKHZhciBpID0gMDsgaSA8IHN1YnNjcmliZXJzLmxlbmd0aDsgaSsrKSB7CiAgICAgICAgICB2YXIgZm4gPSBzdWJzY3JpYmVyc1tpXTsKCiAgICAgICAgICB0cnkgewogICAgICAgICAgICBmbihpbmZvKTsKICAgICAgICAgIH0gY2F0Y2ggKGVycikgewogICAgICAgICAgICBjb25zb2xlLndhcm4oJ2VtaXQgd2FybmluZzonLCBlcnIpOwogICAgICAgICAgfQogICAgICAgIH0KICAgICAgfSBjYXRjaCAoZXJyKSB7CiAgICAgICAgY29uc29sZS5lcnJvcignZW1pdCBleGNlcHRpb24nLCBlcnIpOwogICAgICB9CiAgICB9CiAgfSwgewogICAga2V5OiAib24iLAogICAgdmFsdWU6IGZ1bmN0aW9uIG9uKGtleSwgZm4pIHsKICAgICAgdmFyIHN1YnNjcmliZXJzID0gdGhpcy5zdWJzY3JpYmVyc1trZXldIHx8IFtdOwogICAgICBzdWJzY3JpYmVycy5wdXNoKGZuKTsKICAgICAgdGhpcy5zdWJzY3JpYmVyc1trZXldID0gc3Vic2NyaWJlcnM7CiAgICB9CiAgfSwgewogICAga2V5OiAib2ZmIiwKICAgIHZhbHVlOiBmdW5jdGlvbiBvZmYoa2V5LCBmbikgewogICAgICB0aGlzLnN1YnNjcmliZXJzID0gKHRoaXMuc3Vic2NyaWJlcnNba2V5XSB8fCBbXSkuZmlsdGVyKGZ1bmN0aW9uIChmKSB7CiAgICAgICAgcmV0dXJuIGZuICYmIGYgIT09IGZuOwogICAgICB9KTsKICAgIH0KICB9XSk7CgogIHJldHVybiBFbWl0dGVyOwp9KCk7CmV4cG9ydCB2YXIgbWVzc2FnZXMgPSBuZXcgRW1pdHRlcigpOw=="},{"version":3,"sources":["C:/Users/Brezgo-1098/Desktop/brezz/src/lib/emitter.js"],"names":["log","require","Emitter","key","info","subscribers","i","length","fn","err","console","warn","error","push","filter","f","messages"],"mappings":";;;;;AAAA,IAAMA,GAAG,GAAGC,OAAO,CAAC,OAAD,CAAP,CAAiB,aAAjB,CAAZ;;AAEA,WAAaC,OAAb;AAAA;AAAA;;AAAA,yCAEgB,EAFhB;AAAA;;AAAA;AAAA;AAAA,yBAIOC,GAJP,EAIYC,IAJZ,EAIkB;AACd,UAAI;AACF,YAAIC,WAAW,GAAG,KAAKA,WAAL,CAAiBF,GAAjB,KAAyB,EAA3C;;AACA,aAAK,IAAIG,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGD,WAAW,CAACE,MAAhC,EAAwCD,CAAC,EAAzC,EAA6C;AAC3C,cAAME,EAAE,GAAGH,WAAW,CAACC,CAAD,CAAtB;;AACA,cAAI;AACFE,YAAAA,EAAE,CAACJ,IAAD,CAAF;AACD,WAFD,CAEE,OAAOK,GAAP,EAAY;AACZC,YAAAA,OAAO,CAACC,IAAR,CAAa,eAAb,EAA8BF,GAA9B;AACD;AACF;AACF,OAVD,CAUE,OAAOA,GAAP,EAAY;AACZC,QAAAA,OAAO,CAACE,KAAR,CAAc,gBAAd,EAAgCH,GAAhC;AACD;AACF;AAlBH;AAAA;AAAA,uBAoBKN,GApBL,EAoBUK,EApBV,EAoBc;AACV,UAAIH,WAAW,GAAG,KAAKA,WAAL,CAAiBF,GAAjB,KAAyB,EAA3C;AACAE,MAAAA,WAAW,CAACQ,IAAZ,CAAiBL,EAAjB;AACA,WAAKH,WAAL,CAAiBF,GAAjB,IAAwBE,WAAxB;AACD;AAxBH;AAAA;AAAA,wBA0BMF,GA1BN,EA0BWK,EA1BX,EA0Be;AACX,WAAKH,WAAL,GAAmB,CAAC,KAAKA,WAAL,CAAiBF,GAAjB,KAAyB,EAA1B,EAA8BW,MAA9B,CAAqC,UAAAC,CAAC;AAAA,eAAIP,EAAE,IAAIO,CAAC,KAAKP,EAAhB;AAAA,OAAtC,CAAnB;AACD;AA5BH;;AAAA;AAAA;AAgCA,OAAO,IAAMQ,QAAQ,GAAG,IAAId,OAAJ,EAAjB","sourcesContent":["const log = require('debug')('app:emitter')\n\nexport class Emitter {\n\n  subscribers = {}\n\n  emit(key, info) {\n    try {\n      let subscribers = this.subscribers[key] || []\n      for (let i = 0; i < subscribers.length; i++) {\n        const fn = subscribers[i]\n        try {\n          fn(info)\n        } catch (err) {\n          console.warn('emit warning:', err)\n        }\n      }\n    } catch (err) {\n      console.error('emit exception', err)\n    }\n  }\n\n  on(key, fn) {\n    let subscribers = this.subscribers[key] || []\n    subscribers.push(fn)\n    this.subscribers[key] = subscribers\n  }\n\n  off(key, fn) {\n    this.subscribers = (this.subscribers[key] || []).filter(f => fn && f !== fn)\n  }\n\n}\n\nexport const messages = new Emitter()\n"]}]}